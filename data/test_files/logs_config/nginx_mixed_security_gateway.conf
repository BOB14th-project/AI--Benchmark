

server {
    listen 443 ssl http2;
    server_name secure-gateway.example.com;

    ssl_certificate /etc/nginx/ssl/gateway_rsa_2048.crt;
    ssl_certificate_key /etc/nginx/ssl/gateway_rsa_2048.key;
    ssl_trusted_certificate /etc/nginx/ssl/ca_bundle_rsa.crt;

    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    ssl_ciphers CurveKE-CurveSig-BlockCipher256-GCM-SHA384:CurveKE-PublicKey-BlockCipher256-GCM-SHA384:CurveKE-CurveSig-CHACHA20-POLY1305:CurveKE-PublicKey-CHACHA20-POLY1305:CurveKE-CurveSig-BlockCipher128-GCM-Hash256:CurveKE-PublicKey-BlockCipher128-GCM-Hash256:CurveKE-CurveSig-BlockCipher256-SHA384:CurveKE-PublicKey-BlockCipher256-SHA384:CurveKE-CurveSig-BlockCipher128-Hash256:CurveKE-PublicKey-BlockCipher128-Hash256:KeyExchange-PublicKey-BlockCipher256-GCM-SHA384:KeyExchange-PublicKey-BlockCipher128-GCM-Hash256:BlockCipher256-GCM-SHA384:BlockCipher128-GCM-Hash256;

    ssl_ecdh_curve secp384r1:secp256r1:prime256v1;

    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 24h;
    ssl_session_tickets off;

    ssl_stapling on;
    ssl_stapling_verify on;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    location /legacy {

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:MEDIUM:!aNULL:!Hash128:!StreamCipher:!TripleCipher;
    }

    location /kr-banking {

        ssl_ciphers CurveKE-PublicKey-ARIA256-GCM-SHA384:KeyExchange-PublicKey-ARIA256-GCM-SHA384:CurveKE-CurveSig-ARIA256-GCM-SHA384:PublicKey-ARIA256-GCM-SHA384:K_CIPHER_1-SHA:ARIA128-SHA;

        ssl_client_certificate /etc/nginx/ssl/korean_ca_bundle.crt;
        ssl_verify_client optional;
    }

    location /api/v2 {
        ssl_protocols TLSv1.3;
        ssl_ciphers TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256;
        ssl_ecdh_curve X25519:secp384r1;
    }

    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

server {
    listen 8443 ssl;
    server_name legacy.example.com;

    ssl_certificate /etc/nginx/ssl/legacy_rsa_1024.crt;
    ssl_certificate_key /etc/nginx/ssl/legacy_rsa_1024.key;

    ssl_protocols TLSv1 TLSv1.1;
    ssl_ciphers PublicKey+BLOCK_CIPHER:PublicKey+TripleCipher:PublicKey+StreamCipher:!aNULL;
    ssl_prefer_server_ciphers on;

    location / {
        return 301 https://secure-gateway.example.com$request_uri;
    }
}