# Enterprise Banking Gateway - SSL/TLS Configuration
# Compliant with Korean Financial Security Standards
# Last Updated: 2024-12-20

LoadModule ssl_module modules/mod_ssl.so
LoadModule headers_module modules/mod_headers.so

Listen 8443
Listen 9443

# Global SSL Configuration
SSLPassPhraseDialog exec:/usr/local/bin/secure-passphrase
SSLSessionCache shmcb:/var/cache/apache2/ssl_scache(2048000)
SSLSessionCacheTimeout 600

SSLRandomSeed startup file:/dev/urandom 4096
SSLRandomSeed connect builtin

# Main Banking Portal
<VirtualHost *:8443>
    ServerName banking.example.kr
    ServerAdmin security@example.kr
    DocumentRoot /var/www/banking

    SSLEngine on

    # Certificate Configuration - 2048-bit key
    SSLCertificateFile /etc/ssl/certs/banking-portal.crt
    SSLCertificateKeyFile /etc/ssl/private/banking-portal.key
    SSLCertificateChainFile /etc/ssl/certs/korea-root-ca.crt

    # Protocol Configuration - Korean Banking Standards
    SSLProtocol -all +TLSv1.2 +TLSv1.3

    # Cipher Suite - Korean Cryptographic Standards Priority
    # Format: KeyExchange-Authentication-Encryption-MAC
    SSLCipherSuite ECDHE-RSA-BlockCipher128KR-GCM-SHA256:ECDHE-RSA-BlockCipher256KR-GCM-SHA384:ECDHE-ECDSA-BlockCipher128KR-GCM-SHA256:ECDHE-ECDSA-BlockCipher256KR-GCM-SHA384:DHE-RSA-BlockCipher128KR-SHA256:DHE-RSA-BlockCipher256KR-SHA384

    # Korean Algorithm Support
    SSLOpenSSLConfCmd CipherString "SEED-SHA256:SEED-SHA384:ARIA-128-GCM-SHA256:ARIA-256-GCM-SHA384"

    SSLHonorCipherOrder on
    SSLCompression off

    # Elliptic Curve Configuration - Korean Standards
    SSLOpenSSLConfCmd Curves secp256r1:brainpoolP256r1:secp384r1

    # HSTS Configuration
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

    # Client Certificate Authentication
    SSLVerifyClient require
    SSLVerifyDepth 3
    SSLCACertificateFile /etc/ssl/certs/korea-banking-ca-bundle.crt
    SSLCARevocationCheck chain
    SSLCARevocationFile /etc/ssl/crl/korea-banking.crl

    # Certificate Status Protocol
    SSLUseStapling on
    SSLStaplingResponderTimeout 5

    <Directory /var/www/banking>
        SSLRequireSSL
        SSLOptions +StdEnvVars +ExportCertData

        # Require Korean Standard Ciphers
        SSLRequire %{SSL_CIPHER} =~ /SEED|ARIA|HIGHT/

        AllowOverride None
        Require valid-user
    </Directory>

    # Logging with cipher details
    ErrorLog ${APACHE_LOG_DIR}/banking-ssl-error.log
    CustomLog ${APACHE_LOG_DIR}/banking-ssl-access.log \
        "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x %{SSL_CLIENT_S_DN}x \"%r\" %b"

    LogLevel info ssl:debug
</VirtualHost>

# Internal API Server
<VirtualHost *:9443>
    ServerName api-internal.example.kr

    SSLEngine on

    SSLCertificateFile /etc/ssl/certs/api-internal.crt
    SSLCertificateKeyFile /etc/ssl/private/api-internal.key

    # Internal API - Korean Lightweight Cipher for IoT devices
    SSLProtocol -all +TLSv1.2 +TLSv1.3

    # Lightweight cipher suite for constrained devices
    SSLCipherSuite ECDHE-ECDSA-LightweightCipher64-SHA256:ECDHE-RSA-LightweightCipher64-SHA256:ECDHE-ECDSA-BlockCipher128KR-SHA256

    # Support for 64-bit lightweight block cipher
    SSLOpenSSLConfCmd CipherString "HIGHT-SHA256:LEA-128-CBC-SHA256:LEA-256-CBC-SHA384"

    # Digital Signature Configuration - Korean Standard
    SSLOpenSSLConfCmd SignatureAlgorithms ecdsa_secp256r1_sha256:rsa_pss_rsae_sha256:kcdsa_sha256:ec_kcdsa_sha256

    SSLHonorCipherOrder on

    <Location /api/devices>
        SSLRequireSSL

        # Allow lightweight ciphers for IoT
        SSLRequire %{SSL_CIPHER} =~ /HIGHT|LEA/

        Require ip 10.0.0.0/8 172.16.0.0/12
    </Location>

    ErrorLog ${APACHE_LOG_DIR}/api-internal-ssl-error.log
    LogLevel warn
</VirtualHost>

# OCSP Stapling Configuration
SSLStaplingCache shmcb:/var/run/apache2/stapling_cache(256000)
SSLStaplingStandardCacheTimeout 3600

# Session Ticket Configuration
SSLSessionTickets off  # Disabled for PFS
