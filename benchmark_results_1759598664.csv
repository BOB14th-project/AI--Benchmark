test_id,provider,model,agent_type,success,valid_json,confidence_score,detected_quantum_vulnerable_count,response_time,json_valid,summary,file_path,total_tokens,prompt_tokens,completion_tokens,timestamp,error
AdvancedComputationalFramework,google,gemini-2.0-flash-exp,source_code,True,True,0.9,6,4.884012222290039,True,"The code uses RSA with a 2048-bit key size and a small public exponent (65537), which are vulnerable to quantum attacks. It also uses SHA-1, which is a weak hash function. The random number generator used for key generation is not cryptographically secure. The code imports the 'openssl' library, which may contain deprecated cipher suites.",data/test_files/source_code/AdvancedComputationalFramework.rb,0,0,0,1759571238.313559,
AdvancedCryptographicOrchestrator,google,gemini-2.0-flash-exp,source_code,True,True,0.9,3,4.356425046920776,True,"Detected ECC, SHA-256, and PKCS#1 v1.5. The use of PKCS#1 v1.5 padding is a potential vulnerability. SHA-256 is not considered weak, but its security depends on proper implementation and key management. Elliptic Curve Cryptography is vulnerable to quantum attacks.",data/test_files/source_code/AdvancedCryptographicOrchestrator.java,0,0,0,1759571243.674551,
AdvancedMathematicalFramework,google,gemini-2.0-flash-exp,source_code,True,True,0.9,1,3.572906017303467,True,"SHA-256 is detected. While SHA-256 itself is not considered a 'weak' hash function in the same category as MD5 or SHA-1, its usage without proper salting or within specific contexts could potentially lead to vulnerabilities. Further analysis is needed to determine the specific usage and potential risks.",data/test_files/source_code/AdvancedMathematicalFramework.rs,0,0,0,1759571248.2579882,
AutomotiveSecurityUnit,google,gemini-2.0-flash-exp,source_code,True,True,1.0,0,3.2729721069335938,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/AutomotiveSecurityUnit.cpp,0,0,0,1759571252.5382998,
BankingSecurityModule,google,gemini-2.0-flash-exp,source_code,True,True,0.7,1,3.4396369457244873,True,"The code uses java.security.SecureRandom for random number generation. A custom block cipher is implemented, but without explicit algorithm name or standard library usage, it's not possible to determine its vulnerability status.",data/test_files/source_code/BankingSecurityModule.java,0,0,0,1759571256.985507,
BlockchainCryptographyEngine,google,gemini-2.0-flash-exp,source_code,True,True,0.75,2,3.7422969341278076,True,"The code implements Elliptic Curve Cryptography (ECC) using the ECPoint class and associated methods for point addition, doubling, and scalar multiplication. It also uses java.security.SecureRandom for key generation.",data/test_files/source_code/BlockchainCryptographyEngine.java,0,0,0,1759571261.731135,
CorporateSecurityOrchestrator,google,gemini-2.0-flash-exp,source_code,True,True,0.9,7,4.281759977340698,True,"The code uses RSA, ECC, DSA, AES, SHA-256, PKCS#1 v1.5, and secrets from the cryptography library, which are potentially vulnerable to quantum attacks or have known weaknesses. The 'secrets' module is generally considered secure for generating random numbers, but its usage should be reviewed in the context of key derivation.",data/test_files/source_code/CorporateSecurityOrchestrator.py,0,0,0,1759571267.019365,
CorporateVPNManager,google,gemini-2.0-flash-exp,source_code,True,True,0.75,3,4.728761911392212,True,"The code implements a custom Feistel network resembling 3DES, which is vulnerable to Grover's algorithm. It also uses SecureRandom without explicit seeding, which can lead to predictable session keys. The custom Feistel implementation and S-box are potential weaknesses.",data/test_files/source_code/CorporateVPNManager.java,0,0,0,1759571272.755834,
DigitalCertificateValidator,google,gemini-2.0-flash-exp,source_code,True,True,0.9,3,5.069401979446411,True,The code uses a vulnerable RSA implementation with a 1024-bit key size and hardcoded small primes for key generation. It also uses a potentially weak hash function (MessageDigest-1). These vulnerabilities make the system susceptible to classical and potentially quantum attacks.,data/test_files/source_code/DigitalCertificateValidator.java,0,0,0,1759571278.8300958,
DistributedComputationEngine,google,gemini-2.0-flash-exp,source_code,True,True,0.6,1,3.9763588905334473,True,The code contains a custom digest processor that appears to be a variant of SHA-256. No other vulnerable cryptographic algorithms were explicitly detected.,data/test_files/source_code/DistributedComputationEngine.py,0,0,0,1759571283.814558,
DistributedComputeManager,google,gemini-2.0-flash-exp,source_code,True,True,1.0,0,2.975658893585205,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/DistributedComputeManager.js,0,0,0,1759571287.797968,
EnterpriseDataSecurityFramework,,,,False,False,0,0,0.39241981506347656,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 50
}
]"
EnterpriseSecurityGateway,,,,False,False,0,0,0.4813389778137207,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 49
}
]"
HardwareSecurity,google,gemini-2.0-flash-exp,source_code,True,True,0.9,4,4.206089973449707,True,"The code uses SHA-1 for hashing and key derivation, which is a weak hash function. It also uses XOR for encryption, which is a very weak encryption method. These vulnerabilities could be exploited to compromise the security of the system.",data/test_files/source_code/HardwareSecurity.java,0,0,0,1759571295.8979971,
IoTDeviceSecurityController,google,gemini-2.0-flash-exp,source_code,True,True,0.7,1,3.802969217300415,True,"The code uses the `crypto/rand` package, which, while generally considered secure, might be vulnerable if not properly seeded or if its output is predictable in the specific context of the application. The custom `CompactCipherEngine` and `StreamProcessor` implementations might contain vulnerabilities due to their lightweight nature and custom design, but without further analysis, it's impossible to confirm.",data/test_files/source_code/IoTDeviceSecurityController.go,0,0,0,1759571300.710558,
LegacyPKISystem,google,gemini-2.0-flash-exp,source_code,True,True,0.9,2,3.5767502784729004,True,DSA and SHA-1 are detected. The code implements DSA for digital signatures and uses SHA-1 for hashing messages before signing. Both DSA and SHA-1 are considered vulnerable.,data/test_files/source_code/LegacyPKISystem.java,0,0,0,1759571305.294881,
MathematicalTransformEngine,google,gemini-2.0-flash-exp,source_code,True,True,0.7,2,4.005704164505005,True,"RSA and ECC implementations are detected. The RSA implementation uses a fixed public exponent, which can be a vulnerability if not handled carefully. The ECC implementation is suggested by the presence of P-256 parameters, but lacks explicit function calls.",data/test_files/source_code/MathematicalTransformEngine.java,0,0,0,1759571310.3084319,
MediaStreamProtection,google,gemini-2.0-flash-exp,source_code,True,True,1.0,2,3.8331613540649414,True,"The code uses RC4 and A5/1 stream ciphers, which are vulnerable algorithms.",data/test_files/source_code/MediaStreamProtection.java,0,0,0,1759571315.149091,
QuantumResistantMessaging,google,gemini-2.0-flash-exp,source_code,False,True,1.0,0,3.1940150260925293,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/QuantumResistantMessaging.java,0,0,0,1759571319.347819,
QuantumSafeTransitionManager,google,gemini-2.0-flash-exp,source_code,True,True,0.75,6,4.420014142990112,True,"The code uses OpenSSL, RSA, ECC, discrete logarithm based algorithms, and symmetric ciphers, which are potentially vulnerable to quantum attacks. It also implements a hybrid system for transitioning to quantum-resistant algorithms.",data/test_files/source_code/QuantumSafeTransitionManager.cpp,0,0,0,1759571324.775486,
SecureChatApplication,google,gemini-2.0-flash-exp,source_code,True,True,0.75,2,4.111417293548584,True,"The code uses a ChaCha20-like stream cipher implementation and a Poly1305-like authentication. It also uses SecureRandom, which might be predictable if not properly seeded. The ChaCha20-like implementation is vulnerable if the key or nonce are reused.",data/test_files/source_code/SecureChatApplication.java,0,0,0,1759571329.894857,
SecureCloudStorage,google,gemini-2.0-flash-exp,source_code,True,True,0.9,2,3.80549693107605,True,AES is detected. SecureRandom is detected.,data/test_files/source_code/SecureCloudStorage.java,0,0,0,1759571334.708075,
SecureTransactionProcessor,google,gemini-2.0-flash-exp,source_code,True,True,0.9,2,3.7489302158355713,True,"SHA-256 and crypto/rand are detected. SHA-256 is not considered weak, but its usage should be reviewed in the context of the application's overall security requirements. The use of crypto/rand is standard for cryptographic operations.",data/test_files/source_code/SecureTransactionProcessor.go,0,0,0,1759571339.465156,
StealthCryptographicLibrary,google,gemini-2.0-flash-exp,source_code,True,True,0.9,5,4.373341083526611,True,"The code uses RSA, ECC, and DSA from the cryptography library. It also uses OAEP padding and the secrets module. No specific vulnerable implementations or Korean algorithms were detected.",data/test_files/source_code/StealthCryptographicLibrary.py,0,0,0,1759571344.845889,
TelecommunicationsSecurityHub,,,,False,False,0,0,0.5011940002441406,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 53
}
]"
a5_trivium_stream_ciphers,,,,False,False,0,0,0.38967180252075195,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 52
}
]"
aes_advanced_encryption,,,,False,False,0,0,0.27977919578552246,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 51
}
]"
aria_korean_block_cipher,,,,False,False,0,0,0.30905795097351074,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 49
}
]"
aria_sha256_ecdsa_government,google,gemini-2.0-flash-exp,source_code,True,True,1.0,0,3.227091073989868,True,No vulnerable algorithms detected.,data/test_files/source_code/aria_sha256_ecdsa_government.py,0,0,0,1759571354.5732732,
blowfish_symmetric_encryption,google,gemini-2.0-flash-exp,source_code,False,True,1.0,0,3.1968929767608643,True,No vulnerable algorithms detected.,data/test_files/source_code/blowfish_symmetric_encryption.c,0,0,0,1759571358.777492,
camellia_block_cipher,google,gemini-2.0-flash-exp,source_code,False,True,1.0,0,3.1482479572296143,True,No vulnerable algorithms detected.,data/test_files/source_code/camellia_block_cipher.c,0,0,0,1759571362.9326131,
cast_feistel_cipher,google,gemini-2.0-flash-exp,source_code,False,True,1.0,0,3.335610866546631,True,No vulnerable algorithms detected.,data/test_files/source_code/cast_feistel_cipher.c,0,0,0,1759571367.2716029,
chacha20_poly1305_aead,google,gemini-2.0-flash-exp,source_code,True,True,1.0,0,2.88848876953125,True,No vulnerable algorithms detected.,data/test_files/source_code/chacha20_poly1305_aead.java,0,0,0,1759571371.162763,
cloud_security_orchestrator,google,gemini-2.0-flash-exp,source_code,True,True,0.9,3,3.7062859535217285,True,"Detected RSA key generation with a 2048-bit key size, which is vulnerable to quantum attacks. Also detected the use of SHA-256 and secrets.token_bytes.",data/test_files/source_code/cloud_security_orchestrator.py,0,0,0,1759571375.874027,
database_encryption_engine,google,gemini-2.0-flash-exp,source_code,True,True,1.0,0,2.985407829284668,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/database_encryption_engine.c,0,0,0,1759571379.8675368,
diffie_hellman_key_exchange,google,gemini-2.0-flash-exp,source_code,True,True,0.9,3,4.214756011962891,True,"The code implements Diffie-Hellman key exchange with hardcoded prime numbers, which is vulnerable. It also uses a custom, insecure key derivation function.",data/test_files/source_code/diffie_hellman_key_exchange.java,0,0,0,1759571385.0894778,
digital_identity_platform,google,gemini-2.0-flash-exp,source_code,True,True,0.75,4,4.457125902175903,True,"The code uses SHA-256 for hashing. It also contains a custom ECC implementation with a simplified point multiplication algorithm, which is likely vulnerable. The key derivation functions in performPrivateKeyOperation and performPublicKeyOperation are insecure due to the use of modulus 256.",data/test_files/source_code/digital_identity_platform.js,0,0,0,1759571390.55339,
elgamal_diffie_hellman_pki,google,gemini-2.0-flash-exp,source_code,True,True,0.9,1,3.6286489963531494,True,Detected Diffie-Hellman key exchange implementation in KoreanModularKeyExchange class.,data/test_files/source_code/elgamal_diffie_hellman_pki.py,0,0,0,1759571395.18487,
elliptic_curve_cryptography,google,gemini-2.0-flash-exp,source_code,True,True,0.8,3,3.859692096710205,True,The code implements Elliptic Curve Cryptography (ECC) and uses SHA-256 (truncated implementation). It also uses java.security.SecureRandom for random number generation. The ECC implementation is vulnerable to quantum attacks. The truncated SHA-256 implementation is also a vulnerability.,data/test_files/source_code/elliptic_curve_cryptography.java,0,0,0,1759571400.051465,
financial_risk_analyzer,,,,False,False,0,0,0.40983009338378906,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 58
}
]"
financial_transaction_processor,,,,False,False,0,0,0.25946807861328125,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 57
}
]"
financial_transaction_security,,,,False,False,0,0,0.4118349552154541,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 55
}
]"
government_document_signer,,,,False,False,0,0,0.5056092739105225,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 54
}
]"
idea_international_encryption,,,,False,False,0,0,0.2677490711212158,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 53
}
]"
iot_device_security,,,,False,False,0,0,0.261782169342041,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 51
}
]"
lattice_isogeny_postquantum,,,,False,False,0,0,0.38997626304626465,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 50
}
]"
legacy_authentication_system,,,,False,False,0,0,0.36945509910583496,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 49
}
]"
md5_sha1_weak_hash,google,gemini-2.0-flash-exp,source_code,True,True,0.9,2,3.8365209102630615,True,"The code uses a custom implementation of the MD5 hash algorithm, which is considered a weak hash function and is vulnerable to collision attacks. This is used for password storage and session token generation, posing a security risk.",data/test_files/source_code/md5_sha1_weak_hash.py,0,0,0,1759571415.8103411,
medical_device_encryption,google,gemini-2.0-flash-exp,source_code,True,True,1.0,0,2.907750129699707,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/medical_device_encryption.rs,0,0,0,1759571419.727563,
military_communication_system,google,gemini-2.0-flash-exp,source_code,True,True,0.75,2,4.100284099578857,True,"The code implements a SHA-256-like hash function with a truncated constant array and potentially reduced rounds, making it a weak hash function vulnerable to collision attacks. This deviation from the standard SHA-256 algorithm introduces implementation-specific vulnerabilities.",data/test_files/source_code/military_communication_system.c,0,0,0,1759571424.8356018,
mobile_secure_messenger,google,gemini-2.0-flash-exp,source_code,True,True,0.7,4,3.893906831741333,True,"The code uses a custom stream cipher and simplified ECC operations, which are likely vulnerable. It also uses an insecure random number generator for key generation. The ECC implementation is simplified and likely vulnerable to attacks.",data/test_files/source_code/mobile_secure_messenger.c,0,0,0,1759571429.736981,
network_infrastructure_monitor,google,gemini-2.0-flash-exp,source_code,True,True,0.9,4,4.722232103347778,True,"The code contains vulnerable implementations of RSA and ECC, along with the use of insecure random number generators. The RSA implementation uses a 2048-bit key size and public exponent 65537, but the key generation and processing are highly simplified and insecure. The ECC implementation also uses simplified operations and random byte generation for curve parameters, making it vulnerable. The use of std::random_device and std::mt19937 for key generation is also a potential vulnerability.",data/test_files/source_code/network_infrastructure_monitor.cpp,0,0,0,1759571435.4665952,
ntru_lattice_encryption,google,gemini-2.0-flash-exp,source_code,True,True,0.75,1,3.5860159397125244,True,"The code uses java.security.SecureRandom, which, while intended to be secure, might have implementation-specific vulnerabilities or be seeded improperly, leading to predictability. The code implements NTRU lattice encryption, which is considered post-quantum.",data/test_files/source_code/ntru_lattice_encryption.java,0,0,0,1759571440.05955,
openssl_des_enc,google,gemini-2.0-flash-exp,source_code,False,True,0.9,2,3.6209263801574707,True,"DES cipher detected, which is vulnerable to Grover's algorithm. Legacy OpenSSL DES library is in use.",data/test_files/source_code/openssl_des_enc.c,0,0,0,1759571444.68731,
quantum_resistant_messenger,google,gemini-2.0-flash-exp,source_code,True,True,0.9,2,3.688647985458374,True,SHA-256 is used as a hash function. secrets.randbelow is used as a random number generator.,data/test_files/source_code/quantum_resistant_messenger.py,0,0,0,1759571449.3831859,
rc4_stream_generator,google,gemini-2.0-flash-exp,source_code,True,True,1.0,2,3.9863600730895996,True,"The code contains an implementation of the RC4 stream cipher, which is vulnerable to Grover's algorithm and known implementation-specific vulnerabilities.",data/test_files/source_code/rc4_stream_generator.c,0,0,0,1759571454.377374,
rsa_gen,google,gemini-2.0-flash-exp,source_code,True,True,0.9,1,3.2278618812561035,True,RSA implementation detected via rsa_local.h include.,data/test_files/source_code/rsa_gen.c,0,0,0,1759571458.6124249,
rsa_modular_exponentiation,google,gemini-2.0-flash-exp,source_code,True,True,0.9,5,5.145135879516602,True,"The code uses RSA with a 1024-bit key size, which is vulnerable to classical attacks and will be vulnerable to quantum attacks. It also uses a SHA-1-like hash function and a PKCS#1 v1.5-like padding scheme, both of which are considered weak. The use of os.urandom directly for cryptographic purposes without proper seeding or entropy management is also a potential vulnerability.",data/test_files/source_code/rsa_modular_exponentiation.py,0,0,0,1759571464.765286,
rsa_public_key_system,,,,False,False,0,0,0.4105110168457031,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 53
}
]"
salsa20_stream_cipher,,,,False,False,0,0,0.3894960880279541,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 52
}
]"
secure_messaging_protocol,,,,False,False,0,0,0.39257311820983887,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 51
}
]"
secure_video_streaming,,,,False,False,0,0,0.38409996032714844,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 49
}
]"
seed_aes_hybrid_banking,google,gemini-2.0-flash-exp,source_code,True,True,1.0,0,3.029959201812744,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/seed_aes_hybrid_banking.py,0,0,0,1759571474.398263,
seed_stream_cipher,google,gemini-2.0-flash-exp,source_code,True,True,1.0,0,3.482120990753174,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/seed_stream_cipher.py,0,0,0,1759571478.887854,
serpent_substitution_network,google,gemini-2.0-flash-exp,source_code,False,True,1.0,0,3.190614938735962,True,No vulnerable algorithms detected.,data/test_files/source_code/serpent_substitution_network.c,0,0,0,1759571483.0861042,
sha1_rsa_legacy_documents,google,gemini-2.0-flash-exp,source_code,True,True,0.9,3,3.799070119857788,True,"The code contains a vulnerable RSA implementation using small primes and a naive modular exponentiation, and a Korean hash function similar to HAS-160. The RSA implementation is vulnerable to factorization and timing attacks.",data/test_files/source_code/sha1_rsa_legacy_documents.py,0,0,0,1759571487.889993,
skipjack_government_cipher,google,gemini-2.0-flash-exp,source_code,False,True,0.75,1,3.4068801403045654,True,"The code contains an implementation of TEA, a DES variant, which is vulnerable to Grover's algorithm.",data/test_files/source_code/skipjack_government_cipher.c,0,0,0,1759571492.3048441,
smart_card_security,google,gemini-2.0-flash-exp,source_code,True,True,0.9,1,3.3385579586029053,True,"The code uses a TEA-like cipher, which is a symmetric cipher vulnerable to Grover's algorithm.",data/test_files/source_code/smart_card_security.c,0,0,0,1759571496.651187,
tiger_hash_function,google,gemini-2.0-flash-exp,source_code,False,True,1.0,0,3.2500627040863037,True,No vulnerable algorithms detected.,data/test_files/source_code/tiger_hash_function.c,0,0,0,1759571500.906514,
twofish_advanced_encryption,google,gemini-2.0-flash-exp,source_code,False,True,1.0,0,3.08889102935791,True,No vulnerable algorithms detected.,data/test_files/source_code/twofish_advanced_encryption.c,0,0,0,1759571505.0023592,
whirlpool_hash_digest,google,gemini-2.0-flash-exp,source_code,False,True,1.0,0,3.762723684310913,True,No vulnerable algorithms detected.,data/test_files/source_code/whirlpool_hash_digest.c,0,0,0,1759571509.770118,
wireless_network_encryption,google,gemini-2.0-flash-exp,source_code,True,True,1.0,1,3.3380441665649414,True,"Detected RC4 stream cipher implementation, which is vulnerable to Grover's algorithm.",data/test_files/source_code/wireless_network_encryption.c,0,0,0,1759571514.1153421,
adaptive_multi_tenant_crypto_orchestrator,google,gemini-2.0-flash-exp,assembly_binary,False,False,0.0,0,4.625957250595093,False,Failed to parse JSON response,data/test_files/assembly_binary/adaptive_multi_tenant_crypto_orchestrator.s,0,0,0,1759571519.7479029,
advanced_block_standard_operations,,,,False,False,0,0,0.37052202224731445,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 58
}
]"
aes_key_expansion_module,,,,False,False,0,0,0.3132650852203369,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 57
}
]"
aria_encryption_engine,,,,False,False,0,0,0.3233940601348877,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 56
}
]"
automotive_ecu_cryptographic_unit,,,,False,False,0,0,0.401777982711792,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 54
}
]"
banking_transaction_processor,,,,False,False,0,0,0.3142209053039551,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 53
}
]"
biometric_authentication_engine,,,,False,False,0,0,0.5118098258972168,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 52
}
]"
blake2b_hash_engine,,,,False,False,0,0,0.3174750804901123,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 50
}
]"
block_cipher_operations,,,,False,False,0,0,0.31485891342163086,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 49
}
]"
blockchain_consensus_validator,google,gemini-2.0-flash-exp,assembly_binary,False,True,0.6,1,4.414700746536255,True,RSA modular exponentiation is potentially used in the `consensus_signature_verification` function. Further analysis is needed to confirm the full RSA implementation.,data/test_files/assembly_binary/blockchain_consensus_validator.s,0,0,0,1759571536.074772,
chacha20_stream_processor,google,gemini-2.0-flash-exp,assembly_binary,False,True,0.5,1,3.4522509574890137,True,Detected memory allocation for key storage. No specific vulnerable cryptographic algorithms detected.,data/test_files/assembly_binary/chacha20_stream_processor.s,0,0,0,1759571540.535848,
cloud_storage_encryption_processor,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,1,4.0064239501953125,True,"Detected potential Korean domestic algorithm implementation in the `domesticn_cloud_cipher` function. The presence of rotate left instruction, XOR operation, and specific constants suggests a possible Korean algorithm.",data/test_files/assembly_binary/cloud_storage_encryption_processor.s,0,0,0,1759571545.552863,
crypto_trading_platform_engine,google,gemini-2.0-flash-exp,assembly_binary,False,True,0.7,1,3.401002883911133,True,"Detected a function named 'domesticn_trading_cipher', which suggests the potential use of a Korean cryptographic algorithm. Further analysis is needed to determine the specific algorithm and its vulnerability.",data/test_files/assembly_binary/crypto_trading_platform_engine.s,0,0,0,1759571549.963549,
cryptographic_wallet_manager,google,gemini-2.0-flash-exp,assembly_binary,False,True,0.75,3,4.259391784667969,True,"The analysis detected Elliptic Curve Cryptography (specifically secp256k1 point multiplication and point doubling) and a 256-bit hashing algorithm. The presence of secp256k1 point multiplication suggests the use of ECDSA or similar signature schemes, which are vulnerable to quantum attacks. The specific hashing algorithm used is unknown, but the call to digest_alg256_hash indicates its presence.",data/test_files/assembly_binary/cryptographic_wallet_manager.s,0,0,0,1759571555.233671,
diffie_hellman_key_exchange,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.9,5,4.458628177642822,True,"The code implements a Diffie-Hellman key exchange protocol using modular exponentiation. The fast_modular_exponentiation function and the use of rdrand for random number generation are potential areas of concern for side-channel vulnerabilities. The protocol uses a 2048-bit prime, which is vulnerable to post-quantum attacks.",data/test_files/assembly_binary/diffie_hellman_key_exchange.s,0,0,0,1759571560.704101,
digital_signature_processor,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,2,4.018434762954712,True,"RSA modular exponentiation and big integer arithmetic operations detected. The code contains a modular exponentiation function and uses imul and divq instructions, suggesting large integer arithmetic.",data/test_files/assembly_binary/digital_signature_processor.s,0,0,0,1759571565.727946,
distributed_blockchain_consensus_engine,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.8,3,3.807749032974243,True,"Detected BLS12-381 curve usage and modular arithmetic operations, both of which are potentially vulnerable in a post-quantum context. BLS pairing operations are also detected.",data/test_files/assembly_binary/distributed_blockchain_consensus_engine.s,0,0,0,1759571570.539289,
dsa_signature_verification,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.8,7,6.073888063430786,True,The code implements a DSA-like signature algorithm vulnerable to quantum attacks due to its reliance on the discrete logarithm problem. It also includes modular arithmetic operations and a hash function. The fast modular exponentiation implementation is potentially vulnerable to side-channel attacks. Key storage is in the .data section.,data/test_files/assembly_binary/dsa_signature_verification.s,0,0,0,1759571577.625304,
elliptic_curve_point_operations,google,gemini-2.0-flash-exp,assembly_binary,False,True,0.1,0,3.2099907398223877,True,No vulnerable cryptographic algorithms were detected based on explicit evidence in the provided assembly code.,data/test_files/assembly_binary/elliptic_curve_point_operations.s,0,0,0,1759571581.84751,
elliptic_curve_scalar_multiplication,google,gemini-2.0-flash-exp,assembly_binary,False,True,0.9,5,4.3466880321502686,True,"Detected elliptic curve scalar multiplication, modular arithmetic operations, and memory allocation patterns related to elliptic curve cryptography. The code implements elliptic curve point doubling and addition, along with modular reduction and inverse functions. A binary method is used for scalar multiplication.",data/test_files/assembly_binary/elliptic_curve_scalar_multiplication.s,0,0,0,1759571587.2071402,
elliptic_mathematical_operations,,,,False,False,0,0,0.4103207588195801,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 51
}
]"
ellipticsignature_securehashalgo1_operations,,,,False,False,0,0,0.2897672653198242,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 50
}
]"
embedded_authentication_processor,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,3,3.4553768634796143,True,"Feistel Network, Digest Computation, and Domestic Lightweight Transform are detected. These could be vulnerable depending on the specific implementation details.",data/test_files/assembly_binary/embedded_authentication_processor.s,0,0,0,1759571594.37828,
embedded_iot_security_processor,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.9,5,4.852091073989868,True,"The code implements Elliptic Curve Cryptography (specifically NIST P-192), which is vulnerable to quantum attacks. It also uses HIGHT, a lightweight Korean block cipher. The code includes large integer arithmetic operations for curve parameter initialization and memory allocation for key storage. Optimizations for resource-constrained environments are present.",data/test_files/assembly_binary/embedded_iot_security_processor.s,0,0,0,1759571600.2359161,
enterprise_data_protection_engine,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,3,3.700860023498535,True,"The analysis detected a 'Large Modular Computation' function, a 'Domestic Feistel Round' function, and a 'Digest Computation Engine' function. These could be indicative of cryptographic operations, but further analysis is needed to determine the specific algorithms and their vulnerability to quantum attacks.",data/test_files/assembly_binary/enterprise_data_protection_engine.s,0,0,0,1759571604.946653,
feistel_network_operations,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,2,3.953289031982422,True,Potentially vulnerable AES implementation detected based on S-box lookups and XOR operations. The S-box lookups are likely vulnerable to timing attacks.,data/test_files/assembly_binary/feistel_network_operations.s,0,0,0,1759571609.912384,
financial_cryptographic_accelerator,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,2,3.754542112350464,True,"RSA modular exponentiation and a domestic banking cipher are detected. The modular exponentiation unit is called, suggesting RSA or similar algorithm usage. A domestic banking cipher is also detected.",data/test_files/assembly_binary/financial_cryptographic_accelerator.s,0,0,0,1759571614.675412,
government_classified_system_processor,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,2,3.6758499145507812,True,"Detected a call to a function named 'domesticn_government_cipher', which suggests the use of a Korean cryptographic algorithm. Further analysis of the function's implementation is needed to determine the specific algorithm and its vulnerability to quantum attacks.",data/test_files/assembly_binary/government_classified_system_processor.s,0,0,0,1759571619.361398,
hash_digest_operations,google,gemini-2.0-flash-exp,assembly_binary,False,True,0.9,1,4.336155891418457,True,MD5 hash algorithm detected based on initial values and round constants.,data/test_files/assembly_binary/hash_digest_operations.s,0,0,0,1759571624.709774,
hight_lightweight_cipher,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.9,2,3.430291175842285,True,Detected HIGHT lightweight block cipher implementation.,data/test_files/assembly_binary/hight_lightweight_cipher.s,0,0,0,1759571629.14976,
hybrid_banking_security_system,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,3,3.568855047225952,True,RSA modular exponentiation detected in client authentication. Memory allocation for key storage and assembly-level obfuscation are also present.,data/test_files/assembly_binary/hybrid_banking_security_system.s,0,0,0,1759571633.7216809,
industrial_control_security,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.6,2,3.8426527976989746,True,"A custom cipher implementation is suspected based on the presence of key scheduling and encryption functions. Key material is stored on the stack, which could be a security risk.",data/test_files/assembly_binary/industrial_control_security.s,0,0,0,1759571638.57451,
industrial_security_coprocessor,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.6,1,3.7615530490875244,True,Potential big integer arithmetic operations detected using `mulq` instruction in `industrial_key_derivation` and `scada_authentication_module` functions.,data/test_files/assembly_binary/industrial_security_coprocessor.s,0,0,0,1759571643.34706,
kcdsa_signature_generator,,,,False,False,0,0,0.42016005516052246,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 55
}
]"
keyexchange_protocol_operations,,,,False,False,0,0,0.5957028865814209,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 53
}
]"
korean_blockcipher_operations,,,,False,False,0,0,0.393585205078125,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 52
}
]"
lea_block_cipher_engine,,,,False,False,0,0,0.399169921875,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 50
}
]"
legacy_hash_computation,,,,False,False,0,0,0.2908060550689697,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 49
}
]"
legacy_pki_certificate_processor,google,gemini-2.0-flash-exp,assembly_binary,False,True,0.1,0,3.116088628768921,True,"No vulnerable cryptographic algorithms were explicitly detected based on the provided assembly code. The code contains references to signature algorithms and hash algorithms, but lacks specific function calls or library imports that would confirm the use of vulnerable algorithms.",data/test_files/assembly_binary/legacy_pki_certificate_processor.s,0,0,0,1759571654.611464,
md5_sha1_hash_processor,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,1,4.134257078170776,True,"The code appears to implement a vulnerable hash algorithm, potentially MD5 or SHA-1, based on the initialization values, block processing, round functions, and constant used.",data/test_files/assembly_binary/md5_sha1_hash_processor.s,0,0,0,1759571659.758699,
medical_device_security_controller,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.6,2,3.5684430599212646,True,The analysis detected a potential Korean cryptographic algorithm implementation based on the function name 'domesticn_medical_cipher'. Further investigation is needed to determine the specific algorithm and its vulnerability to quantum attacks.,data/test_files/assembly_binary/medical_device_security_controller.s,0,0,0,1759571664.339669,
message_digest_128bit_operations,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.9,1,3.8868260383605957,True,MD5 hash implementation detected based on initial values and constant addition.,data/test_files/assembly_binary/message_digest_128bit_operations.s,0,0,0,1759571669.236324,
mobile_cipher_engine,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.9,1,3.309199810028076,True,A5/1 stream cipher detected. TEA cipher detected.,data/test_files/assembly_binary/mobile_cipher_engine.s,0,0,0,1759571673.553798,
mobile_payment_security_engine,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,1,3.7616639137268066,True,The analysis detected a potential Korean cryptographic algorithm implementation based on the function name 'domesticn_mobile_cipher' and the presence of XOR and rotation operations. Further analysis is needed to determine the specific algorithm and its vulnerability to quantum attacks.,data/test_files/assembly_binary/mobile_payment_security_engine.s,0,0,0,1759571678.322947,
network_security_gateway,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.9,1,3.6447479724884033,True,"DES cipher detected. The code contains calls to des_key_schedule, des_encrypt_block, and des_f_function, indicating a DES implementation.",data/test_files/assembly_binary/network_security_gateway.s,0,0,0,1759571682.976552,
neural_network_inference_accelerator,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.6,3,4.058024883270264,True,Detected a potential Korean cryptographic algorithm implementation ('domesticn_ai_cipher') and a potential side-channel vulnerability due to bitwise rotation operations.,data/test_files/assembly_binary/neural_network_inference_accelerator.s,0,0,0,1759571688.0466769,
ntru_polynomial_processor,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.6,3,4.326555967330933,True,"Detected big integer and modular arithmetic operations, memory allocation for polynomial keys, and potential side-channel vulnerability due to rdrand usage and conditional branching. The code implements polynomial ring operations for lattice-based security, which is a post-quantum cryptography approach. No vulnerable pre-quantum algorithms were explicitly detected.",data/test_files/assembly_binary/ntru_polynomial_processor.s,0,0,0,1759571693.383774,
obfuscated_crypto_library_dispatcher,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.8,5,4.9208619594573975,True,"The code contains implementations of RSA modular exponentiation and elliptic curve cryptography, both of which are vulnerable to quantum attacks. The code is heavily obfuscated to hinder analysis.",data/test_files/assembly_binary/obfuscated_crypto_library_dispatcher.s,0,0,0,1759571699.31758,
openssl_des_enc,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,1,3.9406862258911133,True,DES algorithm detected based on filename and bit manipulation operations.,data/test_files/assembly_binary/openssl_des_enc.asm,0,0,0,1759571704.269584,
openssl_des_enc,,,,False,False,0,0,0,False,,,0,0,0,0,Input validation failed
poly1305_authenticator,,,,False,False,0,0,0.38739800453186035,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 53
}
]"
polymorphic_malware_crypto_engine,,,,False,False,0,0,0.3113718032836914,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 52
}
]"
polynomial_field_arithmetic_engine,,,,False,False,0,0,0.434967041015625,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 50
}
]"
postquantum_multimodal_operations,,,,False,False,0,0,0.30715012550354004,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 49
}
]"
publickey_encryption_operations,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.6,1,3.731292963027954,True,Potential RSA modular exponentiation detected in sub_401100 function due to mul and div instructions and argument count.,data/test_files/assembly_binary/publickey_encryption_operations.s,0,0,0,1759571715.504885,
publickey_modular_operations,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,3,5.008227825164795,True,"The code implements RSA modular exponentiation using repeated squaring and custom big integer arithmetic. The `mul` and `div` instructions within the loop at `loc_401040` suggest modular multiplication, a core component of RSA. The `test %rcx, %rcx` and `shr $1, %rcx` instructions control the exponentiation process. The absence of explicit library calls indicates a custom implementation.",data/test_files/assembly_binary/publickey_modular_operations.s,0,0,0,1759571721.5246332,
publickeyalgo_messagedigest5_operations,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.8,3,4.6772589683532715,True,"The analysis detected RSA modular exponentiation and MD5 hash function implementations. The presence of mul and div instructions in sub_401000 suggests modular arithmetic operations, likely related to RSA. The initialization constants in sub_401100 indicate an MD5 implementation.",data/test_files/assembly_binary/publickeyalgo_messagedigest5_operations.s,0,0,0,1759571727.214512,
quantum_communication_relay,google,gemini-2.0-flash-exp,assembly_binary,True,True,1.0,0,3.186265230178833,True,No vulnerable cryptographic algorithms detected.,data/test_files/assembly_binary/quantum_communication_relay.s,0,0,0,1759571731.413549,
quantum_cryptanalysis_simulation,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.9,3,4.113908052444458,True,"Detected RSA modular exponentiation and large integer arithmetic, Elliptic Curve Cryptography (ECC), and Big Integer Arithmetic. These are targeted for post-quantum vulnerability assessment.",data/test_files/assembly_binary/quantum_cryptanalysis_simulation.s,0,0,0,1759571736.532573,
quantum_migration_bridge_processor,google,gemini-2.0-flash-exp,assembly_binary,True,True,1.0,0,3.1646790504455566,True,No vulnerable cryptographic algorithms detected based on explicit evidence in the provided assembly code.,data/test_files/assembly_binary/quantum_migration_bridge_processor.s,0,0,0,1759571740.701341,
quantum_resistant_lattice_operations,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,3,4.4450013637542725,True,"Detected big integer and modular arithmetic operations, memory allocation for lattice parameters, and potential side-channel vulnerabilities due to rdrand and division operations. The code implements lattice-based cryptography, which is post-quantum, but the implementation may have side-channel vulnerabilities.",data/test_files/assembly_binary/quantum_resistant_lattice_operations.s,0,0,0,1759571746.158386,
quantum_resistant_migration_bridge,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.1,0,3.8085379600524902,True,"No specific vulnerable cryptographic algorithms or library calls were detected in the provided assembly code. The code contains calls to functions like `initialize_legacy_modular_context`, `initialize_legacy_curve_context`, `perform_legacy_key_exchange`, `encrypt_with_legacy_block_cipher`, and `sign_with_legacy_signature`, but without knowing the implementation details of these functions, it's impossible to determine which specific algorithms are being used and whether they are vulnerable.",data/test_files/assembly_binary/quantum_resistant_migration_bridge.s,0,0,0,1759571750.978794,
quantum_safe_communicator,google,gemini-2.0-flash-exp,assembly_binary,False,True,0.75,1,3.8207459449768066,True,The code uses NTRU encryption. Further analysis is needed to determine the specific NTRU parameters and potential vulnerabilities.,data/test_files/assembly_binary/quantum_safe_communicator.s,0,0,0,1759571755.811315,
rsa_key_generation_engine,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.9,5,5.0645129680633545,True,"RSA implementation detected using modular exponentiation, prime generation, and key generation. Big integer arithmetic operations are present. Fast modular exponentiation optimization is used. Key storage in memory is observed. Potential timing side-channel vulnerability in modular exponentiation.",data/test_files/assembly_binary/rsa_key_generation_engine.s,0,0,0,1759571761.8846028,
salsa20_stream_cipher,google,gemini-2.0-flash-exp,assembly_binary,False,True,0.6,1,3.6991329193115234,True,The analysis identified a potential side-channel vulnerability due to the use of addl and roll operations in the quarter_round functions. No other vulnerable cryptographic algorithms were explicitly detected.,data/test_files/assembly_binary/salsa20_stream_cipher.s,0,0,0,1759571766.593981,
satellite_communication_security,,,,False,False,0,0,0.5369420051574707,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 51
}
]"
secure_boot_verification_processor,,,,False,False,0,0,0.3973381519317627,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 50
}
]"
secure_communication_protocol,,,,False,False,0,0,0.394946813583374,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 49
}
]"
secure_hash_256bit_operations,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.8,1,3.8120057582855225,True,"SHA-256 initialization vector constants detected, indicating a possible SHA-256 implementation.",data/test_files/assembly_binary/secure_hash_256bit_operations.s,0,0,0,1759571775.773545,
secure_matrix_transformation_unit,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,1,4.495127201080322,True,"An AES-like block cipher is detected based on the presence of functions like 'block_substitution_layer', 'linear_permutation_layer', 'key_addition_layer', and 'column_mixing_transformation', along with an S-box lookup.",data/test_files/assembly_binary/secure_matrix_transformation_unit.s,0,0,0,1759571781.281676,
siphash_prf_function,google,gemini-2.0-flash-exp,assembly_binary,False,True,0.75,1,3.8011112213134766,True,"The code implements SipHash-2-4, a pseudorandom function, and allocates memory for a secret key. No vulnerable cryptographic algorithms like RSA, ECC, DES, AES, MD5, or SHA-1 are directly detected. The memory allocation for the secret key is detected.",data/test_files/assembly_binary/siphash_prf_function.s,0,0,0,1759571786.09511,
smart_card_authenticator,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.6,2,5.344780921936035,True,"The analysis suggests the presence of a custom block cipher implementation with key storage on the stack. The transform_key_schedule and transform_encrypt_block functions perform operations indicative of a block cipher. However, without explicit algorithm names or library calls, the specific cipher cannot be identified. Key storage on the stack is also detected.",data/test_files/assembly_binary/smart_card_authenticator.s,0,0,0,1759571792.44492,
smart_card_security_module,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,1,3.322402000427246,True,Detected a potential Korean domestic algorithm implementation due to the function name 'domesticn_smartcard_cipher'.,data/test_files/assembly_binary/smart_card_security_module.s,0,0,0,1759571796.779917,
sphincs_signature_scheme,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.75,2,4.114975214004517,True,Detected a simplified HASH-256-like structure in the compute_hash and hash_compression functions. Also detected memory allocation for cryptographic seeds and hash input.,data/test_files/assembly_binary/sphincs_signature_scheme.s,0,0,0,1759571801.905695,
steganographic_crypto_covert_channel,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.7,3,4.135716199874878,True,"RSA-related modular arithmetic and large integer operations are detected within the image processing functions, suggesting potential cryptographic operations hidden within the code. The code is heavily obfuscated to conceal the cryptographic nature of the operations.",data/test_files/assembly_binary/steganographic_crypto_covert_channel.s,0,0,0,1759571807.046855,
stream_cipher_generator,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.9,1,3.4110920429229736,True,RC4 stream cipher detected. Trivium stream cipher detected.,data/test_files/assembly_binary/stream_cipher_generator.s,0,0,0,1759571811.468823,
stream_generator_operations,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.75,1,3.740100145339966,True,RC4 stream cipher implementation detected in sub_401000.,data/test_files/assembly_binary/stream_generator_operations.s,0,0,0,1759571816.2155268,
stream_keygeneration_operations,google,gemini-2.0-flash-exp,assembly_binary,False,True,0.7,1,4.275975227355957,True,RC4 algorithm detected based on key scheduling and keystream generation patterns.,data/test_files/assembly_binary/stream_keygeneration_operations.s,0,0,0,1759571821.500108,
triple_des_encryption_module,google,gemini-2.0-flash-exp,assembly_binary,True,True,0.9,3,4.134882688522339,True,"Detected 3DES implementation, memory allocation for key storage, and potential side-channel vulnerabilities.",data/test_files/assembly_binary/triple_des_encryption_module.s,0,0,0,1759571826.6472309,
vpn_tunnel_encryption_engine,,,,False,False,0,0,0.490908145904541,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 51
}
]"
x25519_key_agreement,,,,False,False,0,0,0.43532705307006836,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 50
}
]"
apache_legacy_ssl,,,,False,False,0,0,0.38215208053588867,False,,,0,0,0,0,"Google API Error: 429 You exceeded your current quota. Please migrate to Gemini 2.0 Flash Preview (Image Generation) (models/gemini-2.0-flash-preview-image-generation) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: ""generativelanguage.googleapis.com/generate_requests_per_model""
  quota_id: ""GenerateRequestsPerMinutePerProjectPerModel""
  quota_dimensions {
    key: ""model""
    value: ""gemini-2.0-flash-exp""
  }
  quota_dimensions {
    key: ""location""
    value: ""global""
  }
  quota_value: 10
}
, links {
  description: ""Learn more about Gemini API quotas""
  url: ""https://ai.google.dev/gemini-api/docs/rate-limits""
}
, retry_delay {
  seconds: 49
}
]"
automotive_v2x_system,google,gemini-2.0-flash-exp,logs_config,True,True,1.0,12,9.336792707443237,True,"Detected use of quantum-vulnerable algorithms including RSA-2048, RSA-3072, ECDSA-P256, ECDSA-P384, ECDH-P256, ECDHE-P256, AES-128, SEED-128, ARIA-128, LEA-128, DES-EDE3, RC4, and MD5. Korean cryptographic standards SEED, ARIA, and LEA are in use. Legacy protocols DES-EDE3, RC4, and MD5 are flagged as deprecated/insecure.",data/test_files/logs_config/automotive_v2x_system.yaml,0,0,0,1759571841.318053,
blockchain_node_security,google,gemini-2.0-flash-exp,logs_config,True,True,0.9,4,7.749871015548706,True,"Detected usage of secp256k1, BLS12-381, secp256r1, x25519, ed25519, AES_128_CTR, AES_256_GCM, AES_128_GCM, CHACHA20_POLY1305, TLS 1.3. Also detected that MD5, SHA1, and RIPEMD128 are disabled.",data/test_files/logs_config/blockchain_node_security.conf,0,0,0,1759571850.082751,
cloud_hsm_operations,google,gemini-2.0-flash-exp,logs_config,True,True,0.95,7,4.88251805305481,True,"The analysis detected the use of RSA (2048 and 3072), EC_P256, AES-256, and the ECDHE-RSA-AES256-GCM-SHA384 cipher suite. A warning message indicates that no post-quantum algorithms are currently supported.",data/test_files/logs_config/cloud_hsm_operations.log,0,0,0,1759571855.9776871,
cloud_storage_encryption,google,gemini-2.0-flash-exp,logs_config,True,True,0.95,10,6.9881579875946045,True,"Detected RSA-4096 for key wrapping and signatures, ECDH-P384 for key exchange, 3DES-EDE3 for legacy support, ECDHE-RSA-AES256-GCM-SHA384 for TLS, ARIA-256 for Korean compliance, and RSA-SHA256 for authentication. These algorithms are flagged as quantum-vulnerable or deprecated.",data/test_files/logs_config/cloud_storage_encryption.conf,0,0,0,1759571863.975256,
cryptocurrency_exchange,google,gemini-2.0-flash-exp,logs_config,True,True,1.0,8,4.953932046890259,True,"Identified RSA-2048 certificates, ECDSA-secp256k1 usage, 3DES encryption, TLS 1.2 protocol, and SHA-1 hashing as vulnerable cryptographic elements based on the provided security log.",data/test_files/logs_config/cryptocurrency_exchange.log,0,0,0,1759571869.941997,
cryptographic_operations_detailed,google,gemini-2.0-flash-exp,logs_config,True,True,0.95,10,7.566839218139648,True,"The analysis detected the use of RSA with 2048-bit modulus, Elliptic Curve Cryptography, Diffie-Hellman key exchange, a Korean domestic algorithm, and legacy digest functions. The system relies on integer factorization and discrete logarithm assumptions, making it vulnerable to quantum attacks. A migration timeline for quantum-resistant algorithms is established.",data/test_files/logs_config/cryptographic_operations_detailed.log,0,0,0,1759571878.51222,
database_encryption_setup,google,gemini-2.0-flash-exp,logs_config,True,True,1.0,7,4.523987054824829,True,"Detected the use of SEED, ARIA, AES and 3DES algorithms. 3DES is deprecated and should be migrated. ECB mode is used with SEED, which is vulnerable to pattern analysis.",data/test_files/logs_config/database_encryption_setup.log,0,0,0,1759571884.041473,
email_server_crypto,google,gemini-2.0-flash-exp,logs_config,True,True,0.9,6,7.087453842163086,True,"Detected RSA certificate configurations, ECDHE and DH configurations, usage of 3DES, and deprecated SSL/TLS protocols.",data/test_files/logs_config/email_server_crypto.conf,0,0,0,1759571892.141332,
enterprise_banking_pki_configuration,google,gemini-2.0-flash-exp,logs_config,True,True,0.95,11,9.038082122802734,True,"Detected RSA, ECC, DH, ARIA, AES, TLS, SHA1, MD5, RC4, DES/3DES. The configuration uses several vulnerable algorithms and key sizes, including RSA with 1024 and 2048 bits, SHA1, MD5, RC4, DES/3DES, and DH with 1024 and 2048 bits. The system also uses Korean domestic algorithms like ARIA. The configuration includes settings for certificate authorities and PKI using vulnerable algorithms. Alerts are configured for weak algorithm usage.",data/test_files/logs_config/enterprise_banking_pki_configuration.conf,0,0,0,1759571902.191081,
financial_payment_gateway,google,gemini-2.0-flash-exp,logs_config,True,True,0.95,7,4.344059944152832,True,"The configuration uses several vulnerable cryptographic algorithms and protocols, including RSA with 1024-bit keys, 3DES, MD5, SHA-1, TLS 1.0 and TLS 1.1. These need to be upgraded to quantum-resistant alternatives.",data/test_files/logs_config/financial_payment_gateway.conf,0,0,0,1759571907.547337,
government_document_system,google,gemini-2.0-flash-exp,logs_config,True,True,0.95,10,7.176459074020386,True,"The system uses several cryptographic algorithms, including Korean standards like SEED, ARIA, HIGHT, KCDSA, HAS-160, and LSH. It also uses RSA and ECDSA for legacy compatibility and fallback. The system is vulnerable to quantum attacks due to the use of RSA, ECDSA, KCDSA, and EC-KCDSA. The logs indicate a need for migration to post-quantum cryptography.",data/test_files/logs_config/government_document_system.log,0,0,0,1759571915.7334,
healthcare_ehr_system,google,gemini-2.0-flash-exp,logs_config,True,True,0.95,9,6.402323961257935,True,"Detected RSA, ECDSA, DSA, AES-128, SHA-256, DES, 3DES, MD5, RC4, and TLS 1.2 configurations. Identified legacy cipher suites and deprecated algorithms. Found log entries indicating the use of vulnerable cryptographic operations.",data/test_files/logs_config/healthcare_ehr_system.yaml,0,0,0,1759571923.147257,
industrial_control_system,google,gemini-2.0-flash-exp,logs_config,True,True,0.95,10,4.434664011001587,True,"The analysis detected the use of RSA, ECDSA, Diffie-Hellman, ARIA, SEED, DSA, and SHA-1 algorithms. The system uses ECDHE-ECDSA-AES128-GCM-SHA256 cipher suite. Legacy DSA and SHA-1 are still in use, indicating potential vulnerabilities to quantum attacks.",data/test_files/logs_config/industrial_control_system.log,0,0,0,1759571928.5933728,
iot_device_firmware_config,google,gemini-2.0-flash-exp,logs_config,True,True,0.9,6,5.378300189971924,True,"The configuration uses RSA and ECDSA with AES in TLS cipher suites, which are vulnerable to quantum attacks. It also uses AES for data at rest encryption. Legacy protocols SSLv3, TLSv1.0 and TLSv1.1 are disabled.",data/test_files/logs_config/iot_device_firmware_config.yaml,0,0,0,1759571934.987318,
korean_crypto_library_config,google,gemini-2.0-flash-exp,logs_config,True,True,0.9,6,4.209578037261963,True,"Detected ECC, DSA, SEED, MD5, and KISA Crypto API usage. MD5 is explicitly disabled. ECC curves secp256r1, secp384r1, and secp521r1 are configured. DSA is configured using KCDSA. SEED is configured with 128-bit key and block size. KISA Crypto API v2.5 is used and KCMVP compliance is configured.",data/test_files/logs_config/korean_crypto_library_config.ini,0,0,0,1759571940.209861,
military_secure_comms,google,gemini-2.0-flash-exp,logs_config,True,True,1.0,6,5.643927097320557,True,"Detected RSA-4096, ECDH-P384, DHE-3072, ARIA-256, 3DES-EDE3, and MD5. RSA, ECDH, and DHE are vulnerable to quantum attacks. 3DES and MD5 are deprecated and vulnerable.",data/test_files/logs_config/military_secure_comms.conf,0,0,0,1759571946.86637,
mobile_app_security_audit,google,gemini-2.0-flash-exp,logs_config,True,True,0.95,7,4.723169803619385,True,"Detected RSA key sizes below recommended strength, use of vulnerable RC4 cipher suite, TLS_RSA_WITH_AES_128_CBC_SHA cipher suite, and TLS 1.2 protocol. Also, ECDHE is in use.",data/test_files/logs_config/mobile_app_security_audit.log,0,0,0,1759571952.602069,
nginx_mixed_security_gateway,google,gemini-2.0-flash-exp,logs_config,True,True,0.95,8,8.60312032699585,True,"The configuration contains several instances of potentially quantum-vulnerable algorithms. RSA is used for certificates and key exchange. AES, ARIA, and SEED are used as symmetric ciphers. The configuration also enables TLSv1.1 and RC4, which are considered legacy and insecure protocols/ciphers.",data/test_files/logs_config/nginx_mixed_security_gateway.conf,0,0,0,1759571962.216647,
openssh,google,gemini-2.0-flash-exp,logs_config,True,True,0.9,7,5.653101921081543,True,"The analysis detected the use of RSA, DSA, ECDSA, and 3DES algorithms. DSA is flagged as not permitted. OpenSSL library is used. RSA is used for host key.",data/test_files/logs_config/openssh.log,0,0,0,1759571968.881878,
quantum_safe_migration_plan,google,gemini-2.0-flash-exp,logs_config,True,True,1.0,7,4.504760980606079,True,"Detected RSA, ECDSA, ECDH, DSA algorithms which are marked as quantum vulnerable. Also detected ECDHE in TLS handshake configuration. Detected liboqs as cryptographic library. Detected Dilithium as post-quantum algorithm.",data/test_files/logs_config/quantum_safe_migration_plan.yaml,0,0,0,1759571974.401891,
satellite_ground_station,,,,False,False,0,0,11.0785071849823,False,,,0,0,0,0,"Google API Error: Content blocked by safety filters: [category: HARM_CATEGORY_HATE_SPEECH
probability: NEGLIGIBLE
, category: HARM_CATEGORY_DANGEROUS_CONTENT
probability: NEGLIGIBLE
, category: HARM_CATEGORY_HARASSMENT
probability: NEGLIGIBLE
, category: HARM_CATEGORY_SEXUALLY_EXPLICIT
probability: NEGLIGIBLE
]"
security_scanner_findings,google,gemini-2.0-flash-exp,logs_config,True,True,1.0,8,4.0987420082092285,True,"Detected vulnerable algorithms including RC4, RSA (1024-bit), MD5, 3DES, Diffie-Hellman (2048-bit), ECDSA (P-192), SEED, and HAS-160.",data/test_files/logs_config/security_scanner_findings.log,0,0,0,1759571991.598211,
smart_city_infrastructure,google,gemini-2.0-flash-exp,logs_config,True,True,1.0,8,8.629995107650757,True,"Detected multiple instances of quantum-vulnerable algorithms including RSA, DSA, ECDSA, DHE, and Korean algorithms (SEED, ARIA, HIGHT, LEA, KCDSA, LSH). Also detected deprecated algorithms like 3DES, Blowfish, RC4, MD5, and SHA-1.",data/test_files/logs_config/smart_city_infrastructure.log,0,0,0,1759572001.2376819,
ssh_server_hardened,google,gemini-2.0-flash-exp,logs_config,False,True,0.9,5,4.725674867630005,True,"The configuration uses RSA, ECDSA, Diffie-Hellman, and AES, which are vulnerable to quantum attacks. DSA is disabled as a deprecated algorithm.",data/test_files/logs_config/ssh_server_hardened.conf,0,0,0,1759572006.977887,
ssl_legacy_banking_configuration,google,gemini-2.0-flash-exp,logs_config,True,True,0.95,7,11.007209062576294,True,"The configuration uses vulnerable algorithms including RSA with 1024-bit keys, RC4, 3DES, SHA1, and MD5. SSLv2 and SSLv3 are disabled, which is good. The DH parameters are also 1024-bit, which is a vulnerability. The configuration needs to be updated to use quantum-resistant algorithms and stronger key lengths.",data/test_files/logs_config/ssl_legacy_banking_configuration.conf,0,0,0,1759572018.9993038,
telecom_5g_network,google,gemini-2.0-flash-exp,logs_config,True,True,1.0,10,10.928107023239136,True,"The configuration uses several algorithms vulnerable to quantum attacks, including RSA (2048, 3072, 4096), DHE-2048, ECDSA, EC-KCDSA, KCDSA, and SHA-1. It also uses Korean algorithms ARIA, SEED, HIGHT, LEA, HAS-160, and LSH. AES is also used.",data/test_files/logs_config/telecom_5g_network.conf,0,0,0,1759572030.9400802,
tls_cipher_negotiation_warnings,google,gemini-2.0-flash-exp,logs_config,True,True,1.0,8,5.7117040157318115,True,"Detected several vulnerable cryptographic algorithms and configurations including RSA-1024, 3DES, RC4, MD5, SHA-1, DH-1024, RSA-SHA1, ARIA-128 and SEED. These algorithms are either deprecated, known to be weak, or have key sizes insufficient for long-term security against quantum computers.",data/test_files/logs_config/tls_cipher_negotiation_warnings.log,0,0,0,1759572037.664153,
vpn_server_runtime,google,gemini-2.0-flash-exp,logs_config,True,True,0.9,4,4.959541082382202,True,"The analysis detected the use of RSA, Diffie-Hellman, and AES-256-CBC. The TLS cipher suite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 is also detected. RSA and DH with 2048-bit keys are considered vulnerable in the long term against quantum computers. AES-256 is considered resistant to Grover's algorithm, but the key exchange mechanism is vulnerable.",data/test_files/logs_config/vpn_server_runtime.log,0,0,0,1759572043.63625,
AdvancedComputationalFramework,openai,gpt-4.1,source_code,True,True,0.95,3,19.538869619369507,True,"Detected explicit use of RSA-like modular exponentiation (quantum-vulnerable) and MD5 hash function. No evidence of ECC, DSA, ElGamal, Korean domestic algorithms, or legacy cipher suites. Indirect implementation of RSA detected via custom modular arithmetic.",data/test_files/source_code/AdvancedComputationalFramework.rb,0,0,0,1759572064.234695,
AdvancedCryptographicOrchestrator,openai,gpt-4.1,source_code,True,True,0.85,2,16.584460973739624,True,"Elliptic Curve Cryptography (ECC) is detected via explicit cryptographic API calls, including obfuscated/indirect usage. No evidence of RSA, DSA, DH, ElGamal, Korean domestic algorithms, or weak symmetric ciphers/hash functions.",data/test_files/source_code/AdvancedCryptographicOrchestrator.java,0,0,0,1759572081.845452,
AdvancedMathematicalFramework,openai,gpt-4.1,source_code,True,True,0.95,1,12.335487842559814,True,SHA-256 hash function usage detected via explicit import; no other quantum-vulnerable cryptographic algorithms or implementations found in the provided code.,data/test_files/source_code/AdvancedMathematicalFramework.rs,0,0,0,1759572095.216665,
AutomotiveSecurityUnit,openai,gpt-4.1,source_code,True,True,1.0,0,14.528661966323853,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/AutomotiveSecurityUnit.cpp,0,0,0,1759572110.7783492,
BankingSecurityModule,openai,gpt-4.1,source_code,True,True,1.0,0,10.846437931060791,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code.,data/test_files/source_code/BankingSecurityModule.java,0,0,0,1759572122.652373,
BlockchainCryptographyEngine,openai,gpt-4.1,source_code,True,True,0.95,4,12.782012939453125,True,"Detected custom implementations of elliptic curve cryptography (ECC/ECDSA) and a SHA-256-like hash function, both quantum-vulnerable. The use of custom (non-standard) code for these primitives may introduce additional implementation-specific vulnerabilities.",data/test_files/source_code/BlockchainCryptographyEngine.java,0,0,0,1759572136.4636428,
CorporateSecurityOrchestrator,openai,gpt-4.1,source_code,True,True,0.98,6,13.469048738479614,True,"Detected explicit imports and potential usage of quantum-vulnerable algorithms: RSA, ECC, DSA, AES, MD5, SHA-1, and vulnerable padding schemes (PKCS#1 v1.5, OAEP). No evidence of Korean domestic algorithms, insecure RNGs, hybrid quantum/classical systems, or legacy/deprecated libraries.",data/test_files/source_code/CorporateSecurityOrchestrator.py,0,0,0,1759572150.9665139,
CorporateVPNManager,openai,gpt-4.1,source_code,True,True,0.95,3,13.287811994552612,True,"Custom triple-round Feistel cipher is implemented with a 24-byte key and 8-byte blocks, mimicking 3DES (Triple DES) structure. This is a quantum-vulnerable symmetric cipher and is also vulnerable to classical attacks due to its legacy design. No evidence of RSA, ECC, DSA, DH, ElGamal, Korean domestic algorithms, weak hash functions, or insecure random number generators was found.",data/test_files/source_code/CorporateVPNManager.java,0,0,0,1759572165.290838,
DigitalCertificateValidator,openai,gpt-4.1,source_code,True,True,0.98,3,11.968840837478638,True,"RSA is explicitly implemented with a 1024-bit key size, which is quantum-vulnerable and below modern security standards. A custom or unknown hash function is used via MessageDigest-1, which may be weak or non-standard. No evidence of ECC, DSA, DH, ElGamal, Korean domestic algorithms, symmetric ciphers, or deprecated cipher suites.",data/test_files/source_code/DigitalCertificateValidator.java,0,0,0,1759572178.2971141,
DistributedComputationEngine,openai,gpt-4.1,source_code,True,True,0.85,1,9.918792963027954,True,SHA-256 hash function detected via hashlib import; no other explicit evidence of quantum-vulnerable cryptographic algorithms or implementations found.,data/test_files/source_code/DistributedComputationEngine.py,0,0,0,1759572189.254635,
DistributedComputeManager,openai,gpt-4.1,source_code,True,True,1.0,0,11.49524712562561,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code.,data/test_files/source_code/DistributedComputeManager.js,0,0,0,1759572201.7859662,
EnterpriseDataSecurityFramework,openai,gpt-4.1,source_code,True,True,0.95,2,20.73487687110901,True,Explicit evidence of quantum-vulnerable RSA and ECC (P-256) implementations detected in the code. No other vulnerable algorithms or patterns detected.,data/test_files/source_code/EnterpriseDataSecurityFramework.c,0,0,0,1759572223.558269,
EnterpriseSecurityGateway,openai,gpt-4.1,source_code,True,True,0.98,2,13.303991079330444,True,"Detected explicit implementations of RSA and elliptic curve cryptography (ECC) using BigInteger modular exponentiation and elliptic curve scalar multiplication, both quantum-vulnerable. No evidence of other quantum-vulnerable or legacy cryptographic algorithms.",data/test_files/source_code/EnterpriseSecurityGateway.java,0,0,0,1759572237.894081,
HardwareSecurity,openai,gpt-4.1,source_code,True,True,0.98,1,10.331682682037354,True,"SHA-1, a weak hash function, is explicitly implemented and used in the code. No other quantum-vulnerable cryptographic algorithms or patterns are detected.",data/test_files/source_code/HardwareSecurity.java,0,0,0,1759572249.2614322,
IoTDeviceSecurityController,openai,gpt-4.1,source_code,True,True,1.0,0,10.536893129348755,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code.,data/test_files/source_code/IoTDeviceSecurityController.go,0,0,0,1759572260.833112,
LegacyPKISystem,openai,gpt-4.1,source_code,True,True,0.98,2,13.611727714538574,True,"Detected explicit implementation of DSA (discrete logarithm based algorithm) and SHA-1 (weak hash function) in the code. No evidence of RSA, ECC, symmetric ciphers, Korean domestic algorithms, or other vulnerable cryptographic elements.",data/test_files/source_code/LegacyPKISystem.java,0,0,0,1759572275.475057,
MathematicalTransformEngine,openai,gpt-4.1,source_code,True,True,0.98,3,11.357885837554932,True,"Detected explicit usage of quantum-vulnerable RSA (modular exponentiation with public exponent and modulus), ECC (P-256 curve parameters), and AES (via javax.crypto imports). No evidence of other vulnerable or legacy algorithms in the provided code.",data/test_files/source_code/MathematicalTransformEngine.java,0,0,0,1759572287.866272,
MediaStreamProtection,openai,gpt-4.1,source_code,True,True,1.0,0,9.407968997955322,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided code segment.,data/test_files/source_code/MediaStreamProtection.java,0,0,0,1759572298.310935,
QuantumResistantMessaging,openai,gpt-4.1,source_code,False,True,1.0,0,11.072983026504517,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code.,data/test_files/source_code/QuantumResistantMessaging.java,0,0,0,1759572310.41796,
QuantumSafeTransitionManager,openai,gpt-4.1,source_code,True,True,0.95,8,15.225389003753662,True,"Detected explicit usage of OpenSSL cryptographic primitives supporting RSA, ECC, DSA/DH, AES, and hash functions (SHA-1/SHA-256), as well as OpenSSL PRNG. Hybrid migration logic indicates mixing of quantum-vulnerable and quantum-resistant algorithms. No evidence of Korean domestic algorithms, vulnerable padding, or implementation-specific flaws.",data/test_files/source_code/QuantumSafeTransitionManager.cpp,0,0,0,1759572326.6760619,
SecureChatApplication,openai,gpt-4.1,source_code,False,True,1.0,0,9.921581745147705,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code.,data/test_files/source_code/SecureChatApplication.java,0,0,0,1759572337.633087,
SecureCloudStorage,openai,gpt-4.1,source_code,True,True,0.95,1,13.871676921844482,True,"AES (a symmetric cipher vulnerable to Grover's algorithm) is explicitly implemented in the code. No evidence of RSA, ECC, DSA, ElGamal, Korean domestic algorithms, weak hash functions, vulnerable padding, insecure RNG/KDF, or hybrid/legacy/deprecated crypto detected.",data/test_files/source_code/SecureCloudStorage.java,0,0,0,1759572352.54068,
SecureTransactionProcessor,openai,gpt-4.1,source_code,True,True,0.85,2,11.021183967590332,True,"SHA-256 hash function is explicitly imported and likely used, which is quantum-vulnerable (though stronger than MD5/SHA-1). A cryptographically secure random number generator (crypto/rand) is also imported, but no evidence of insecure RNG or key derivation. No explicit evidence of RSA, ECC, DSA, DH, ElGamal, Korean domestic algorithms, or legacy/deprecated cipher suites.",data/test_files/source_code/SecureTransactionProcessor.go,0,0,0,1759572364.5987751,
StealthCryptographicLibrary,openai,gpt-4.1,source_code,True,True,0.95,7,16.700238943099976,True,"Detected explicit usage of quantum-vulnerable RSA, ECC, DSA, AES, and weak hash functions (MD5, SHA-1, SHA-256) via cryptography and hashlib imports and function calls. OAEP padding is used with RSA. Obfuscation and indirection are present in the implementation of these algorithms.",data/test_files/source_code/StealthCryptographicLibrary.py,0,0,0,1759572382.325858,
TelecommunicationsSecurityHub,openai,gpt-4.1,source_code,True,True,1.0,0,7.53118109703064,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code.,data/test_files/source_code/TelecommunicationsSecurityHub.java,0,0,0,1759572390.893566,
a5_trivium_stream_ciphers,openai,gpt-4.1,source_code,False,True,1.0,0,7.042215824127197,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/a5_trivium_stream_ciphers.py,0,0,0,1759572398.972403,
aes_advanced_encryption,openai,gpt-4.1,source_code,True,True,1.0,0,7.217525959014893,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/aes_advanced_encryption.java,0,0,0,1759572407.221201,
aria_korean_block_cipher,openai,gpt-4.1,source_code,True,True,1.0,0,9.25240707397461,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/aria_korean_block_cipher.py,0,0,0,1759572417.506377,
aria_sha256_ecdsa_government,openai,gpt-4.1,source_code,True,True,1.0,0,8.594959020614624,True,"No explicit evidence of quantum-vulnerable or legacy cryptographic algorithms, libraries, or API usage detected in the provided code.",data/test_files/source_code/aria_sha256_ecdsa_government.py,0,0,0,1759572427.132051,
blowfish_symmetric_encryption,openai,gpt-4.1,source_code,False,True,1.0,0,8.08063793182373,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/blowfish_symmetric_encryption.c,0,0,0,1759572436.246181,
camellia_block_cipher,openai,gpt-4.1,source_code,False,True,1.0,0,10.249521017074585,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/camellia_block_cipher.c,0,0,0,1759572447.5331998,
cast_feistel_cipher,openai,gpt-4.1,source_code,False,True,1.0,0,7.3458778858184814,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/cast_feistel_cipher.c,0,0,0,1759572455.908009,
chacha20_poly1305_aead,openai,gpt-4.1,source_code,True,True,1.0,0,9.204667806625366,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/chacha20_poly1305_aead.java,0,0,0,1759572466.147594,
cloud_security_orchestrator,openai,gpt-4.1,source_code,True,True,0.85,1,8.310257911682129,True,"SHA-256 is used for HMAC in message authentication, which is quantum-vulnerable. No explicit evidence of RSA, ECC, DSA, DH, ElGamal, Korean domestic algorithms, or legacy/deprecated ciphers detected in the provided code.",data/test_files/source_code/cloud_security_orchestrator.py,0,0,0,1759572475.4952881,
database_encryption_engine,openai,gpt-4.1,source_code,True,True,1.0,0,7.22871994972229,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/database_encryption_engine.c,0,0,0,1759572483.760371,
diffie_hellman_key_exchange,openai,gpt-4.1,source_code,True,True,0.95,3,12.381705045700073,True,"Detected explicit implementation of Diffie-Hellman key exchange (quantum-vulnerable) and a custom, insecure key derivation function. No evidence of RSA, ECC, symmetric ciphers, Korean domestic algorithms, or legacy crypto libraries.",data/test_files/source_code/diffie_hellman_key_exchange.java,0,0,0,1759572497.175616,
digital_identity_platform,openai,gpt-4.1,source_code,True,True,0.98,6,12.17536735534668,True,"Detected explicit use of quantum-vulnerable RSA and ECC (ECDSA/ECDH) algorithms, SHA-256 hash function, insecure random number generation, and custom (potentially insecure) cryptographic implementations. No evidence of discrete logarithm, Korean domestic, or legacy symmetric ciphers.",data/test_files/source_code/digital_identity_platform.js,0,0,0,1759572510.384812,
elgamal_diffie_hellman_pki,openai,gpt-4.1,source_code,True,True,0.95,2,10.843730926513672,True,"Detected custom discrete logarithm-based cryptography (similar to DH/ElGamal) and insecure use of Python's random module for cryptographic key generation. No evidence of RSA, ECC, Korean domestic algorithms, weak hash functions, or legacy cipher suites.",data/test_files/source_code/elgamal_diffie_hellman_pki.py,0,0,0,1759572522.264163,
elliptic_curve_cryptography,openai,gpt-4.1,source_code,True,True,0.98,1,13.200462818145752,True,"Detected explicit implementation of elliptic curve cryptography (ECC/ECDSA), which is quantum-vulnerable. No evidence of other quantum-vulnerable or legacy cryptographic algorithms in the provided code.",data/test_files/source_code/elliptic_curve_cryptography.java,0,0,0,1759572536.498278,
financial_risk_analyzer,openai,gpt-4.1,source_code,True,True,1.0,5,22.011590242385864,True,"Detected explicit use of a custom RSA implementation (quantum-vulnerable), SHA-256 hash function, PKCS#1 v1.5 padding, and use of the secrets module for randomness. No evidence of ECC, DSA, ElGamal, Korean domestic algorithms, or symmetric ciphers such as AES/3DES/DES/RC4. The RSA implementation is manual and may be subject to implementation-specific vulnerabilities.",data/test_files/source_code/financial_risk_analyzer.py,0,0,0,1759572559.537577,
financial_transaction_processor,openai,gpt-4.1,source_code,True,True,1.0,0,8.794874906539917,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code.,data/test_files/source_code/financial_transaction_processor.c,0,0,0,1759572569.368125,
financial_transaction_security,openai,gpt-4.1,source_code,True,True,1.0,0,11.162363052368164,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code.,data/test_files/source_code/financial_transaction_security.c,0,0,0,1759572581.5600939,
government_document_signer,openai,gpt-4.1,source_code,True,True,0.98,6,23.85287880897522,True,"Detected explicit use of elliptic curve cryptography (ECC), specifically a Korean domestic EC-KCDSA-like scheme, with a custom hash function initialized with SHA-1 IVs (indicative of a weak hash function). Insecure random number generation (fixed seed, rand()) and simplified ECC operations introduce additional vulnerabilities. No evidence of RSA, DSA, DH, ElGamal, or symmetric ciphers like AES/3DES/DES/RC4.",data/test_files/source_code/government_document_signer.c,0,0,0,1759572606.437495,
idea_international_encryption,openai,gpt-4.1,source_code,False,True,1.0,0,9.801530122756958,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/idea_international_encryption.java,0,0,0,1759572617.269291,
iot_device_security,openai,gpt-4.1,source_code,True,True,1.0,0,10.255883932113647,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code.,data/test_files/source_code/iot_device_security.c,0,0,0,1759572628.559943,
lattice_isogeny_postquantum,openai,gpt-4.1,source_code,True,True,1.0,0,10.134980201721191,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related insecure implementations detected in the provided source code.,data/test_files/source_code/lattice_isogeny_postquantum.py,0,0,0,1759572639.7196438,
legacy_authentication_system,openai,gpt-4.1,source_code,True,True,0.98,2,13.405049085617065,True,Detected explicit use of quantum-vulnerable RSA (custom implementation) and SHA-1 (legacy hash function) in the code. No evidence of other quantum-vulnerable or deprecated algorithms.,data/test_files/source_code/legacy_authentication_system.c,0,0,0,1759572654.1593862,
md5_sha1_weak_hash,openai,gpt-4.1,source_code,True,True,1.0,0,12.581056833267212,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/md5_sha1_weak_hash.py,0,0,0,1759572667.775984,
medical_device_encryption,openai,gpt-4.1,source_code,True,True,1.0,0,7.971155881881714,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code.,data/test_files/source_code/medical_device_encryption.rs,0,0,0,1759572676.784071,
military_communication_system,openai,gpt-4.1,source_code,False,True,1.0,0,9.608046770095825,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code.,data/test_files/source_code/military_communication_system.c,0,0,0,1759572687.42798,
mobile_secure_messenger,openai,gpt-4.1,source_code,True,True,0.95,1,10.991463899612427,True,"The only explicit detection is the use of an insecure random number generator (rand()) for cryptographic key generation. No explicit evidence of quantum-vulnerable RSA, ECC, DSA, ElGamal, Korean domestic algorithms, AES, 3DES, DES, RC4, weak hash functions, vulnerable padding, hybrid systems, or legacy cipher suites was found.",data/test_files/source_code/mobile_secure_messenger.c,0,0,0,1759572699.45016,
network_infrastructure_monitor,openai,gpt-4.1,source_code,True,True,1.0,0,8.879105806350708,True,No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided code.,data/test_files/source_code/network_infrastructure_monitor.cpp,0,0,0,1759572709.363976,
ntru_lattice_encryption,openai,gpt-4.1,source_code,True,True,1.0,0,10.919153928756714,True,"No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code. The code appears to implement NTRU lattice-based cryptography, which is considered quantum-resistant, and does not reference or utilize any legacy or quantum-vulnerable algorithms or libraries.",data/test_files/source_code/ntru_lattice_encryption.java,0,0,0,1759572721.310082,
openssl_des_enc,openai,gpt-4.1,source_code,False,True,1.0,3,12.176236152648926,True,"DES symmetric cipher detected via OpenSSL DES API usage (DES_encrypt1, #include <openssl/des.h>), which is quantum-vulnerable and deprecated. No evidence of RSA, ECC, DSA, DH, ElGamal, Korean domestic algorithms, weak hash functions, vulnerable padding, or insecure RNG/KDF in the provided code.",data/test_files/source_code/openssl_des_enc.c,0,0,0,1759572734.519835,
quantum_resistant_messenger,openai,gpt-4.1,source_code,True,True,0.95,1,11.772855997085571,True,SHA-256 hash function detected via hashlib import; no explicit evidence of other quantum-vulnerable algorithms or legacy cryptographic primitives.,data/test_files/source_code/quantum_resistant_messenger.py,0,0,0,1759572747.323906,
rc4_stream_generator,openai,gpt-4.1,source_code,True,True,1.0,0,10.896661043167114,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/rc4_stream_generator.c,0,0,0,1759572759.25614,
rsa_gen,openai,gpt-4.1,source_code,True,True,0.98,1,11.398267030715942,True,"RSA key generation and usage is explicitly detected in the provided code, indicating quantum-vulnerable cryptography. No evidence of other vulnerable algorithms or patterns.",data/test_files/source_code/rsa_gen.c,0,0,0,1759572771.690547,
rsa_modular_exponentiation,openai,gpt-4.1,source_code,True,True,0.98,6,17.992967128753662,True,"Detected custom RSA implementation (quantum-vulnerable), custom SHA-1 hash (weak), PKCS#1 v1.5-like padding (vulnerable), textbook RSA encryption (implementation-specific vulnerability), and use of os.urandom for cryptographic randomness. No evidence of ECC, DSA, ElGamal, Korean domestic algorithms, or symmetric ciphers like AES/3DES/DES/RC4.",data/test_files/source_code/rsa_modular_exponentiation.py,0,0,0,1759572790.719529,
rsa_public_key_system,openai,gpt-4.1,source_code,True,True,0.98,3,16.095776081085205,True,"Detected explicit custom RSA implementation with non-standard OAEP-like padding and potential implementation-specific vulnerabilities. No evidence of ECC, DSA, ElGamal, Korean domestic algorithms, or symmetric ciphers.",data/test_files/source_code/rsa_public_key_system.java,0,0,0,1759572807.851146,
salsa20_stream_cipher,openai,gpt-4.1,source_code,True,True,1.0,0,9.296016931533813,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/salsa20_stream_cipher.c,0,0,0,1759572818.182366,
secure_messaging_protocol,openai,gpt-4.1,source_code,True,True,0.98,3,16.987268924713135,True,"Detected explicit implementations of quantum-vulnerable RSA (including PKCS#1 v1.5 signature padding) and elliptic curve cryptography (ECC, secp256k1). No evidence of other vulnerable or legacy algorithms in the provided code.",data/test_files/source_code/secure_messaging_protocol.rb,0,0,0,1759572836.203639,
secure_video_streaming,openai,gpt-4.1,source_code,False,True,1.0,0,14.325223922729492,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/secure_video_streaming.c,0,0,0,1759572851.563318,
seed_aes_hybrid_banking,openai,gpt-4.1,source_code,True,True,1.0,0,10.331597805023193,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided code.,data/test_files/source_code/seed_aes_hybrid_banking.py,0,0,0,1759572862.930366,
seed_stream_cipher,openai,gpt-4.1,source_code,True,True,1.0,0,9.713229894638062,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/seed_stream_cipher.py,0,0,0,1759572873.680619,
serpent_substitution_network,openai,gpt-4.1,source_code,False,True,1.0,0,10.64525818824768,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/serpent_substitution_network.c,0,0,0,1759572885.354979,
sha1_rsa_legacy_documents,openai,gpt-4.1,source_code,True,True,1.0,0,10.330960988998413,True,No explicit evidence of quantum-vulnerable or legacy cryptographic algorithms or library usage detected in the provided code.,data/test_files/source_code/sha1_rsa_legacy_documents.py,0,0,0,1759572896.7217422,
skipjack_government_cipher,openai,gpt-4.1,source_code,False,True,1.0,0,10.537106037139893,True,"No explicit evidence of quantum-vulnerable cryptographic algorithms, libraries, or usage patterns detected in the provided source code.",data/test_files/source_code/skipjack_government_cipher.c,0,0,0,1759572908.295438,
smart_card_security,openai,gpt-4.1,source_code,False,True,1.0,0,8.898262023925781,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/smart_card_security.c,0,0,0,1759572918.226482,
tiger_hash_function,openai,gpt-4.1,source_code,False,True,1.0,0,9.434538841247559,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/tiger_hash_function.c,0,0,0,1759572928.694766,
twofish_advanced_encryption,openai,gpt-4.1,source_code,False,True,1.0,0,8.565574169158936,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/twofish_advanced_encryption.c,0,0,0,1759572938.297527,
whirlpool_hash_digest,openai,gpt-4.1,source_code,False,True,1.0,0,10.141873836517334,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/whirlpool_hash_digest.c,0,0,0,1759572949.473013,
wireless_network_encryption,openai,gpt-4.1,source_code,True,True,1.0,0,7.453843832015991,True,No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code.,data/test_files/source_code/wireless_network_encryption.c,0,0,0,1759572957.958415,
adaptive_multi_tenant_crypto_orchestrator,openai,gpt-4.1,assembly_binary,True,True,0.95,3,9.76881194114685,True,"Detected explicit implementation of RSA modular exponentiation and big integer modular arithmetic in the modular_4096_pss_handler function, including large stack allocation for cryptographic key material. No explicit evidence of elliptic curve, discrete logarithm, Korean, or symmetric quantum-vulnerable algorithms, nor hash functions, cryptographic library calls, or side-channel/obfuscation patterns.",data/test_files/assembly_binary/adaptive_multi_tenant_crypto_orchestrator.s,0,0,0,1759572968.7539809,
advanced_block_standard_operations,openai,gpt-4.1,assembly_binary,True,True,1.0,0,8.240105867385864,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/advanced_block_standard_operations.s,0,0,0,1759572978.028998,
aes_key_expansion_module,openai,gpt-4.1,assembly_binary,True,True,0.98,1,8.185436010360718,True,"AES (FIPS 197) block cipher implementation detected, which is post-classical vulnerable due to Grover's algorithm. No evidence of other vulnerable cryptographic algorithms or library calls.",data/test_files/assembly_binary/aes_key_expansion_module.s,0,0,0,1759572987.2438731,
aria_encryption_engine,openai,gpt-4.1,assembly_binary,True,True,1.0,0,6.951358079910278,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/aria_encryption_engine.s,0,0,0,1759572995.232075,
automotive_ecu_cryptographic_unit,openai,gpt-4.1,assembly_binary,True,True,1.0,0,7.467772006988525,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/automotive_ecu_cryptographic_unit.s,0,0,0,1759573003.7317052,
banking_transaction_processor,openai,gpt-4.1,assembly_binary,True,True,1.0,0,6.956156015396118,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/banking_transaction_processor.s,0,0,0,1759573011.721302,
biometric_authentication_engine,openai,gpt-4.1,assembly_binary,True,True,1.0,0,7.050901174545288,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/biometric_authentication_engine.s,0,0,0,1759573019.808745,
blake2b_hash_engine,openai,gpt-4.1,assembly_binary,False,True,1.0,0,6.848367214202881,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/blake2b_hash_engine.s,0,0,0,1759573027.693564,
block_cipher_operations,openai,gpt-4.1,assembly_binary,True,True,1.0,0,9.822395086288452,True,"No explicit evidence of vulnerable cryptographic algorithms, library calls, or API usage detected in the provided assembly code.",data/test_files/assembly_binary/block_cipher_operations.s,0,0,0,1759573038.5454872,
blockchain_consensus_validator,openai,gpt-4.1,assembly_binary,False,True,1.0,0,7.788739204406738,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/blockchain_consensus_validator.s,0,0,0,1759573047.354319,
chacha20_stream_processor,openai,gpt-4.1,assembly_binary,False,True,1.0,0,9.868828773498535,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/chacha20_stream_processor.s,0,0,0,1759573058.2587578,
cloud_storage_encryption_processor,openai,gpt-4.1,assembly_binary,True,True,1.0,0,7.728235960006714,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/cloud_storage_encryption_processor.s,0,0,0,1759573067.018251,
crypto_trading_platform_engine,openai,gpt-4.1,assembly_binary,False,True,1.0,0,9.922862768173218,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/crypto_trading_platform_engine.s,0,0,0,1759573077.973423,
cryptographic_wallet_manager,openai,gpt-4.1,assembly_binary,False,True,0.95,1,9.417531967163086,True,"Explicit evidence of secp256k1 elliptic curve scalar multiplication is present (secp256k1_point_mul, point_double). No explicit evidence of RSA, DSA, DH, ElGamal, Korean algorithms, symmetric ciphers, or hash functions vulnerable to quantum attacks.",data/test_files/assembly_binary/cryptographic_wallet_manager.s,0,0,0,1759573088.4176571,
diffie_hellman_key_exchange,openai,gpt-4.1,assembly_binary,True,True,0.95,3,16.786974906921387,True,"Detected explicit implementation of a discrete logarithm-based key exchange protocol (Diffie-Hellman) using modular exponentiation and big integer arithmetic. No evidence of RSA, elliptic curve, symmetric ciphers, hash functions, or Korean domestic algorithms. Modular exponentiation is implemented directly in assembly using the binary method.",data/test_files/assembly_binary/diffie_hellman_key_exchange.s,0,0,0,1759573106.235051,
digital_signature_processor,openai,gpt-4.1,assembly_binary,True,True,0.95,2,10.647051095962524,True,"RSA modular exponentiation and big integer modular arithmetic operations are explicitly detected in the binary, indicating use of RSA or similar quantum-vulnerable public key cryptography. No evidence of symmetric ciphers, hash functions, elliptic curve, discrete log, or Korean algorithms.",data/test_files/assembly_binary/digital_signature_processor.s,0,0,0,1759573117.909442,
distributed_blockchain_consensus_engine,openai,gpt-4.1,assembly_binary,True,True,0.85,2,11.87179708480835,True,"Detected explicit use of BLS12-381 elliptic curve operations (post-quantum vulnerable) and modular arithmetic for VDFs (potentially vulnerable to quantum attacks). No evidence of RSA, DSA, DH, ElGamal, Korean algorithms, symmetric ciphers, or hash functions in the provided code.",data/test_files/assembly_binary/distributed_blockchain_consensus_engine.s,0,0,0,1759573130.8110762,
dsa_signature_verification,openai,gpt-4.1,assembly_binary,True,True,0.98,2,9.677753925323486,True,"Explicit evidence of DSA (Discrete Logarithm-based Signature Algorithm) implementation using modular exponentiation and modular inverse operations on large primes, as per FIPS 186-4. No evidence of RSA, elliptic curve, symmetric ciphers, hash functions, or Korean algorithms.",data/test_files/assembly_binary/dsa_signature_verification.s,0,0,0,1759573141.52082,
elliptic_curve_point_operations,openai,gpt-4.1,assembly_binary,False,True,1.0,0,8.622883081436157,True,No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly code.,data/test_files/assembly_binary/elliptic_curve_point_operations.s,0,0,0,1759573151.1743119,
elliptic_curve_scalar_multiplication,openai,gpt-4.1,assembly_binary,False,True,0.95,3,11.78319001197815,True,"Elliptic curve scalar multiplication and modular arithmetic operations are explicitly implemented, which are quantum-vulnerable if used with classical curves. No evidence of RSA, symmetric ciphers, hash functions, or Korean algorithms. Memory allocation for cryptographic structures is present.",data/test_files/assembly_binary/elliptic_curve_scalar_multiplication.s,0,0,0,1759573163.990022,
elliptic_mathematical_operations,openai,gpt-4.1,assembly_binary,False,True,1.0,0,7.367671012878418,True,"No explicit evidence of vulnerable cryptographic algorithms, library calls, or API usage detected in the provided assembly code.",data/test_files/assembly_binary/elliptic_mathematical_operations.s,0,0,0,1759573172.3848681,
ellipticsignature_securehashalgo1_operations,openai,gpt-4.1,assembly_binary,True,True,0.95,1,7.843093395233154,True,SHA-1 cryptographic hash function detected via explicit initialization and round constants. No other explicit evidence of vulnerable cryptographic algorithms or library usage found.,data/test_files/assembly_binary/ellipticsignature_securehashalgo1_operations.s,0,0,0,1759573181.259404,
embedded_authentication_processor,openai,gpt-4.1,assembly_binary,True,True,1.0,0,8.877944946289062,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/embedded_authentication_processor.s,0,0,0,1759573191.167061,
embedded_iot_security_processor,openai,gpt-4.1,assembly_binary,True,True,0.95,5,11.833790302276611,True,"Detected explicit use of NIST P-192 elliptic curve cryptography (ECC), which is post-quantum vulnerable, and the Korean HIGHT block cipher, also not quantum-resistant. No evidence of RSA, DSA, DH, ElGamal, DES, 3DES, RC4, AES, or hash functions. Key storage and ECC optimizations are present.",data/test_files/assembly_binary/embedded_iot_security_processor.s,0,0,0,1759573204.02785,
enterprise_data_protection_engine,openai,gpt-4.1,assembly_binary,True,True,1.0,0,6.942886829376221,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/enterprise_data_protection_engine.s,0,0,0,1759573212.00157,
feistel_network_operations,openai,gpt-4.1,assembly_binary,True,True,0.95,1,11.882551193237305,True,"AES S-box usage detected, indicating AES (likely AES-128) implementation, which is vulnerable to quantum attacks. No other explicit evidence of vulnerable cryptographic algorithms or library calls found.",data/test_files/assembly_binary/feistel_network_operations.s,0,0,0,1759573224.917941,
financial_cryptographic_accelerator,openai,gpt-4.1,assembly_binary,True,True,0.95,3,13.612121820449829,True,"Detected explicit implementation of RSA modular exponentiation and MD5 hash function, both of which are vulnerable to quantum attacks. No evidence of elliptic curve, discrete log, Korean algorithms, or symmetric ciphers such as DES/AES-128.",data/test_files/assembly_binary/financial_cryptographic_accelerator.s,0,0,0,1759573239.561891,
government_classified_system_processor,openai,gpt-4.1,assembly_binary,True,True,1.0,0,12.080338954925537,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/government_classified_system_processor.s,0,0,0,1759573252.668055,
hash_digest_operations,openai,gpt-4.1,assembly_binary,False,True,1.0,1,12.077144145965576,True,Detected explicit implementation of MD5 and SHA-1 cryptographic hash functions based on their unique initialization constants and processing structure. No evidence of other cryptographic algorithms or vulnerable patterns.,data/test_files/assembly_binary/hash_digest_operations.s,0,0,0,1759573265.776449,
hight_lightweight_cipher,openai,gpt-4.1,assembly_binary,True,True,0.98,2,11.059612274169922,True,"Detected explicit implementation of the HIGHT lightweight block cipher, a Korean domestic standard vulnerable to quantum attacks due to its 64-bit block size and 128-bit key. No evidence of RSA, ECC, DSA, DH, ElGamal, DES, 3DES, RC4, AES, or hash functions.",data/test_files/assembly_binary/hight_lightweight_cipher.s,0,0,0,1759573277.867564,
hybrid_banking_security_system,openai,gpt-4.1,assembly_binary,True,True,0.95,3,8.167691707611084,True,RSA modular exponentiation and modular arithmetic operations are explicitly detected via the perform_modular_exponentiation call in the authenticate_client_identity function. Memory allocation for cryptographic key storage is detected via the malloc call in generate_session_key_material. No explicit evidence of other vulnerable algorithms or cryptographic primitives is present.,data/test_files/assembly_binary/hybrid_banking_security_system.s,0,0,0,1759573287.062449,
industrial_control_security,openai,gpt-4.1,assembly_binary,True,True,1.0,0,7.784916400909424,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/industrial_control_security.s,0,0,0,1759573295.8796558,
industrial_security_coprocessor,openai,gpt-4.1,assembly_binary,True,True,1.0,0,8.7030189037323,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/industrial_security_coprocessor.s,0,0,0,1759573305.612273,
kcdsa_signature_generator,openai,gpt-4.1,assembly_binary,True,True,0.95,4,13.730839967727661,True,"Detected a domestic DSA-like digital signature algorithm based on the discrete logarithm problem, using modular exponentiation and big integer arithmetic with domain parameters (p, q, g). No evidence of RSA, elliptic curve, symmetric ciphers, or hash functions. Explicit stack-based key storage and zeroization observed.",data/test_files/assembly_binary/kcdsa_signature_generator.s,0,0,0,1759573320.373098,
keyexchange_protocol_operations,openai,gpt-4.1,assembly_binary,True,True,1.0,0,2.2281689643859863,True,No explicit evidence of vulnerable cryptographic algorithms or related library usage detected in the provided assembly code.,data/test_files/assembly_binary/keyexchange_protocol_operations.s,0,0,0,1759573323.632554,
korean_blockcipher_operations,openai,gpt-4.1,assembly_binary,True,True,1.0,0,7.790699005126953,True,No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly/binary code.,data/test_files/assembly_binary/korean_blockcipher_operations.s,0,0,0,1759573332.451711,
lea_block_cipher_engine,openai,gpt-4.1,assembly_binary,True,True,1.0,0,7.9699547290802,True,No explicit evidence of known quantum-vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/lea_block_cipher_engine.s,0,0,0,1759573341.451831,
legacy_hash_computation,openai,gpt-4.1,assembly_binary,True,True,0.95,1,10.95164704322815,True,Detected explicit implementation of MD5 and SHA-1 cryptographic hash functions via initialization vectors and round constants in hash_alg_process_block and digest_alg1_process_block functions. No evidence of other cryptographic algorithms or library/API usage.,data/test_files/assembly_binary/legacy_hash_computation.s,0,0,0,1759573353.431637,
legacy_pki_certificate_processor,openai,gpt-4.1,assembly_binary,True,True,1.0,0,7.370159864425659,True,No explicit evidence of vulnerable cryptographic algorithm implementations or library calls detected in the provided assembly code.,data/test_files/assembly_binary/legacy_pki_certificate_processor.s,0,0,0,1759573361.8291368,
md5_sha1_hash_processor,openai,gpt-4.1,assembly_binary,True,True,0.98,1,27.805508136749268,True,Explicit evidence of legacy cryptographic hash functions MD5 and SHA-1 detected via their initialization vectors in the initialize_hash_contexts function. No other vulnerable cryptographic algorithms or patterns detected.,data/test_files/assembly_binary/md5_sha1_hash_processor.s,0,0,0,1759573390.667464,
medical_device_security_controller,openai,gpt-4.1,assembly_binary,True,True,1.0,0,8.93437385559082,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/medical_device_security_controller.s,0,0,0,1759573400.629098,
message_digest_128bit_operations,openai,gpt-4.1,assembly_binary,True,True,0.98,1,2.7653369903564453,True,MD5 hash function implementation detected via explicit initialization constants and 64-byte block processing. No other vulnerable cryptographic algorithms or patterns detected.,data/test_files/assembly_binary/message_digest_128bit_operations.s,0,0,0,1759573404.4264152,
mobile_cipher_engine,openai,gpt-4.1,assembly_binary,False,True,1.0,0,8.225764036178589,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/mobile_cipher_engine.s,0,0,0,1759573413.683507,
mobile_payment_security_engine,openai,gpt-4.1,assembly_binary,True,True,1.0,0,7.243739128112793,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/mobile_payment_security_engine.s,0,0,0,1759573421.963625,
network_security_gateway,openai,gpt-4.1,assembly_binary,True,True,0.98,1,7.8530800342559814,True,DES symmetric cipher detected via explicit function names and structure. No evidence of other cryptographic algorithms or libraries.,data/test_files/assembly_binary/network_security_gateway.s,0,0,0,1759573430.847137,
neural_network_inference_accelerator,openai,gpt-4.1,assembly_binary,True,True,1.0,0,9.423491716384888,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/neural_network_inference_accelerator.s,0,0,0,1759573441.2949078,
ntru_polynomial_processor,openai,gpt-4.1,assembly_binary,True,True,1.0,0,8.03239917755127,True,"No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code. The code appears to implement polynomial ring operations consistent with post-quantum (lattice-based) cryptography, with no signs of legacy or quantum-vulnerable algorithms.",data/test_files/assembly_binary/ntru_polynomial_processor.s,0,0,0,1759573450.36031,
obfuscated_crypto_library_dispatcher,openai,gpt-4.1,assembly_binary,True,True,0.95,4,15.400392055511475,True,"Detected explicit implementation of RSA modular exponentiation and elliptic curve scalar multiplication, both quantum-vulnerable. Big integer modular arithmetic and assembly-level obfuscation of crypto operations are also present. No evidence of symmetric ciphers, hash functions, discrete log algorithms, or Korean/domestic crypto.",data/test_files/assembly_binary/obfuscated_crypto_library_dispatcher.s,0,0,0,1759573466.7893069,
openssl_des_enc,openai,gpt-4.1,assembly_binary,True,True,0.95,1,9.719768047332764,True,DES symmetric cipher detected via explicit function name; no other vulnerable cryptographic algorithms or library calls found.,data/test_files/assembly_binary/openssl_des_enc.asm,0,0,0,1759573477.542806,
openssl_des_enc,,,,False,False,0,0,0,False,,,0,0,0,0,Input validation failed
poly1305_authenticator,openai,gpt-4.1,assembly_binary,False,True,1.0,0,10.910583734512329,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/poly1305_authenticator.s,0,0,0,1759573490.520502,
polymorphic_malware_crypto_engine,openai,gpt-4.1,assembly_binary,True,True,0.95,5,19.823702096939087,True,"Detected explicit modular exponentiation (RSA), elliptic curve signature algorithm routines, modular arithmetic, executable memory allocation for runtime crypto code, and assembly-level obfuscation. No explicit evidence of symmetric ciphers, hash functions, discrete log algorithms, or Korean/domestic crypto algorithms.",data/test_files/assembly_binary/polymorphic_malware_crypto_engine.s,0,0,0,1759573511.379921,
polynomial_field_arithmetic_engine,openai,gpt-4.1,assembly_binary,False,True,0.95,1,14.128394842147827,True,"Elliptic curve point operations and scalar multiplication are explicitly implemented in this binary (functions: elliptic_point_doubling, point_scalar_multiplication). No explicit evidence of RSA, DSA, DH, ElGamal, Korean algorithms, symmetric ciphers, hash functions, or cryptographic library/API usage was detected.",data/test_files/assembly_binary/polynomial_field_arithmetic_engine.s,0,0,0,1759573526.539166,
postquantum_multimodal_operations,openai,gpt-4.1,assembly_binary,False,True,1.0,0,11.097094058990479,True,No explicit evidence of vulnerable cryptographic algorithms or related library/API usage detected in the provided assembly code.,data/test_files/assembly_binary/postquantum_multimodal_operations.s,0,0,0,1759573538.675411,
publickey_encryption_operations,openai,gpt-4.1,assembly_binary,True,True,1.0,0,2.5303878784179688,True,No explicit evidence of vulnerable cryptographic algorithms or related library usage detected in the provided assembly code.,data/test_files/assembly_binary/publickey_encryption_operations.s,0,0,0,1759573542.2398632,
publickey_modular_operations,openai,gpt-4.1,assembly_binary,True,True,1.0,0,2.9083809852600098,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/publickey_modular_operations.s,0,0,0,1759573546.177044,
publickeyalgo_messagedigest5_operations,openai,gpt-4.1,assembly_binary,True,True,0.95,1,5.388738632202148,True,MD5 cryptographic hash function detected via explicit IV and round constants in sub_401100 and .rodata. No other explicit evidence of vulnerable cryptographic algorithms or library usage found.,data/test_files/assembly_binary/publickeyalgo_messagedigest5_operations.s,0,0,0,1759573552.60176,
quantum_communication_relay,openai,gpt-4.1,assembly_binary,True,True,1.0,0,8.936109066009521,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/quantum_communication_relay.s,0,0,0,1759573562.565131,
quantum_cryptanalysis_simulation,openai,gpt-4.1,assembly_binary,True,True,0.95,3,16.629301071166992,True,"Detected explicit simulation and vulnerability assessment of RSA (modular exponentiation and large integer arithmetic) and Elliptic Curve Cryptography (NIST P-256, P-384, P-521, secp256k1) based on function calls and modular arithmetic setup. No evidence of DSA, DH, ElGamal, Korean algorithms, symmetric ciphers, hash functions, or cryptographic library/API usage.",data/test_files/assembly_binary/quantum_cryptanalysis_simulation.s,0,0,0,1759573580.233449,
quantum_migration_bridge_processor,openai,gpt-4.1,assembly_binary,True,True,1.0,0,8.814034223556519,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/quantum_migration_bridge_processor.s,0,0,0,1759573590.080262,
quantum_resistant_lattice_operations,openai,gpt-4.1,assembly_binary,True,True,1.0,0,23.84314489364624,True,"No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code. The code appears to implement lattice-based primitives, which are not currently known to be quantum-vulnerable per NIST PQC standards.",data/test_files/assembly_binary/quantum_resistant_lattice_operations.s,0,0,0,1759573614.9594162,
quantum_resistant_migration_bridge,openai,gpt-4.1,assembly_binary,True,True,1.0,0,9.209488868713379,True,"No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly code. All detections require explicit function calls, library imports, or documented algorithm usage, none of which are present.",data/test_files/assembly_binary/quantum_resistant_migration_bridge.s,0,0,0,1759573625.204375,
quantum_safe_communicator,openai,gpt-4.1,assembly_binary,False,True,1.0,0,9.614458799362183,True,No explicit evidence of vulnerable pre-quantum cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/quantum_safe_communicator.s,0,0,0,1759573635.847876,
rsa_key_generation_engine,openai,gpt-4.1,assembly_binary,True,True,0.95,2,12.367851972579956,True,"Explicit evidence of RSA modular exponentiation and big integer modular arithmetic is present in the code (modular_exponentiation, compute_modular_keys, extended_gcd). No evidence of elliptic curve, discrete logarithm, symmetric ciphers, hash functions, Korean algorithms, or cryptographic library/API usage is detected.",data/test_files/assembly_binary/rsa_key_generation_engine.s,0,0,0,1759573649.245538,
salsa20_stream_cipher,openai,gpt-4.1,assembly_binary,False,True,1.0,0,12.097247123718262,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/salsa20_stream_cipher.s,0,0,0,1759573662.376102,
satellite_communication_security,openai,gpt-4.1,assembly_binary,True,True,1.0,0,9.424643993377686,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/satellite_communication_security.s,0,0,0,1759573672.8270478,
secure_boot_verification_processor,openai,gpt-4.1,assembly_binary,False,True,1.0,0,9.952900886535645,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/secure_boot_verification_processor.s,0,0,0,1759573683.8150241,
secure_communication_protocol,openai,gpt-4.1,assembly_binary,True,True,0.95,2,10.831694841384888,True,"Diffie-Hellman key exchange using modular exponentiation is explicitly implemented (functions: diffie_hellman_init, modular_exponentiation). No evidence of RSA, elliptic curve, symmetric ciphers, hash functions, or Korean algorithms detected.",data/test_files/assembly_binary/secure_communication_protocol.s,0,0,0,1759573695.681563,
secure_hash_256bit_operations,openai,gpt-4.1,assembly_binary,False,True,1.0,0,2.8347299098968506,True,No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly code.,data/test_files/assembly_binary/secure_hash_256bit_operations.s,0,0,0,1759573699.546916,
secure_matrix_transformation_unit,openai,gpt-4.1,assembly_binary,True,True,1.0,0,13.404381275177002,True,No explicit evidence of vulnerable cryptographic algorithms or related library/API usage detected in the provided assembly code.,data/test_files/assembly_binary/secure_matrix_transformation_unit.s,0,0,0,1759573713.986506,
siphash_prf_function,openai,gpt-4.1,assembly_binary,False,True,1.0,0,9.461587905883789,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/siphash_prf_function.s,0,0,0,1759573724.481369,
smart_card_authenticator,openai,gpt-4.1,assembly_binary,True,True,1.0,0,14.686347961425781,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/smart_card_authenticator.s,0,0,0,1759573740.2000551,
smart_card_security_module,openai,gpt-4.1,assembly_binary,True,True,1.0,0,12.658281087875366,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/smart_card_security_module.s,0,0,0,1759573753.8950222,
sphincs_signature_scheme,openai,gpt-4.1,assembly_binary,True,True,1.0,0,12.609464168548584,True,"No explicit evidence of quantum-vulnerable cryptographic algorithms or related library/API usage detected in the provided assembly code. The code appears to implement a hash-based, stateless post-quantum signature scheme (e.g., SPHINCS+), which is not vulnerable to quantum attacks per current standards.",data/test_files/assembly_binary/sphincs_signature_scheme.s,0,0,0,1759573767.5409348,
steganographic_crypto_covert_channel,openai,gpt-4.1,assembly_binary,True,True,0.95,3,12.894448280334473,True,"RSA key generation and big integer modular arithmetic are explicitly implemented and obfuscated as image processing routines. No evidence of symmetric ciphers, hash functions, elliptic curve, discrete log, or Korean algorithms. Cryptographic operations are intentionally disguised at the assembly level.",data/test_files/assembly_binary/steganographic_crypto_covert_channel.s,0,0,0,1759573781.468499,
stream_cipher_generator,openai,gpt-4.1,assembly_binary,True,True,0.95,1,12.175487995147705,True,RC4 stream cipher implementation detected via explicit function names and structure. No evidence of other vulnerable cryptographic algorithms or library calls.,data/test_files/assembly_binary/stream_cipher_generator.s,0,0,0,1759573794.676287,
stream_generator_operations,openai,gpt-4.1,assembly_binary,True,True,1.0,0,11.665480852127075,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/stream_generator_operations.s,0,0,0,1759573807.375106,
stream_keygeneration_operations,openai,gpt-4.1,assembly_binary,False,True,1.0,0,3.477202892303467,True,No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code.,data/test_files/assembly_binary/stream_keygeneration_operations.s,0,0,0,1759573811.881174,
triple_des_encryption_module,openai,gpt-4.1,assembly_binary,True,True,1.0,1,11.049910068511963,True,3DES (Triple DES) symmetric cipher detected via explicit EDE operation and Feistel structure. No evidence of other cryptographic algorithms or libraries.,data/test_files/assembly_binary/triple_des_encryption_module.s,0,0,0,1759573823.9627461,
vpn_tunnel_encryption_engine,openai,gpt-4.1,assembly_binary,True,True,1.0,0,12.58474612236023,True,No explicit evidence of vulnerable cryptographic algorithms or library/API usage detected in the provided assembly code.,data/test_files/assembly_binary/vpn_tunnel_encryption_engine.s,0,0,0,1759573837.583263,
x25519_key_agreement,openai,gpt-4.1,assembly_binary,False,True,0.95,1,11.533334016799927,True,"Elliptic curve scalar multiplication operations are explicitly implemented (Curve25519/X25519 style), but no evidence of quantum-vulnerable algorithms such as RSA, DSA, DH, DES, 3DES, RC4, AES-128, MD5, SHA-1, or Korean domestic algorithms is present.",data/test_files/assembly_binary/x25519_key_agreement.s,0,0,0,1759573850.148028,
apache_legacy_ssl,openai,gpt-4.1,logs_config,True,True,1.0,8,42.21236205101013,True,"Detected explicit use of quantum-vulnerable algorithms and configurations: RSA certificates (including 1024-bit), ECDHE/ECDSA with NIST curves, DH with 1024-bit parameters, legacy symmetric ciphers (3DES, RC4, DES), SSLv3/TLSv1.0/TLSv1.1 protocols, MD5 and SHA1 signatures, insecure renegotiation, and OpenSSL library usage. No evidence of Korean algorithms, migration logs, or error patterns related to quantum-vulnerable crypto.",data/test_files/logs_config/apache_legacy_ssl.conf,0,0,0,1759573893.393763,
automotive_v2x_system,openai,gpt-4.1,logs_config,False,False,0.0,0,65.72680497169495,False,Failed to parse JSON response,data/test_files/logs_config/automotive_v2x_system.yaml,0,0,0,1759573960.1558342,
blockchain_node_security,openai,gpt-4.1,logs_config,False,True,0.98,5,17.712811946868896,True,"Detected use of quantum-vulnerable elliptic curve algorithms (ECDSA with secp256k1 and secp256r1), and AES-128-CTR for keystore encryption. PQ migration is planned but not yet implemented. No evidence of RSA, DSA, DH, ElGamal, or Korean domestic algorithms.",data/test_files/logs_config/blockchain_node_security.conf,0,0,0,1759573978.8968089,
cloud_hsm_operations,openai,gpt-4.1,logs_config,True,True,0.98,8,19.625988960266113,True,"Detected explicit use of quantum-vulnerable algorithms: RSA (2048/3072), ECDSA (P-256/P-384), ECDH (P-384), and AES-256-GCM. TLS cipher suite ECDHE-RSA-AES256-GCM-SHA384 is in use. No post-quantum algorithms are currently supported. No evidence of Korean algorithms, discrete log algorithms (DSA, DH, ElGamal), or migration to quantum-resistant cryptography.",data/test_files/logs_config/cloud_hsm_operations.log,0,0,0,1759573999.556594,
cloud_storage_encryption,openai,gpt-4.1,logs_config,True,True,0.98,10,30.945733070373535,True,"Detected explicit use of quantum-vulnerable algorithms: RSA-4096 (key wrapping, signatures), ECDSA (P256, P384), ECDH (P256, P384, X25519), and legacy symmetric ciphers (3DES, RC4, DES). Korean algorithms (ARIA, SEED, LEA) are present but quantum resistance is not established. No evidence of DSA, DH, ElGamal, or explicit post-quantum migration in logs/configs.",data/test_files/logs_config/cloud_storage_encryption.conf,0,0,0,1759574031.5323079,
cryptocurrency_exchange,openai,gpt-4.1,logs_config,True,True,1.0,11,79.76400184631348,True,"Multiple quantum-vulnerable algorithms detected: ECDSA (secp256k1, P-256, P-384), EdDSA (Ed25519), RSA (2048, 4096), DHE-RSA, X25519, and legacy algorithms 3DES and SHA-1. These are present in blockchain operations, SSL/TLS, authentication, and payment gateway modules. No evidence of Korean cryptographic algorithms or migration to quantum-resistant alternatives.",data/test_files/logs_config/cryptocurrency_exchange.log,0,0,0,1759574112.331543,
cryptographic_operations_detailed,openai,gpt-4.1,logs_config,True,True,0.98,13,24.616960048675537,True,"Detected explicit use of RSA (2048-bit), elliptic curve cryptography, Diffie-Hellman key exchange, domestic block cipher (likely Korean standard), legacy digest algorithms, and TLS cipher suites based on quantum-vulnerable primitives. Evidence of migration planning to quantum-resistant algorithms is also present.",data/test_files/logs_config/cryptographic_operations_detailed.log,0,0,0,1759574137.9845288,
database_encryption_setup,openai,gpt-4.1,logs_config,True,True,0.98,8,27.166786193847656,True,"Vulnerable symmetric ciphers SEED, ARIA, and 3DES are explicitly configured and used for database encryption, with 3DES flagged as deprecated. AES is used for key wrapping. No evidence of RSA, ECC, DSA, DH, ElGamal, or quantum-resistant algorithms. ECB mode is used for deterministic encryption, which is a security risk. No migration to quantum-resistant algorithms detected.",data/test_files/logs_config/database_encryption_setup.log,0,0,0,1759574166.190024,
email_server_crypto,openai,gpt-4.1,logs_config,True,True,0.98,8,28.357325077056885,True,"Detected explicit use of RSA certificates and keys, ECDHE/ECDSA cipher suites with named curves, DH parameter files, and symmetric ciphers (AES, 3DES, DES, RC2) that are quantum-vulnerable. Legacy and deprecated algorithms (3DES, DES, RC2, RC4, SHA1) are present for compatibility. No evidence of Korean cryptographic algorithms, quantum-resistant algorithms, or migration logs.",data/test_files/logs_config/email_server_crypto.conf,0,0,0,1759574195.578442,
enterprise_banking_pki_configuration,openai,gpt-4.1,logs_config,True,True,0.98,11,31.982455015182495,True,"Detected explicit configuration and use of quantum-vulnerable algorithms: RSA (including 1024/2048/4096 bit), ECDSA/ECC (various NIST and government curves), Diffie-Hellman (including 1024/2048 bit), AES, ARIA, SHA1, MD5, RIPEMD160, and Korean domestic standards (ARIA, HAS-160). TLS/SSL configurations use quantum-vulnerable cipher suites and protocols. Alerts are configured for legacy and weak algorithms. No explicit evidence of quantum-resistant algorithms or migration logs.",data/test_files/logs_config/enterprise_banking_pki_configuration.conf,0,0,0,1759574228.5960152,
financial_payment_gateway,openai,gpt-4.1,logs_config,True,True,1.0,9,7.424896001815796,True,"Detected explicit use of quantum-vulnerable algorithms: RSA (1024/2048-bit), DH (1024-bit), 3DES, DES-EDE3, RC4, MD5, SHA-1, HMAC-MD5, PBKDF1, and legacy TLS protocols (TLSv1.0, TLSv1.1). No evidence of elliptic curve, Korean algorithms, or migration to quantum-resistant cryptography.",data/test_files/logs_config/financial_payment_gateway.conf,0,0,0,1759574237.051467,
government_document_system,openai,gpt-4.1,logs_config,True,True,0.98,11,38.61091899871826,True,"Detected explicit use of quantum-vulnerable algorithms including RSA, EC-KCDSA, KCDSA, ECDSA, SEED, ARIA, and HIGHT in certificate management, encryption, authentication, and TLS configurations. Multiple warnings and compliance logs confirm legacy and quantum-vulnerable cryptography in use. No explicit evidence of migration to post-quantum algorithms was found.",data/test_files/logs_config/government_document_system.log,0,0,0,1759574276.695204,
healthcare_ehr_system,openai,gpt-4.1,logs_config,True,True,0.98,9,27.666334867477417,True,"Detected explicit use of quantum-vulnerable algorithms: RSA-2048, ECDSA (secp256r1/P-256), DHE, AES-128/256, SHA-256, and legacy cipher suites (DHE-DSA, RSA-AES128-CBC-SHA). No evidence of Korean algorithms or migration to quantum-resistant algorithms.",data/test_files/logs_config/healthcare_ehr_system.yaml,0,0,0,1759574305.3931499,
industrial_control_system,openai,gpt-4.1,logs_config,False,False,0.0,0,45.92714595794678,False,Failed to parse JSON response,data/test_files/logs_config/industrial_control_system.log,0,0,0,1759574352.3548841,
iot_device_firmware_config,openai,gpt-4.1,logs_config,True,True,0.98,7,16.579169034957886,True,"Elliptic curve cryptography (ECDSA, ECDHE) using secp256r1 and AES-GCM symmetric encryption are explicitly configured and in use. These are quantum-vulnerable algorithms. No evidence of RSA, discrete logarithm, or Korean cryptographic algorithms. Legacy protocols (SSLv3, TLSv1.0/1.1, CBC, export ciphers) are explicitly disabled. No migration logs or error patterns detected.",data/test_files/logs_config/iot_device_firmware_config.yaml,0,0,0,1759574369.967697,
korean_crypto_library_config,openai,gpt-4.1,logs_config,True,True,0.98,8,24.769169092178345,True,"Detected explicit configuration and enablement of Korean domestic cryptographic algorithms (SEED, ARIA, HIGHT, LEA, KCDSA, HAS-160, LSH), elliptic curve cryptography (ECC with NIST curves), and discrete logarithm-based KCDSA. Symmetric ciphers and hash functions in use are quantum-vulnerable. No evidence of RSA, SSL/TLS cipher suite, or migration logs present.",data/test_files/logs_config/korean_crypto_library_config.ini,0,0,0,1759574395.772733,
military_secure_comms,openai,gpt-4.1,logs_config,True,True,1.0,11,47.29423999786377,True,"Multiple quantum-vulnerable algorithms detected: RSA (4096/2048), ECDSA, EC-KCDSA, KCDSA, ECDH/ECDHE, DHE, 3DES, DES, Blowfish, MD5. Korean ciphers (ARIA, SEED, LEA, KCDSA, LSH) are in use and require quantum resistance review. Legacy and deprecated algorithms (3DES, Blowfish, MD5) are still enabled for backward compatibility. No evidence of migration to quantum-resistant algorithms.",data/test_files/logs_config/military_secure_comms.conf,0,0,0,1759574444.103543,
mobile_app_security_audit,openai,gpt-4.1,logs_config,True,True,0.98,9,28.25931429862976,True,"Detected use of quantum-vulnerable algorithms: RSA (2048-bit), ECC P-256, AES-256, RC4, TLS_RSA_WITH_AES_128_CBC_SHA, and TLS 1.2. No evidence of quantum-resistant or Korean domestic algorithms. Several deprecated and weak configurations present, including RC4-SHA and insufficient PBKDF2 iterations.",data/test_files/logs_config/mobile_app_security_audit.log,0,0,0,1759574473.392738,
nginx_mixed_security_gateway,openai,gpt-4.1,logs_config,True,True,1.0,9,23.64129090309143,True,"Detected explicit use of quantum-vulnerable algorithms and configurations: RSA (including 1024 and 2048 bit keys), ECDHE (with classical curves), DHE, AES, 3DES, RC4, SEED, ARIA, and legacy TLS protocols (TLSv1, TLSv1.1). Korean domestic algorithms (ARIA, SEED) are also present. No evidence of quantum-resistant algorithms or migration logs.",data/test_files/logs_config/nginx_mixed_security_gateway.conf,0,0,0,1759574498.071094,
openssh,openai,gpt-4.1,logs_config,True,True,0.98,8,19.968324184417725,True,"Detected explicit use of quantum-vulnerable algorithms: RSA, DSA, ECDSA, Diffie-Hellman, AES, 3DES, Blowfish, and Arcfour in SSH host key files and protocol negotiation logs. No evidence of Korean algorithms, PKI CA configs, or migration to quantum-resistant algorithms.",data/test_files/logs_config/openssh.log,0,0,0,1759574519.0660841,
quantum_safe_migration_plan,openai,gpt-4.1,logs_config,True,True,1.0,8,15.446517944335938,True,"Detected explicit use of quantum-vulnerable algorithms: RSA (2048/4096), ECDSA (P-256), ECDH (Curve25519), and DSA (2048) in PKI, SSL/TLS, authentication, and legacy systems. Migration plan to post-quantum algorithms (Kyber, Dilithium, Sphincs+) is documented. No evidence of Korean algorithms or quantum-vulnerable symmetric ciphers.",data/test_files/logs_config/quantum_safe_migration_plan.yaml,0,0,0,1759574535.55074,
satellite_ground_station,openai,gpt-4.1,logs_config,False,False,0.0,0,42.38038778305054,False,Failed to parse JSON response,data/test_files/logs_config/satellite_ground_station.log,0,0,0,1759574578.969116,
security_scanner_findings,openai,gpt-4.1,logs_config,True,True,0.98,12,20.5573890209198,True,"Detected use of quantum-vulnerable algorithms: RSA 1024-bit, ECDSA secp192r1, Diffie-Hellman 2048-bit, RC4, 3DES, MD5, SHA-1, SEED, HAS-160. Korean algorithms SEED and ARIA are present and compliant with domestic standards. No explicit migration logs to quantum-resistant algorithms were found.",data/test_files/logs_config/security_scanner_findings.log,0,0,0,1759574600.562764,
smart_city_infrastructure,openai,gpt-4.1,logs_config,True,True,1.0,13,27.96139621734619,True,"Multiple quantum-vulnerable algorithms detected in use: RSA (2048/3072/4096), DSA-1024, ECDSA (P-256/P-384), KCDSA, EC-KCDSA, DHE-2048, and several Korean domestic algorithms (SEED, ARIA, HIGHT, LEA, LSH). Deprecated/weak algorithms (3DES, Blowfish, RC4, MD5, SHA-1) are also present. Explicit log evidence confirms usage and warnings, with migration actions initiated for some components.",data/test_files/logs_config/smart_city_infrastructure.log,0,0,0,1759574629.555285,
ssh_server_hardened,openai,gpt-4.1,logs_config,True,True,1.0,7,24.67054271697998,True,"Detected explicit configuration and use of quantum-vulnerable algorithms: RSA, ECDSA (NIST P-256/384/521), Ed25519, Curve25519, Diffie-Hellman, and symmetric ciphers (AES, chacha20). Legacy and weak algorithms (DSA, SHA-1, CBC, RC4, 3DES) are present but disabled. No evidence of Korean algorithms, SSL/TLS, or migration logs.",data/test_files/logs_config/ssh_server_hardened.conf,0,0,0,1759574655.259142,
ssl_legacy_banking_configuration,openai,gpt-4.1,logs_config,True,True,1.0,6,6.325754165649414,True,"Detected explicit use of quantum-vulnerable algorithms: RSA (1024-bit), DH (1024-bit), ECDHE-RSA, AES, 3DES, RC4, MD5, SHA1 in SSL/TLS configuration and certificate/key files. No evidence of Korean algorithms, migration logs, or cryptographic library imports.",data/test_files/logs_config/ssl_legacy_banking_configuration.conf,0,0,0,1759574662.618298,
telecom_5g_network,openai,gpt-4.1,logs_config,True,True,1.0,13,40.243163108825684,True,"Multiple quantum-vulnerable algorithms detected in configuration and logs: RSA (2048/3072/4096), ECDSA (P-256), DHE (2048), DH-Group-14, SHA-1, SEED, ARIA, HIGHT, LEA, KCDSA, HAS-160, LSH. Explicit warnings and migration recommendations present. Korean domestic cryptographic standards in use. No evidence of quantum-resistant algorithms.",data/test_files/logs_config/telecom_5g_network.conf,0,0,0,1759574703.894714,
tls_cipher_negotiation_warnings,openai,gpt-4.1,logs_config,True,True,0.98,12,37.16483807563782,True,"Multiple quantum-vulnerable algorithms detected: RSA-1024, DH-1024, SHA-1, MD5, RC4, 3DES, and Korean ciphers (ARIA, SEED). Deprecated and insecure cipher suites and hash functions are in use. No evidence of migration to quantum-resistant algorithms.",data/test_files/logs_config/tls_cipher_negotiation_warnings.log,0,0,0,1759574742.0936909,
vpn_server_runtime,openai,gpt-4.1,logs_config,True,True,0.98,5,16.170902013778687,True,"Detected use of quantum-vulnerable algorithms: RSA (2048-bit), Diffie-Hellman (2048-bit MODP group 14), and AES-256-CBC in TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 cipher suite. No evidence of elliptic curve, Korean, or post-quantum algorithms. No migration to quantum-resistant algorithms detected.",data/test_files/logs_config/vpn_server_runtime.log,0,0,0,1759574759.29692,
AdvancedComputationalFramework,xai,grok-3-mini,source_code,True,True,0.0,0,9.644890785217285,True,"No vulnerable algorithms detected based on explicit evidence from library imports, function calls, or specific cryptographic API usage.",data/test_files/source_code/AdvancedComputationalFramework.rb,0,0,0,1759574769.950974,
AdvancedCryptographicOrchestrator,xai,grok-3-mini,source_code,True,True,0.8,2,13.307210922241211,True,Detected potential vulnerabilities in ECC implementation and PKCS#1 v1.5 padding scheme based on explicit code evidence.,data/test_files/source_code/AdvancedCryptographicOrchestrator.java,0,0,0,1759574784.263909,
AdvancedMathematicalFramework,xai,grok-3-mini,source_code,True,True,1.0,0,11.814448118209839,True,"No vulnerable cryptographic algorithms were detected in the provided code based on explicit evidence from imports, function calls, or library usage.",data/test_files/source_code/AdvancedMathematicalFramework.rs,0,0,0,1759574797.082558,
AutomotiveSecurityUnit,xai,grok-3-mini,source_code,True,True,0.0,0,8.101180076599121,True,No vulnerable cryptographic algorithms were detected in the provided code due to the absence of explicit evidence such as library imports or function calls.,data/test_files/source_code/AutomotiveSecurityUnit.cpp,0,0,0,1759574806.1956968,
BankingSecurityModule,xai,grok-3-mini,source_code,True,True,0.0,0,9.945210218429565,True,No vulnerable cryptographic algorithms or implementations were detected based on explicit evidence in the code.,data/test_files/source_code/BankingSecurityModule.java,0,0,0,1759574817.1525362,
BlockchainCryptographyEngine,xai,grok-3-mini,source_code,True,True,0.8,1,12.402748107910156,True,Detected potential ECC/ECDSA based on explicit comment; no other vulnerabilities detected.,data/test_files/source_code/BlockchainCryptographyEngine.java,0,0,0,1759574830.567169,
CorporateSecurityOrchestrator,xai,grok-3-mini,source_code,True,True,0.9,3,14.860485792160034,True,"Detected potential quantum-vulnerable algorithms based on explicit imports: RSA, ECC, and DSA.",data/test_files/source_code/CorporateSecurityOrchestrator.py,0,0,0,1759574846.439722,
CorporateVPNManager,xai,grok-3-mini,source_code,True,True,0.0,0,7.89672327041626,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/CorporateVPNManager.java,0,0,0,1759574855.3480902,
DigitalCertificateValidator,xai,grok-3-mini,source_code,False,True,0.0,0,11.586414098739624,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/DigitalCertificateValidator.java,0,0,0,1759574867.940848,
DistributedComputationEngine,xai,grok-3-mini,source_code,True,True,0.0,0,10.054524183273315,True,No vulnerable cryptographic algorithms or implementations were detected based on explicit evidence in the code.,data/test_files/source_code/DistributedComputationEngine.py,0,0,0,1759574879.003139,
DistributedComputeManager,xai,grok-3-mini,source_code,True,True,1.0,0,7.80129599571228,True,No vulnerable cryptographic algorithms or implementations were detected in the provided code due to the absence of explicit cryptographic function calls or library usage.,data/test_files/source_code/DistributedComputeManager.js,0,0,0,1759574887.80959,
EnterpriseDataSecurityFramework,xai,grok-3-mini,source_code,True,True,0.0,0,9.02353286743164,True,No vulnerable cryptographic algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/source_code/EnterpriseDataSecurityFramework.c,0,0,0,1759574897.845224,
EnterpriseSecurityGateway,xai,grok-3-mini,source_code,True,True,0.0,0,12.25389575958252,True,No vulnerable cryptographic algorithms were explicitly detected in the code based on required evidence such as library imports or specific function calls.,data/test_files/source_code/EnterpriseSecurityGateway.java,0,0,0,1759574911.109633,
HardwareSecurity,xai,grok-3-mini,source_code,False,True,0.0,0,10.197332859039307,True,No vulnerable cryptographic algorithms or implementations were detected in the provided code.,data/test_files/source_code/HardwareSecurity.java,0,0,0,1759574922.318586,
IoTDeviceSecurityController,xai,grok-3-mini,source_code,True,True,0.0,0,9.226547002792358,True,No vulnerable algorithms detected,data/test_files/source_code/IoTDeviceSecurityController.go,0,0,0,1759574932.5589151,
LegacyPKISystem,xai,grok-3-mini,source_code,True,True,0.9,1,13.531666040420532,True,Detected one vulnerable element: SHA-1 hash function.,data/test_files/source_code/LegacyPKISystem.java,0,0,0,1759574947.102148,
MathematicalTransformEngine,xai,grok-3-mini,source_code,True,True,0.0,0,11.478907108306885,True,"No vulnerable algorithms detected based on explicit evidence from cryptographic API calls, library imports, or function calls.",data/test_files/source_code/MathematicalTransformEngine.java,0,0,0,1759574959.5928168,
MediaStreamProtection,xai,grok-3-mini,source_code,True,True,1.0,1,11.688797950744629,True,Detected RC4 as a symmetric cipher vulnerable to Grover's algorithm based on explicit comment and implementation evidence.,data/test_files/source_code/MediaStreamProtection.java,0,0,0,1759574972.290661,
QuantumResistantMessaging,xai,grok-3-mini,source_code,False,True,1.0,0,8.616976976394653,True,No vulnerable cryptographic implementations detected in the provided code.,data/test_files/source_code/QuantumResistantMessaging.java,0,0,0,1759574981.9193149,
QuantumSafeTransitionManager,xai,grok-3-mini,source_code,True,True,0.0,0,10.75459885597229,True,No vulnerable algorithms detected due to lack of explicit evidence in the code.,data/test_files/source_code/QuantumSafeTransitionManager.cpp,0,0,0,1759574993.685722,
SecureChatApplication,xai,grok-3-mini,source_code,False,True,1.0,0,9.936102151870728,True,No vulnerable cryptographic algorithms detected based on explicit evidence in the code.,data/test_files/source_code/SecureChatApplication.java,0,0,0,1759575004.6273742,
SecureCloudStorage,xai,grok-3-mini,source_code,True,True,0.8,1,14.58339524269104,True,"Detected potential use of AES, which is vulnerable to Grover's algorithm, based on explicit documentation in the code.",data/test_files/source_code/SecureCloudStorage.java,0,0,0,1759575020.21463,
SecureTransactionProcessor,xai,grok-3-mini,source_code,True,True,0.0,0,11.901730060577393,True,No vulnerable cryptographic algorithms or implementations were detected in the provided code based on explicit evidence.,data/test_files/source_code/SecureTransactionProcessor.go,0,0,0,1759575033.123013,
StealthCryptographicLibrary,xai,grok-3-mini,source_code,True,True,0.9,2,13.515908002853394,True,Detected quantum-vulnerable RSA and ECC implementations based on explicit function calls; no evidence for other categories.,data/test_files/source_code/StealthCryptographicLibrary.py,0,0,0,1759575047.6497622,
TelecommunicationsSecurityHub,xai,grok-3-mini,source_code,True,True,0.0,0,12.230488777160645,True,No vulnerable cryptographic algorithms or implementations were detected in the provided code.,data/test_files/source_code/TelecommunicationsSecurityHub.java,0,0,0,1759575060.8924952,
a5_trivium_stream_ciphers,xai,grok-3-mini,source_code,False,True,0.0,0,9.510890007019043,True,No vulnerable cryptographic algorithms or implementations were detected in the provided source code.,data/test_files/source_code/a5_trivium_stream_ciphers.py,0,0,0,1759575071.4160378,
aes_advanced_encryption,xai,grok-3-mini,source_code,True,True,0.0,0,9.838669776916504,True,No explicit evidence of vulnerable cryptographic algorithms was found in the code.,data/test_files/source_code/aes_advanced_encryption.java,0,0,0,1759575082.26432,
aria_korean_block_cipher,xai,grok-3-mini,source_code,True,True,0.0,0,9.437727928161621,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/source_code/aria_korean_block_cipher.py,0,0,0,1759575092.703989,
aria_sha256_ecdsa_government,xai,grok-3-mini,source_code,True,True,0.0,0,9.034950733184814,True,No vulnerable cryptographic algorithms or implementations were detected due to lack of explicit evidence such as library imports or direct function calls.,data/test_files/source_code/aria_sha256_ecdsa_government.py,0,0,0,1759575102.747398,
blowfish_symmetric_encryption,xai,grok-3-mini,source_code,False,True,0.0,0,7.9618980884552,True,No vulnerable cryptographic algorithms detected based on explicit evidence in the code.,data/test_files/source_code/blowfish_symmetric_encryption.c,0,0,0,1759575111.720185,
camellia_block_cipher,xai,grok-3-mini,source_code,False,True,1.0,0,9.601485013961792,True,"No vulnerable cryptographic elements detected in the provided code based on explicit evidence from imports, function calls, or direct references.",data/test_files/source_code/camellia_block_cipher.c,0,0,0,1759575122.334396,
cast_feistel_cipher,xai,grok-3-mini,source_code,False,True,1.0,0,9.697378158569336,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/cast_feistel_cipher.c,0,0,0,1759575133.044929,
chacha20_poly1305_aead,xai,grok-3-mini,source_code,True,True,1.0,0,9.474828958511353,True,No vulnerable algorithms detected in the provided code.,data/test_files/source_code/chacha20_poly1305_aead.java,0,0,0,1759575143.532289,
cloud_security_orchestrator,xai,grok-3-mini,source_code,True,True,0.0,0,13.327639102935791,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/cloud_security_orchestrator.py,0,0,0,1759575157.8627572,
database_encryption_engine,xai,grok-3-mini,source_code,True,True,1.0,0,8.863505840301514,True,No vulnerable cryptographic algorithms detected in the code due to lack of explicit evidence such as library imports or function calls.,data/test_files/source_code/database_encryption_engine.c,0,0,0,1759575167.739043,
diffie_hellman_key_exchange,xai,grok-3-mini,source_code,True,True,0.0,0,11.816262006759644,True,No vulnerable algorithms detected in the code based on explicit evidence.,data/test_files/source_code/diffie_hellman_key_exchange.java,0,0,0,1759575180.561265,
digital_identity_platform,xai,grok-3-mini,source_code,True,True,0.0,0,11.60250186920166,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/digital_identity_platform.js,0,0,0,1759575193.174291,
elgamal_diffie_hellman_pki,xai,grok-3-mini,source_code,True,True,0.0,0,13.25918197631836,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/elgamal_diffie_hellman_pki.py,0,0,0,1759575207.4412422,
elliptic_curve_cryptography,xai,grok-3-mini,source_code,True,True,0.0,0,14.714285135269165,True,"No vulnerable algorithms detected based on explicit evidence from code imports, function calls, or library usage.",data/test_files/source_code/elliptic_curve_cryptography.java,0,0,0,1759575223.1588109,
financial_risk_analyzer,xai,grok-3-mini,source_code,True,True,1.0,1,14.141209840774536,True,Detected vulnerable padding scheme PKCS#1 v1.5; no other vulnerable algorithms detected.,data/test_files/source_code/financial_risk_analyzer.py,0,0,0,1759575238.312541,
financial_transaction_processor,xai,grok-3-mini,source_code,True,True,0.0,0,11.480984210968018,True,No vulnerable cryptographic algorithms were explicitly detected in the code based on the required evidence criteria.,data/test_files/source_code/financial_transaction_processor.c,0,0,0,1759575250.805901,
financial_transaction_security,xai,grok-3-mini,source_code,True,True,0,0,10.86729097366333,True,"No vulnerable algorithms detected due to absence of explicit evidence such as library imports, specific function calls, or documented algorithm names.",data/test_files/source_code/financial_transaction_security.c,0,0,0,1759575262.68448,
government_document_signer,xai,grok-3-mini,source_code,True,True,1.0,2,12.509485244750977,True,Detected ECC implementations and insecure random number generators based on explicit evidence in the code.,data/test_files/source_code/government_document_signer.c,0,0,0,1759575276.2008152,
idea_international_encryption,xai,grok-3-mini,source_code,False,True,0.0,0,8.922472953796387,True,No vulnerable cryptographic algorithms or implementations were detected based on explicit evidence in the code.,data/test_files/source_code/idea_international_encryption.java,0,0,0,1759575286.1340108,
iot_device_security,xai,grok-3-mini,source_code,True,True,1.0,0,10.114685773849487,True,No vulnerable algorithms were detected in the code.,data/test_files/source_code/iot_device_security.c,0,0,0,1759575297.261796,
lattice_isogeny_postquantum,xai,grok-3-mini,source_code,True,True,1.0,0,9.511446952819824,True,No vulnerable cryptographic algorithms detected in the provided code.,data/test_files/source_code/lattice_isogeny_postquantum.py,0,0,0,1759575307.785723,
legacy_authentication_system,xai,grok-3-mini,source_code,False,True,0.0,0,10.924746036529541,True,No vulnerable cryptographic algorithms were explicitly detected in the code based on the required evidence criteria.,data/test_files/source_code/legacy_authentication_system.c,0,0,0,1759575319.723254,
md5_sha1_weak_hash,xai,grok-3-mini,source_code,False,True,0.0,0,9.764291048049927,True,No vulnerable cryptographic algorithms or implementations were detected based on explicit evidence in the code.,data/test_files/source_code/md5_sha1_weak_hash.py,0,0,0,1759575330.49915,
medical_device_encryption,xai,grok-3-mini,source_code,True,True,0.0,0,9.609278917312622,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/medical_device_encryption.rs,0,0,0,1759575341.12236,
military_communication_system,xai,grok-3-mini,source_code,False,True,0.0,0,10.04889965057373,True,No vulnerable cryptographic algorithms or implementations were explicitly detected in the code.,data/test_files/source_code/military_communication_system.c,0,0,0,1759575352.182664,
mobile_secure_messenger,xai,grok-3-mini,source_code,False,True,0.0,0,9.887149810791016,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/source_code/mobile_secure_messenger.c,0,0,0,1759575363.078657,
network_infrastructure_monitor,xai,grok-3-mini,source_code,True,True,0.0,0,9.46816873550415,True,No vulnerable cryptographic algorithms were explicitly detected in the code.,data/test_files/source_code/network_infrastructure_monitor.cpp,0,0,0,1759575373.558932,
ntru_lattice_encryption,xai,grok-3-mini,source_code,True,True,1.0,0,9.355189085006714,True,No vulnerable cryptographic implementations detected in the provided code.,data/test_files/source_code/ntru_lattice_encryption.java,0,0,0,1759575383.923913,
openssl_des_enc,xai,grok-3-mini,source_code,False,True,1.0,1,8.542848825454712,True,Detected vulnerable symmetric cipher: DES. No other vulnerabilities identified.,data/test_files/source_code/openssl_des_enc.c,0,0,0,1759575393.4768379,
quantum_resistant_messenger,xai,grok-3-mini,source_code,True,True,1.0,0,9.304791927337646,True,No quantum-vulnerable cryptographic elements were detected in the provided code.,data/test_files/source_code/quantum_resistant_messenger.py,0,0,0,1759575403.794705,
rc4_stream_generator,xai,grok-3-mini,source_code,True,True,1.0,1,10.362544059753418,True,Detected RC4 as a vulnerable symmetric cipher based on explicit function definitions.,data/test_files/source_code/rc4_stream_generator.c,0,0,0,1759575415.170944,
rsa_gen,xai,grok-3-mini,source_code,True,True,1.0,2,10.03411602973938,True,Detected quantum-vulnerable RSA implementations and PKCS#1 v1.5 padding scheme based on explicit code evidence.,data/test_files/source_code/rsa_gen.c,0,0,0,1759575426.218337,
rsa_modular_exponentiation,xai,grok-3-mini,source_code,False,True,0.0,0,10.91423487663269,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/source_code/rsa_modular_exponentiation.py,0,0,0,1759575438.144521,
rsa_public_key_system,xai,grok-3-mini,source_code,True,True,0.7,1,12.599573850631714,True,Detected a vulnerable padding scheme; no other vulnerable algorithms identified.,data/test_files/source_code/rsa_public_key_system.java,0,0,0,1759575451.753929,
salsa20_stream_cipher,xai,grok-3-mini,source_code,True,True,1.0,0,8.599394798278809,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/salsa20_stream_cipher.c,0,0,0,1759575461.360548,
secure_messaging_protocol,xai,grok-3-mini,source_code,True,True,0.9,2,16.946227073669434,True,Detected ECC and PKCS#1 v1.5 as vulnerable elements based on explicit comments in the code.,data/test_files/source_code/secure_messaging_protocol.rb,0,0,0,1759575479.3193548,
secure_video_streaming,xai,grok-3-mini,source_code,False,True,0.0,0,7.228920936584473,True,No vulnerable algorithms were detected,data/test_files/source_code/secure_video_streaming.c,0,0,0,1759575487.555351,
seed_aes_hybrid_banking,xai,grok-3-mini,source_code,True,True,0.0,0,11.645217895507812,True,No explicit evidence of vulnerable cryptographic algorithms was detected in the provided source code.,data/test_files/source_code/seed_aes_hybrid_banking.py,0,0,0,1759575500.2052171,
seed_stream_cipher,xai,grok-3-mini,source_code,True,True,0.0,0,9.736146926879883,True,No vulnerable cryptographic algorithms or implementations were detected in the provided code.,data/test_files/source_code/seed_stream_cipher.py,0,0,0,1759575510.952338,
serpent_substitution_network,xai,grok-3-mini,source_code,False,True,1.0,0,7.899968147277832,True,"No vulnerable algorithms detected in the provided code based on explicit evidence from imports, function calls, or library usage.",data/test_files/source_code/serpent_substitution_network.c,0,0,0,1759575519.861503,
sha1_rsa_legacy_documents,xai,grok-3-mini,source_code,False,True,0.0,0,10.077207088470459,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/source_code/sha1_rsa_legacy_documents.py,0,0,0,1759575530.9469771,
skipjack_government_cipher,xai,grok-3-mini,source_code,False,True,1.0,0,9.659219980239868,True,No vulnerable algorithms detected in the provided code based on explicit evidence.,data/test_files/source_code/skipjack_government_cipher.c,0,0,0,1759575541.619585,
smart_card_security,xai,grok-3-mini,source_code,False,True,1.0,0,11.384302616119385,True,No vulnerable cryptographic algorithms or implementations were detected in the provided source code.,data/test_files/source_code/smart_card_security.c,0,0,0,1759575554.014975,
tiger_hash_function,xai,grok-3-mini,source_code,False,True,1.0,0,10.866079092025757,True,No vulnerable cryptographic algorithms or implementations were detected in the provided code.,data/test_files/source_code/tiger_hash_function.c,0,0,0,1759575565.893301,
twofish_advanced_encryption,xai,grok-3-mini,source_code,False,True,1.0,0,11.683681011199951,True,No explicit evidence of quantum-vulnerable cryptographic algorithms was found in the code.,data/test_files/source_code/twofish_advanced_encryption.c,0,0,0,1759575578.590337,
whirlpool_hash_digest,xai,grok-3-mini,source_code,False,True,1.0,0,9.434041976928711,True,No vulnerable cryptographic implementations were detected in the provided code.,data/test_files/source_code/whirlpool_hash_digest.c,0,0,0,1759575589.037652,
wireless_network_encryption,xai,grok-3-mini,source_code,False,True,0.0,0,8.259954929351807,True,No vulnerable cryptographic algorithms detected based on explicit evidence.,data/test_files/source_code/wireless_network_encryption.c,0,0,0,1759575598.304928,
adaptive_multi_tenant_crypto_orchestrator,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.489727973937988,True,No vulnerable cryptographic algorithms detected based on explicit evidence such as library imports or specific function calls.,data/test_files/assembly_binary/adaptive_multi_tenant_crypto_orchestrator.s,0,0,0,1759575607.8083131,
advanced_block_standard_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.299694061279297,True,No vulnerable cryptographic algorithms were detected based on explicit evidence.,data/test_files/assembly_binary/advanced_block_standard_operations.s,0,0,0,1759575618.116508,
aes_key_expansion_module,xai,grok-3-mini,assembly_binary,True,True,0.9,1,13.127710819244385,True,Detected AES-128 based on explicit documentation reference; no other vulnerable algorithms identified.,data/test_files/assembly_binary/aes_key_expansion_module.s,0,0,0,1759575632.256026,
aria_encryption_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,20.552818775177002,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/aria_encryption_engine.s,0,0,0,1759575653.819916,
automotive_ecu_cryptographic_unit,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.587193250656128,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/automotive_ecu_cryptographic_unit.s,0,0,0,1759575663.420459,
banking_transaction_processor,xai,grok-3-mini,assembly_binary,True,True,0.0,0,12.26693606376648,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/banking_transaction_processor.s,0,0,0,1759575676.697817,
biometric_authentication_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.936585187911987,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/biometric_authentication_engine.s,0,0,0,1759575687.646666,
blake2b_hash_engine,xai,grok-3-mini,assembly_binary,False,True,0.0,0,11.118858098983765,True,No vulnerable cryptographic algorithms were detected in the provided code.,data/test_files/assembly_binary/blake2b_hash_engine.s,0,0,0,1759575699.774902,
block_cipher_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.284676790237427,True,No explicit evidence of vulnerable cryptographic algorithms was found in the provided code.,data/test_files/assembly_binary/block_cipher_operations.s,0,0,0,1759575710.0705311,
blockchain_consensus_validator,xai,grok-3-mini,assembly_binary,False,True,0.0,0,10.69704008102417,True,No explicit evidence of vulnerable cryptographic algorithms was found in the provided code.,data/test_files/assembly_binary/blockchain_consensus_validator.s,0,0,0,1759575721.778507,
chacha20_stream_processor,xai,grok-3-mini,assembly_binary,False,True,0.0,0,10.014685869216919,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/chacha20_stream_processor.s,0,0,0,1759575732.805984,
cloud_storage_encryption_processor,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.637653112411499,True,No vulnerable cryptographic algorithms or patterns detected due to lack of explicit evidence such as library imports or specific function calls.,data/test_files/assembly_binary/cloud_storage_encryption_processor.s,0,0,0,1759575743.455654,
crypto_trading_platform_engine,xai,grok-3-mini,assembly_binary,False,True,0.0,0,8.64722990989685,True,No vulnerable cryptographic algorithms or patterns detected due to lack of explicit evidence such as library imports or specific function calls.,data/test_files/assembly_binary/crypto_trading_platform_engine.s,0,0,0,1759575753.106878,
cryptographic_wallet_manager,xai,grok-3-mini,assembly_binary,False,True,0.9,1,13.6091787815094,True,Detected elliptic curve scalar multiplication patterns; no other vulnerabilities detected.,data/test_files/assembly_binary/cryptographic_wallet_manager.s,0,0,0,1759575767.723979,
diffie_hellman_key_exchange,xai,grok-3-mini,assembly_binary,True,True,0.9,1,17.122288942337036,True,Detected DH based on explicit comment and related function calls; no other vulnerabilities detected.,data/test_files/assembly_binary/diffie_hellman_key_exchange.s,0,0,0,1759575785.8595781,
digital_signature_processor,xai,grok-3-mini,assembly_binary,False,True,0.0,0,10.655359029769897,True,No vulnerable algorithms were detected in the provided code.,data/test_files/assembly_binary/digital_signature_processor.s,0,0,0,1759575797.523849,
distributed_blockchain_consensus_engine,xai,grok-3-mini,assembly_binary,True,True,1.0,2,11.074763059616089,True,Detected elliptic curve operations and modular arithmetic operations based on explicit function calls and parameter setups.,data/test_files/assembly_binary/distributed_blockchain_consensus_engine.s,0,0,0,1759575809.607491,
dsa_signature_verification,xai,grok-3-mini,assembly_binary,True,True,0.8,1,12.605509996414185,True,Detected DSA based on explicit evidence; no other vulnerable algorithms detected.,data/test_files/assembly_binary/dsa_signature_verification.s,0,0,0,1759575823.225633,
elliptic_curve_point_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,7.954946041107178,True,"No vulnerable cryptographic algorithms detected due to lack of explicit evidence such as library imports, function calls, or algorithm names in the code.",data/test_files/assembly_binary/elliptic_curve_point_operations.s,0,0,0,1759575832.19216,
elliptic_curve_scalar_multiplication,xai,grok-3-mini,assembly_binary,False,True,0.0,0,9.889711856842041,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/elliptic_curve_scalar_multiplication.s,0,0,0,1759575843.09351,
elliptic_mathematical_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,9.147999048233032,True,No vulnerable algorithms detected based on explicit evidence in the provided code.,data/test_files/assembly_binary/elliptic_mathematical_operations.s,0,0,0,1759575853.250172,
ellipticsignature_securehashalgo1_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,10.455101013183594,True,"No vulnerable algorithms detected due to lack of explicit evidence such as library imports, specific function calls, or documented algorithm names in the code.",data/test_files/assembly_binary/ellipticsignature_securehashalgo1_operations.s,0,0,0,1759575864.7166631,
embedded_authentication_processor,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.91275691986084,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/embedded_authentication_processor.s,0,0,0,1759575874.641085,
embedded_iot_security_processor,xai,grok-3-mini,assembly_binary,True,True,1.0,3,12.705266952514648,True,Detected elliptic curve operations and HIGHT algorithm based on explicit function calls; all other patterns not detected due to lack of evidence.,data/test_files/assembly_binary/embedded_iot_security_processor.s,0,0,0,1759575888.352879,
enterprise_data_protection_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,12.912216186523438,True,No vulnerable algorithms detected based on explicit evidence in the provided code.,data/test_files/assembly_binary/enterprise_data_protection_engine.s,0,0,0,1759575902.277322,
feistel_network_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,7.877325057983398,True,"No vulnerable algorithms detected due to lack of explicit evidence such as library imports, specific function calls, or documented references.",data/test_files/assembly_binary/feistel_network_operations.s,0,0,0,1759575911.158758,
financial_cryptographic_accelerator,xai,grok-3-mini,assembly_binary,True,True,0.4,2,15.603622913360596,True,Detected potential RSA modular exponentiation and domestic algorithm implementation based on explicit function names; no other vulnerabilities identified.,data/test_files/assembly_binary/financial_cryptographic_accelerator.s,0,0,0,1759575927.775101,
government_classified_system_processor,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.92930006980896,True,No vulnerable cryptographic algorithms were explicitly detected in the provided assembly code.,data/test_files/assembly_binary/government_classified_system_processor.s,0,0,0,1759575937.707579,
hash_digest_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,11.688605070114136,True,No vulnerable cryptographic algorithms were detected based on explicit evidence such as library imports or function calls.,data/test_files/assembly_binary/hash_digest_operations.s,0,0,0,1759575950.406513,
hight_lightweight_cipher,xai,grok-3-mini,assembly_binary,True,True,0.9,1,12.09518814086914,True,Detected HIGHT operations based on explicit function calls.,data/test_files/assembly_binary/hight_lightweight_cipher.s,0,0,0,1759575963.514544,
hybrid_banking_security_system,xai,grok-3-mini,assembly_binary,True,True,0.7,3,14.253105878829956,True,"Detected RSA modular exponentiation patterns and big integer operations, along with memory allocation for keys.",data/test_files/assembly_binary/hybrid_banking_security_system.s,0,0,0,1759575978.772609,
industrial_control_security,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.70318078994751,True,No explicit vulnerable cryptographic algorithms were detected in the provided code.,data/test_files/assembly_binary/industrial_control_security.s,0,0,0,1759575988.4879968,
industrial_security_coprocessor,xai,grok-3-mini,assembly_binary,True,True,0.0,0,7.806000232696533,True,No vulnerable cryptographic algorithms were detected in the provided code due to the absence of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/industrial_security_coprocessor.s,0,0,0,1759575997.3066518,
kcdsa_signature_generator,xai,grok-3-mini,assembly_binary,True,True,0.0,0,13.530516147613525,True,"No specific vulnerable algorithms or patterns detected with explicit evidence from code lines, function calls, or library imports.",data/test_files/assembly_binary/kcdsa_signature_generator.s,0,0,0,1759576011.847693,
keyexchange_protocol_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,7.998043060302734,True,No vulnerable cryptographic algorithms or patterns detected.,data/test_files/assembly_binary/keyexchange_protocol_operations.s,0,0,0,1759576020.8573508,
korean_blockcipher_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.843755006790161,True,No vulnerable cryptographic algorithms were detected based on explicit evidence.,data/test_files/assembly_binary/korean_blockcipher_operations.s,0,0,0,1759576031.713462,
lea_block_cipher_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,11.46221375465393,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/lea_block_cipher_engine.s,0,0,0,1759576044.187383,
legacy_hash_computation,xai,grok-3-mini,assembly_binary,False,True,0.0,0,14.67333984375,True,No explicit evidence of vulnerable cryptographic algorithms was detected in the provided assembly code.,data/test_files/assembly_binary/legacy_hash_computation.s,0,0,0,1759576059.873491,
legacy_pki_certificate_processor,xai,grok-3-mini,assembly_binary,False,True,0.0,0,11.173105001449585,True,No vulnerable algorithms detected with explicit evidence in the provided code.,data/test_files/assembly_binary/legacy_pki_certificate_processor.s,0,0,0,1759576072.05823,
md5_sha1_hash_processor,xai,grok-3-mini,assembly_binary,False,True,0.0,0,11.993552923202515,True,No vulnerable cryptographic algorithms were explicitly detected in the provided code.,data/test_files/assembly_binary/md5_sha1_hash_processor.s,0,0,0,1759576085.063864,
medical_device_security_controller,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.15112018585205,True,No vulnerable algorithms detected based on explicit evidence in the provided assembly code.,data/test_files/assembly_binary/medical_device_security_controller.s,0,0,0,1759576096.227133,
message_digest_128bit_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.66811490058899,True,"No vulnerable algorithms detected due to lack of explicit evidence such as library imports, function calls, or algorithm names.",data/test_files/assembly_binary/message_digest_128bit_operations.s,0,0,0,1759576107.8992682,
mobile_cipher_engine,xai,grok-3-mini,assembly_binary,False,True,0.0,0,11.992153882980347,True,No vulnerable algorithms were detected in the provided code.,data/test_files/assembly_binary/mobile_cipher_engine.s,0,0,0,1759576120.9031732,
mobile_payment_security_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.196035861968994,True,No vulnerable cryptographic algorithms were explicitly detected in the provided code.,data/test_files/assembly_binary/mobile_payment_security_engine.s,0,0,0,1759576132.106563,
network_security_gateway,xai,grok-3-mini,assembly_binary,True,True,1.0,1,7.9652931690216064,True,Detected DES symmetric cipher as vulnerable to quantum attacks based on explicit function calls.,data/test_files/assembly_binary/network_security_gateway.s,0,0,0,1759576141.077556,
neural_network_inference_accelerator,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.562767267227173,True,No vulnerable algorithms detected,data/test_files/assembly_binary/neural_network_inference_accelerator.s,0,0,0,1759576152.648355,
ntru_polynomial_processor,xai,grok-3-mini,assembly_binary,False,True,0.0,0,8.94588589668274,True,No vulnerable algorithms detected in the code.,data/test_files/assembly_binary/ntru_polynomial_processor.s,0,0,0,1759576162.599751,
obfuscated_crypto_library_dispatcher,xai,grok-3-mini,assembly_binary,True,True,0.0,0,12.695755004882812,True,No explicit evidence of vulnerable cryptographic algorithms or patterns detected in the provided code.,data/test_files/assembly_binary/obfuscated_crypto_library_dispatcher.s,0,0,0,1759576176.303604,
openssl_des_enc,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.87241005897522,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or documented function calls in the provided assembly code.,data/test_files/assembly_binary/openssl_des_enc.asm,0,0,0,1759576188.183605,
openssl_des_enc,,,,False,False,0,0,0,False,,,0,0,0,0,Input validation failed
poly1305_authenticator,xai,grok-3-mini,assembly_binary,False,True,0.0,0,8.071397066116333,True,No vulnerable cryptographic algorithms or patterns were detected in the provided code.,data/test_files/assembly_binary/poly1305_authenticator.s,0,0,0,1759576198.2738829,
polymorphic_malware_crypto_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.306826114654541,True,No explicit evidence of vulnerable cryptographic algorithms was found in the provided code.,data/test_files/assembly_binary/polymorphic_malware_crypto_engine.s,0,0,0,1759576209.583601,
polynomial_field_arithmetic_engine,xai,grok-3-mini,assembly_binary,False,True,0.8,1,10.563637018203735,True,Detected elliptic curve operations based on explicit function calls; no other vulnerable cryptographic patterns identified.,data/test_files/assembly_binary/polynomial_field_arithmetic_engine.s,0,0,0,1759576221.155411,
postquantum_multimodal_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,6.675259113311768,True,"No vulnerable cryptographic algorithms or patterns detected due to lack of explicit evidence such as library imports, specific function calls, or documented algorithm names.",data/test_files/assembly_binary/postquantum_multimodal_operations.s,0,0,0,1759576228.836172,
publickey_encryption_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,12.098544836044312,True,No vulnerable algorithms detected.,data/test_files/assembly_binary/publickey_encryption_operations.s,0,0,0,1759576241.9423082,
publickey_modular_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.925932168960571,True,No vulnerable cryptographic algorithms or patterns were explicitly detected.,data/test_files/assembly_binary/publickey_modular_operations.s,0,0,0,1759576251.8729699,
publickeyalgo_messagedigest5_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.055866956710815,True,No vulnerable cryptographic algorithms or patterns detected.,data/test_files/assembly_binary/publickeyalgo_messagedigest5_operations.s,0,0,0,1759576262.9364932,
quantum_communication_relay,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.294847965240479,True,No vulnerable cryptographic algorithms or patterns detected based on explicit evidence in the code.,data/test_files/assembly_binary/quantum_communication_relay.s,0,0,0,1759576273.239236,
quantum_cryptanalysis_simulation,xai,grok-3-mini,assembly_binary,True,True,1.0,2,10.32316279411316,True,Detected RSA and Elliptic Curve patterns based on explicit function calls.,data/test_files/assembly_binary/quantum_cryptanalysis_simulation.s,0,0,0,1759576284.5706701,
quantum_migration_bridge_processor,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.205199003219604,True,No vulnerable cryptographic algorithms detected based on explicit evidence in the provided assembly code.,data/test_files/assembly_binary/quantum_migration_bridge_processor.s,0,0,0,1759576294.781098,
quantum_resistant_lattice_operations,xai,grok-3-mini,assembly_binary,True,True,1.0,0,10.767734050750732,True,No explicit evidence of vulnerable cryptographic algorithms was found in the provided code.,data/test_files/assembly_binary/quantum_resistant_lattice_operations.s,0,0,0,1759576306.556288,
quantum_resistant_migration_bridge,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.106677293777466,True,"No vulnerable algorithms detected due to lack of explicit evidence such as library imports, specific function calls, or documented implementations.",data/test_files/assembly_binary/quantum_resistant_migration_bridge.s,0,0,0,1759576315.670825,
quantum_safe_communicator,xai,grok-3-mini,assembly_binary,False,True,1.0,0,10.770498752593994,True,No vulnerable cryptographic algorithms detected based on explicit evidence in the provided assembly code.,data/test_files/assembly_binary/quantum_safe_communicator.s,0,0,0,1759576327.449246,
rsa_key_generation_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.562693119049072,True,No vulnerable cryptographic algorithms were explicitly detected in the provided code.,data/test_files/assembly_binary/rsa_key_generation_engine.s,0,0,0,1759576339.017441,
salsa20_stream_cipher,xai,grok-3-mini,assembly_binary,False,True,0.0,0,9.74430799484253,True,No vulnerable cryptographic algorithms were detected in the provided code.,data/test_files/assembly_binary/salsa20_stream_cipher.s,0,0,0,1759576349.768926,
satellite_communication_security,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.461822032928467,True,No vulnerable cryptographic algorithms or patterns detected based on explicit evidence in the provided code.,data/test_files/assembly_binary/satellite_communication_security.s,0,0,0,1759576360.238204,
secure_boot_verification_processor,xai,grok-3-mini,assembly_binary,False,True,0.0,0,10.449090003967285,True,No vulnerable cryptographic algorithms were explicitly detected in the provided code.,data/test_files/assembly_binary/secure_boot_verification_processor.s,0,0,0,1759576371.69066,
secure_communication_protocol,xai,grok-3-mini,assembly_binary,True,True,0.8,1,13.01692271232605,True,Detected a potential Diffie-Hellman implementation that may be vulnerable to quantum attacks.,data/test_files/assembly_binary/secure_communication_protocol.s,0,0,0,1759576385.712806,
secure_hash_256bit_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,11.386806964874268,True,No vulnerable algorithms detected,data/test_files/assembly_binary/secure_hash_256bit_operations.s,0,0,0,1759576398.103437,
secure_matrix_transformation_unit,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.822487115859985,True,No vulnerable cryptographic algorithms detected in the provided code.,data/test_files/assembly_binary/secure_matrix_transformation_unit.s,0,0,0,1759576407.933579,
siphash_prf_function,xai,grok-3-mini,assembly_binary,False,True,0.0,0,8.722289085388184,True,No vulnerable algorithms detected.,data/test_files/assembly_binary/siphash_prf_function.s,0,0,0,1759576417.661828,
smart_card_authenticator,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.468065023422241,True,No vulnerable cryptographic algorithms detected based on explicit evidence in the provided assembly code.,data/test_files/assembly_binary/smart_card_authenticator.s,0,0,0,1759576429.134026,
smart_card_security_module,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.842530965805054,True,No vulnerable cryptographic algorithms were detected in the provided code due to the absence of explicit evidence such as library imports or specific function calls.,data/test_files/assembly_binary/smart_card_security_module.s,0,0,0,1759576439.979116,
sphincs_signature_scheme,xai,grok-3-mini,assembly_binary,False,True,0.0,0,9.028084993362427,True,No vulnerable cryptographic algorithms or patterns detected in the provided code.,data/test_files/assembly_binary/sphincs_signature_scheme.s,0,0,0,1759576450.019744,
steganographic_crypto_covert_channel,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.847752809524536,True,No vulnerable cryptographic algorithms were detected based on explicit evidence.,data/test_files/assembly_binary/steganographic_crypto_covert_channel.s,0,0,0,1759576460.8754501,
stream_cipher_generator,xai,grok-3-mini,assembly_binary,True,True,1.0,1,13.017944097518921,True,Detected RC4 symmetric cipher based on explicit function calls.,data/test_files/assembly_binary/stream_cipher_generator.s,0,0,0,1759576474.904243,
stream_generator_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.226491212844849,True,No vulnerable cryptographic algorithms were explicitly detected in the provided code.,data/test_files/assembly_binary/stream_generator_operations.s,0,0,0,1759576485.14349,
stream_keygeneration_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,9.227838039398193,True,"No vulnerable algorithms were detected due to the absence of explicit evidence such as library imports, function calls, or algorithm names.",data/test_files/assembly_binary/stream_keygeneration_operations.s,0,0,0,1759576495.384695,
triple_des_encryption_module,xai,grok-3-mini,assembly_binary,True,True,1.0,1,11.186192035675049,True,Detected 3DES as a vulnerable symmetric cipher pattern.,data/test_files/assembly_binary/triple_des_encryption_module.s,0,0,0,1759576507.583789,
vpn_tunnel_encryption_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.80345106124878,True,No vulnerable cryptographic algorithms detected due to lack of explicit evidence such as library imports or specific function calls.,data/test_files/assembly_binary/vpn_tunnel_encryption_engine.s,0,0,0,1759576517.4002,
x25519_key_agreement,xai,grok-3-mini,assembly_binary,False,True,0.7,1,11.714459896087646,True,Detected elliptic curve scalar multiplication based on explicit comments and function implementation; no evidence of vulnerable algorithms.,data/test_files/assembly_binary/x25519_key_agreement.s,0,0,0,1759576530.123843,
apache_legacy_ssl,xai,grok-3-mini,logs_config,True,True,1.0,7,15.963024139404297,True,"Detected quantum-vulnerable configurations including RSA with 1024-bit keys, ECC curves, DH parameters, symmetric ciphers like DES and RC4, and legacy protocols like TLSv1.0 and SSLv3.",data/test_files/logs_config/apache_legacy_ssl.conf,0,0,0,1759576547.0967958,
automotive_v2x_system,xai,grok-3-mini,logs_config,True,True,1.0,10,17.01701593399048,True,"Detected various quantum-vulnerable algorithms including RSA, ECDSA, ECDHE, ARIA, SEED, LEA, 3DES, RC4, and MD5 based on explicit configuration entries and log messages.",data/test_files/logs_config/automotive_v2x_system.yaml,0,0,0,1759576565.119978,
blockchain_node_security,xai,grok-3-mini,logs_config,True,True,1.0,6,20.8970627784729,True,"Detected configurations explicitly referencing ECC and symmetric ciphers like AES and ChaCha20, along with planned migration to quantum-resistant algorithms.",data/test_files/logs_config/blockchain_node_security.conf,0,0,0,1759576587.0323079,
cloud_hsm_operations,xai,grok-3-mini,logs_config,True,True,0.9,9,16.90703797340393,True,"Detected quantum-vulnerable elements including RSA, ECC, and AES configurations based on explicit log entries; no evidence for Korean algorithms or discrete logarithm-based ones.",data/test_files/logs_config/cloud_hsm_operations.log,0,0,0,1759576604.9521868,
cloud_storage_encryption,xai,grok-3-mini,logs_config,True,True,0.95,11,19.672420024871826,True,"Detected vulnerable algorithms include RSA in key wrapping and signatures, elliptic curve configurations in key exchange and signatures, Korean algorithms like ARIA and SEED, symmetric ciphers like 3DES, and various legacy settings; no evidence for DSA, DH, ElGamal, or explicit migration transitions.",data/test_files/logs_config/cloud_storage_encryption.conf,0,0,0,1759576625.6382349,
cryptocurrency_exchange,xai,grok-3-mini,logs_config,True,True,0.9,11,17.939273834228516,True,"Detected multiple quantum-vulnerable algorithms including RSA, ECDSA, DH, 3DES, and SHA-1 based on explicit log entries; no evidence for Korean algorithms or migration logs.",data/test_files/logs_config/cryptocurrency_exchange.log,0,0,0,1759576644.59119,
cryptographic_operations_detailed,xai,grok-3-mini,logs_config,True,True,0.8,10,22.32959485054016,True,"Detected several quantum-vulnerable elements including RSA, ECC, DH, and legacy configurations based on explicit log entries, with indications of Korean standards compliance and migration planning.",data/test_files/logs_config/cryptographic_operations_detailed.log,0,0,0,1759576667.928481,
database_encryption_setup,xai,grok-3-mini,logs_config,True,True,0.8,8,15.17494511604309,True,"Detected configurations for SEED, ARIA, AES, and 3DES with explicit evidence in logs; 3DES is noted as deprecated and potentially quantum-vulnerable.",data/test_files/logs_config/database_encryption_setup.log,0,0,0,1759576684.110697,
email_server_crypto,xai,grok-3-mini,logs_config,True,True,0.9,7,17.287743091583252,True,"Detected configurations for RSA, ECC, DH, 3DES, and legacy S/MIME, indicating potential quantum vulnerabilities; no evidence for Korean algorithms or migration logs.",data/test_files/logs_config/email_server_crypto.conf,0,0,0,1759576702.412287,
enterprise_banking_pki_configuration,xai,grok-3-mini,logs_config,True,True,0.0,0,12.834573984146118,True,"No vulnerable algorithms detected due to the absence of explicit cryptographic API calls, library imports, or function calls in the provided configuration data.",data/test_files/logs_config/enterprise_banking_pki_configuration.conf,0,0,0,1759576716.2621398,
financial_payment_gateway,xai,grok-3-mini,logs_config,True,True,0.95,10,15.884589910507202,True,"Detected multiple vulnerable configurations including RSA, DH, 3DES, and legacy TLS protocols based on explicit evidence in configuration settings and logs.",data/test_files/logs_config/financial_payment_gateway.conf,0,0,0,1759576733.1601212,
government_document_system,xai,grok-3-mini,logs_config,True,True,0.95,12,14.453649044036865,True,"Detected vulnerable algorithms include RSA, KCDSA, EC-KCDSA, and ECDSA based on explicit log entries indicating their use and quantum vulnerabilities.",data/test_files/logs_config/government_document_system.log,0,0,0,1759576748.6234019,
healthcare_ehr_system,xai,grok-3-mini,logs_config,True,True,0.9,10,20.183053016662598,True,"Detected vulnerable configurations including RSA, ECC, DHE-DSA, AES-128-CBC, and legacy ciphers in various sections, with explicit evidence from configuration settings and log entries.",data/test_files/logs_config/healthcare_ehr_system.yaml,0,0,0,1759576769.8193338,
industrial_control_system,xai,grok-3-mini,logs_config,True,True,0.95,11,23.25697112083435,True,"Detected explicit uses of RSA, ECDSA, ECDH, DSA, DH, SEED, ARIA, HIGHT, and legacy elements like SHA-1 in logs, indicating potential quantum vulnerabilities.",data/test_files/logs_config/industrial_control_system.log,0,0,0,1759576794.088181,
iot_device_firmware_config,xai,grok-3-mini,logs_config,True,True,0.8,7,12.14945101737976,True,"Detected configurations involving RSA, ECC, TLS, mbedTLS library, and legacy protocols based on explicit evidence in the provided configuration.",data/test_files/logs_config/iot_device_firmware_config.yaml,0,0,0,1759576807.2509289,
korean_crypto_library_config,xai,grok-3-mini,logs_config,True,True,0.8,6,15.217315912246704,True,"Detected configurations for elliptic curve parameters, Korean algorithms, cryptographic library settings, key management, legacy support, and Korean compliance based on explicit sections in the configuration file.",data/test_files/logs_config/korean_crypto_library_config.ini,0,0,0,1759576823.4748101,
military_secure_comms,xai,grok-3-mini,logs_config,True,True,1.0,10,17.444207906723022,True,"Detected multiple instances of quantum-vulnerable algorithms including RSA, DH, 3DES, Blowfish, and MD5 based on explicit configuration entries and log warnings; Korean algorithms like ARIA and SEED are configured but their quantum resistance requires further review as per logs.",data/test_files/logs_config/military_secure_comms.conf,0,0,0,1759576841.932162,
mobile_app_security_audit,xai,grok-3-mini,logs_config,True,True,0.85,10,18.586806058883667,True,"Detected quantum-vulnerable configurations including RSA key specifications, ECC settings, RC4 symmetric ciphers, and legacy TLS suites based on explicit log entries.",data/test_files/logs_config/mobile_app_security_audit.log,0,0,0,1759576861.523442,
nginx_mixed_security_gateway,xai,grok-3-mini,logs_config,True,True,0.95,10,14.816988945007324,True,"Detected configurations involving RSA, ECC, DH, ARIA, SEED, AES, TLSv1.1, and legacy TLSv1, with explicit evidence from the provided configuration file.",data/test_files/logs_config/nginx_mixed_security_gateway.conf,0,0,0,1759576877.351587,
openssh,xai,grok-3-mini,logs_config,True,True,0.8,7,14.028782844543457,True,"Detected vulnerable algorithms include RSA, ECC, DSA, DH, AES, and legacy SSH-DSS based on explicit file names and log entries.",data/test_files/logs_config/openssh.log,0,0,0,1759576892.391813,
quantum_safe_migration_plan,xai,grok-3-mini,logs_config,True,True,0.0,0,8.082291841506958,True,"No explicit evidence of vulnerable cryptographic implementations was found in the provided data, as there are no cryptographic API calls, library imports, or function calls present.",data/test_files/logs_config/quantum_safe_migration_plan.yaml,0,0,0,1759576901.4828742,
satellite_ground_station,xai,grok-3-mini,logs_config,True,True,0.9,12,19.349754810333252,True,"Detected multiple instances of RSA, elliptic curve configurations, discrete logarithm algorithms, Korean algorithms, symmetric ciphers like 3DES, legacy protocols, and warnings for vulnerable implementations in the logs.",data/test_files/logs_config/satellite_ground_station.log,0,0,0,1759576921.849797,
security_scanner_findings,xai,grok-3-mini,logs_config,True,True,0.95,11,17.970370054244995,True,"Detected quantum-vulnerable algorithms including RSA, ECC, DH, RC4, 3DES, MD5, and Korean algorithms like SEED and HAS-160, based on explicit log entries.",data/test_files/logs_config/security_scanner_findings.log,0,0,0,1759576940.83303,
smart_city_infrastructure,xai,grok-3-mini,logs_config,True,True,0.95,13,20.865917205810547,True,"Detected multiple quantum-vulnerable algorithms and configurations based on explicit log entries, including RSA, ECDSA, DSA, DH, and various Korean standards, with warnings and migration plans noted.",data/test_files/logs_config/smart_city_infrastructure.log,0,0,0,1759576962.705106,
ssh_server_hardened,xai,grok-3-mini,logs_config,True,True,0.95,8,15.531727075576782,True,"Detected configurations for RSA, elliptic curves, Diffie-Hellman, cryptographic settings, certificate authority, authentication, legacy protocols, and migration notes, indicating potential quantum vulnerabilities in specified algorithms.",data/test_files/logs_config/ssh_server_hardened.conf,0,0,0,1759576979.246591,
ssl_legacy_banking_configuration,xai,grok-3-mini,logs_config,True,True,0.9,7,15.984877109527588,True,"Detected configurations for RSA, ECDHE, DHE, and legacy ciphers in SSL/TLS settings, indicating potential quantum vulnerabilities.",data/test_files/logs_config/ssl_legacy_banking_configuration.conf,0,0,0,1759576996.245715,
telecom_5g_network,xai,grok-3-mini,logs_config,True,True,1.0,12,21.392853021621704,True,"Detected multiple vulnerable algorithms including RSA, ECDSA, DH, and various Korean standards based on explicit configuration entries and log warnings; no evidence for symmetric cipher vulnerabilities or migration logs.",data/test_files/logs_config/telecom_5g_network.conf,0,0,0,1759577018.651784,
tls_cipher_negotiation_warnings,,,,False,False,0,0,30.029943704605103,False,,,0,0,0,0,"XAI API Error: HTTPSConnectionPool(host='api.x.ai', port=443): Read timed out. (read timeout=30)"
vpn_server_runtime,xai,grok-3-mini,logs_config,True,True,0.7,8,17.751023054122925,True,"Detected use of RSA and DH configurations, which are quantum-vulnerable based on explicit log entries.",data/test_files/logs_config/vpn_server_runtime.log,0,0,0,1759577068.456034,
AdvancedComputationalFramework,ollama,llama3:8b,source_code,True,True,0.8,5,24.549681901931763,False,"The code contains vulnerable RSA implementations, DSA algorithms, and MD5 hash functions. It also uses insecure AES-128 and DES symmetric ciphers.",data/test_files/source_code/AdvancedComputationalFramework.rb,0,0,0,1759577094.017945,
AdvancedCryptographicOrchestrator,ollama,llama3:8b,source_code,True,True,0.8,4,22.264081239700317,False,"The code contains vulnerable RSA and AES implementations, as well as PKCS#1 v1.5 padding scheme.",data/test_files/source_code/AdvancedCryptographicOrchestrator.java,0,0,0,1759577116.28362,
AdvancedMathematicalFramework,ollama,llama3:8b,source_code,True,True,0.8,5,22.03858208656311,False,"The code contains several vulnerable cryptographic implementations, including RSA and DSA, as well as the use of weak hash functions like MD5.",data/test_files/source_code/AdvancedMathematicalFramework.rs,0,0,0,1759577138.324287,
AutomotiveSecurityUnit,ollama,llama3:8b,source_code,True,True,0.8,4,20.833683967590332,False,"The code contains vulnerable RSA implementations, DSA-based algorithms, and MD5 hash functions. It also uses AES-128 symmetric cipher.",data/test_files/source_code/AutomotiveSecurityUnit.cpp,0,0,0,1759577159.159586,
BankingSecurityModule,ollama,llama3:8b,source_code,True,True,0.8,4,22.068636894226074,False,"The Banking Security Module contains vulnerable cryptographic implementations and usage patterns. Specifically, DSA is detected as a discrete logarithm based algorithm, AES-128 is detected as a symmetric cipher vulnerable to Grover's algorithm, and SecureRandom is detected as an insecure random number generator. Additionally, the BlockCipher class is detected as a legacy cryptographic library.",data/test_files/source_code/BankingSecurityModule.java,0,0,0,1759577181.22989,
BlockchainCryptographyEngine,ollama,llama3:8b,source_code,True,True,0.8,4,20.800097942352295,False,"The code contains vulnerable RSA implementations, elliptic curve cryptography (ECC/ECDSA/ECDH) implementations, and insecure random number generators.",data/test_files/source_code/BlockchainCryptographyEngine.java,0,0,0,1759577202.0323122,
CorporateSecurityOrchestrator,ollama,llama3:8b,source_code,True,True,0.8,4,20.830314874649048,False,"The code contains vulnerable RSA implementations, DSA algorithms, and MD5 hash functions. It also uses DES symmetric cipher.",data/test_files/source_code/CorporateSecurityOrchestrator.py,0,0,0,1759577222.86514,
CorporateVPNManager,ollama,llama3:8b,source_code,True,True,0.8,4,23.121596097946167,False,"The code contains vulnerable implementations of DES and 3DES algorithms, as well as insecure use of SecureRandom for key generation.",data/test_files/source_code/CorporateVPNManager.java,0,0,0,1759577245.9890182,
DigitalCertificateValidator,ollama,llama3:8b,source_code,True,True,0.8,4,19.351032972335815,False,"The code contains vulnerable RSA implementations, DSA-based algorithms, and MD5 hash functions.",data/test_files/source_code/DigitalCertificateValidator.java,0,0,0,1759577265.3425028,
DistributedComputationEngine,ollama,llama3:8b,source_code,True,True,0.8,3,21.122150897979736,False,"The code contains vulnerable cryptographic implementations, including DSA and AES-128. Additionally, MD5 hash function is used.",data/test_files/source_code/DistributedComputationEngine.py,0,0,0,1759577286.467116,
DistributedComputeManager,ollama,llama3:8b,source_code,True,True,0.8,6,22.085472106933594,False,"This code contains several vulnerable cryptographic implementations, including DSA and DES. Additionally, it uses insecure random number generators and legacy cryptographic libraries.",data/test_files/source_code/DistributedComputeManager.js,0,0,0,1759577308.555233,
EnterpriseDataSecurityFramework,ollama,llama3:8b,source_code,True,True,0.8,5,21.639019012451172,False,"The code contains vulnerable RSA, ECC/ECDSA/ECDH implementations, and uses SEED and AES-128/3DES/DES/RC4 symmetric ciphers.",data/test_files/source_code/EnterpriseDataSecurityFramework.c,0,0,0,1759577330.19684,
EnterpriseSecurityGateway,ollama,llama3:8b,source_code,True,True,0.8,5,21.77369499206543,False,"The code contains vulnerable RSA implementations, elliptic curve cryptography (ECC/ECDSA/ECDH), and insecure random number generators. It also uses the SecureRandom class for key generation.",data/test_files/source_code/EnterpriseSecurityGateway.java,0,0,0,1759577351.973427,
HardwareSecurity,ollama,llama3:8b,source_code,True,True,0.8,5,20.298264741897583,False,"The code contains vulnerable RSA and DSA implementations, as well as insecure random number generation using SecureRandom.",data/test_files/source_code/HardwareSecurity.java,0,0,0,1759577372.274091,
IoTDeviceSecurityController,ollama,llama3:8b,source_code,True,True,0.8,4,21.495309829711914,False,"The code contains vulnerable cryptographic implementations and usage patterns. Specifically, DSA algorithm is detected, as well as AES-128 symmetric cipher. Additionally, insecure random number generation and key derivation functions are identified.",data/test_files/source_code/IoTDeviceSecurityController.go,0,0,0,1759577393.772597,
LegacyPKISystem,ollama,llama3:8b,source_code,True,True,0.8,4,20.304810047149658,False,"The code contains vulnerable DSA and SHA-1 implementations, as well as insecure random number generation using SecureRandom.",data/test_files/source_code/LegacyPKISystem.java,0,0,0,1759577414.079197,
MathematicalTransformEngine,ollama,llama3:8b,source_code,True,True,0.8,7,23.616122245788574,False,"The code contains vulnerable RSA implementations, DSA algorithms, and insecure hash functions. It also uses legacy cryptographic libraries and deprecated cipher suites.",data/test_files/source_code/MathematicalTransformEngine.java,0,0,0,1759577437.697519,
MediaStreamProtection,ollama,llama3:8b,source_code,True,True,0.8,4,21.528247117996216,False,"The Media Stream Protection System contains vulnerable cryptographic implementations, including RC4 and DES symmetric ciphers, as well as insecure random number generation using SecureRandom.",data/test_files/source_code/MediaStreamProtection.java,0,0,0,1759577459.228013,
QuantumResistantMessaging,ollama,llama3:8b,source_code,False,True,0.8,4,20.531820058822632,False,"The code uses lattice-based cryptography, AES-128, and SecureRandom, which are vulnerable to quantum attacks.",data/test_files/source_code/QuantumResistantMessaging.java,0,0,0,1759577479.762135,
QuantumSafeTransitionManager,ollama,llama3:8b,source_code,True,True,0.8,5,22.651875019073486,False,"The code contains vulnerable RSA implementations and usage patterns, as well as discrete logarithm based algorithms and symmetric ciphers vulnerable to Grover's algorithm. Additionally, it uses hybrid systems mixing quantum-vulnerable and quantum-resistant algorithms.",data/test_files/source_code/QuantumSafeTransitionManager.cpp,0,0,0,1759577502.417123,
SecureChatApplication,ollama,llama3:8b,source_code,False,True,0.8,3,20.597094774246216,False,"The code uses DSA and AES-128 cryptographic algorithms, which are vulnerable to quantum attacks. Additionally, it uses the SecureRandom class for generating random numbers, which is not cryptographically secure.",data/test_files/source_code/SecureChatApplication.java,0,0,0,1759577523.0167081,
SecureCloudStorage,ollama,llama3:8b,source_code,True,True,0.8,3,20.355560064315796,False,"The code uses AES encryption and SecureRandom for key generation, which are vulnerable to Grover's algorithm.",data/test_files/source_code/SecureCloudStorage.java,0,0,0,1759577543.374569,
SecureTransactionProcessor,ollama,llama3:8b,source_code,True,True,0.8,6,21.822633981704712,False,"The code contains several vulnerable cryptographic implementations and usage patterns, including RSA, DSA, AES-128, DES, MD5, SHA-1, and insecure random number generation.",data/test_files/source_code/SecureTransactionProcessor.go,0,0,0,1759577565.200012,
StealthCryptographicLibrary,ollama,llama3:8b,source_code,True,True,0.8,8,27.70740818977356,False,"The analyzed code contains several vulnerable cryptographic implementations and usage patterns, including RSA, ECC/ECDSA/ECDH, SEED, AES-128/3DES/DES/RC4, MD5/SHA-1, PKCS#1 v1.5, and obfuscated implementations of vulnerable algorithms. Additionally, the code uses legacy cryptographic libraries and deprecated cipher suites.",data/test_files/source_code/StealthCryptographicLibrary.py,0,0,0,1759577592.910081,
TelecommunicationsSecurityHub,ollama,llama3:8b,source_code,True,True,0.9,6,22.056951999664307,False,"The code contains several vulnerable cryptographic implementations, including RSA, DSA, AES-128, DES, MD5, and SHA-1. Additionally, the use of SecureRandom and a legacy cipher suite are identified as potential vulnerabilities.",data/test_files/source_code/TelecommunicationsSecurityHub.java,0,0,0,1759577614.96946,
a5_trivium_stream_ciphers,ollama,llama3:8b,source_code,False,True,0.8,1,20.334502935409546,False,No explicit evidence of vulnerable cryptographic algorithms found in the provided code.,data/test_files/source_code/a5_trivium_stream_ciphers.py,0,0,0,1759577635.306062,
aes_advanced_encryption,ollama,llama3:8b,source_code,True,True,0.8,1,25.850056171417236,False,"The code contains a vulnerable implementation of AES-128, but no other cryptographic vulnerabilities were detected.",data/test_files/source_code/aes_advanced_encryption.java,0,0,0,1759577661.158038,
aria_korean_block_cipher,ollama,llama3:8b,source_code,True,True,0.8,3,22.16330313682556,False,"The code contains vulnerable cryptographic implementations, including SEED and RC4 algorithms.",data/test_files/source_code/aria_korean_block_cipher.py,0,0,0,1759577683.323731,
aria_sha256_ecdsa_government,ollama,llama3:8b,source_code,False,True,0.8,2,18.880207777023315,False,The code contains vulnerable SEED algorithm and HAS-160 hash function implementations.,data/test_files/source_code/aria_sha256_ecdsa_government.py,0,0,0,1759577702.206004,
blowfish_symmetric_encryption,ollama,llama3:8b,source_code,False,True,0.8,3,22.32171106338501,False,This code contains vulnerable implementations of discrete logarithm-based algorithms (DSA) and symmetric ciphers vulnerable to Grover's algorithm (RC4).,data/test_files/source_code/blowfish_symmetric_encryption.c,0,0,0,1759577724.530142,
camellia_block_cipher,ollama,llama3:8b,source_code,True,True,0.8,3,25.892106294631958,False,"The code contains a DSA implementation and uses the SEED algorithm, but does not appear to use any other vulnerable cryptographic algorithms.",data/test_files/source_code/camellia_block_cipher.c,0,0,0,1759577750.42441,
cast_feistel_cipher,ollama,llama3:8b,source_code,True,True,0.8,1,24.791563987731934,False,"The code contains a vulnerable RC4 implementation, but no other cryptographic vulnerabilities were detected.",data/test_files/source_code/cast_feistel_cipher.c,0,0,0,1759577775.218139,
chacha20_poly1305_aead,ollama,llama3:8b,source_code,True,True,0.8,1,22.323057889938354,False,"The code uses the ChaCha20-Poly1305 AEAD algorithm, which is not vulnerable to quantum attacks. However, it does use AES-128, which is vulnerable to Grover's algorithm.",data/test_files/source_code/chacha20_poly1305_aead.java,0,0,0,1759577797.543506,
cloud_security_orchestrator,ollama,llama3:8b,source_code,True,True,0.8,5,22.748931884765625,False,"The Cloud Security Orchestrator contains vulnerable cryptographic implementations, including RSA and DSA algorithms, as well as the SEED Korean domestic algorithm. Additionally, MD5 hash functions are used, which are considered weak.",data/test_files/source_code/cloud_security_orchestrator.py,0,0,0,1759577820.295008,
database_encryption_engine,ollama,llama3:8b,source_code,True,True,0.8,2,22.258053302764893,False,"The code uses a custom block cipher with a Feistel network, which is not a well-known or widely used algorithm. However, it does use AES-128 as the underlying symmetric cipher.",data/test_files/source_code/database_encryption_engine.c,0,0,0,1759577842.555475,
diffie_hellman_key_exchange,ollama,llama3:8b,source_code,True,True,0.8,4,20.76534080505371,False,"The code contains vulnerable RSA implementations, DSA-based algorithms, and insecure random number generation.",data/test_files/source_code/diffie_hellman_key_exchange.java,0,0,0,1759577863.323188,
digital_identity_platform,ollama,llama3:8b,source_code,True,True,0.8,4,20.618754863739014,False,"The code contains vulnerable RSA and ECC implementations, as well as insecure random number generation.",data/test_files/source_code/digital_identity_platform.js,0,0,0,1759577883.944451,
elgamal_diffie_hellman_pki,ollama,llama3:8b,source_code,True,True,0.8,5,21.783693075180054,False,"The code contains vulnerable implementations of RSA and DSA algorithms, as well as insecure random number generation.",data/test_files/source_code/elgamal_diffie_hellman_pki.py,0,0,0,1759577905.7305112,
elliptic_curve_cryptography,ollama,llama3:8b,source_code,True,True,0.8,5,21.42848014831543,False,"The code contains vulnerable implementations of ECDSA, DSA, and AES-128 algorithms, as well as insecure random number generation using SecureRandom.",data/test_files/source_code/elliptic_curve_cryptography.java,0,0,0,1759577927.161419,
financial_risk_analyzer,ollama,llama3:8b,source_code,True,True,0.8,5,21.965523958206177,False,"The code contains vulnerable RSA implementations, DSA-based algorithms, and MD5 hash functions. It also uses PKCS#1 v1.5 padding scheme.",data/test_files/source_code/financial_risk_analyzer.py,0,0,0,1759577949.12912,
financial_transaction_processor,ollama,llama3:8b,source_code,True,True,0.8,3,22.4465651512146,False,"The code contains vulnerable cryptographic implementations, including DES and RC4 symmetric ciphers, as well as the SEED Korean domestic algorithm.",data/test_files/source_code/financial_transaction_processor.c,0,0,0,1759577971.5782552,
financial_transaction_security,ollama,llama3:8b,source_code,True,True,0.8,4,22.561726093292236,False,"The code contains vulnerable RSA and DSA implementations, as well as the use of MD5 hash function.",data/test_files/source_code/financial_transaction_security.c,0,0,0,1759577994.142147,
government_document_signer,ollama,llama3:8b,source_code,True,True,0.8,4,22.368468046188354,False,"The code contains vulnerable ECDSA and DSA implementations, as well as the SEED algorithm. Additionally, it uses MD5 for hashing.",data/test_files/source_code/government_document_signer.c,0,0,0,1759578016.5131361,
idea_international_encryption,ollama,llama3:8b,source_code,True,True,0.8,3,21.440233945846558,False,"The code contains vulnerable RSA and DSA implementations, as well as the IDEA symmetric cipher.",data/test_files/source_code/idea_international_encryption.java,0,0,0,1759578037.955478,
iot_device_security,ollama,llama3:8b,source_code,True,True,0.8,4,23.3247709274292,False,"The code contains vulnerable cryptographic implementations and usage patterns, including DSA and DES algorithms, as well as insecure key derivation functions.",data/test_files/source_code/iot_device_security.c,0,0,0,1759578061.282379,
lattice_isogeny_postquantum,ollama,llama3:8b,source_code,True,True,0.8,3,22.33627700805664,False,"The code contains vulnerable cryptographic implementations and usage patterns. Specifically, it uses AES-128 symmetric cipher and insecure random number generation. Additionally, it employs lattice-based cryptography, which may have implementation-specific vulnerabilities.",data/test_files/source_code/lattice_isogeny_postquantum.py,0,0,0,1759578083.621064,
legacy_authentication_system,ollama,llama3:8b,source_code,True,True,0.8,5,22.663304328918457,False,"The code contains vulnerable RSA implementations and usage patterns, as well as weak hash functions like MD5. Additionally, it uses legacy cryptographic libraries.",data/test_files/source_code/legacy_authentication_system.c,0,0,0,1759578106.286838,
md5_sha1_weak_hash,ollama,llama3:8b,source_code,True,True,0.8,4,22.062798738479614,False,"The code contains vulnerable implementations of DSA and AES-128 algorithms, as well as a legacy cryptographic library.",data/test_files/source_code/md5_sha1_weak_hash.py,0,0,0,1759578128.35091,
medical_device_encryption,ollama,llama3:8b,source_code,True,True,0.8,6,22.755208015441895,False,"The code contains several vulnerable cryptographic implementations and usage patterns, including RSA, DSA, AES-128, MD5, and insecure random number generation.",data/test_files/source_code/medical_device_encryption.rs,0,0,0,1759578151.108907,
military_communication_system,ollama,llama3:8b,source_code,False,True,0.8,4,24.335613012313843,False,"The code contains vulnerable cryptographic implementations and usage patterns, including DSA and DES algorithms, as well as SHA-1 hash function. Additionally, an implementation-specific vulnerability is detected in the `process_military_block` function.",data/test_files/source_code/military_communication_system.c,0,0,0,1759578175.447457,
mobile_secure_messenger,ollama,llama3:8b,source_code,True,True,0.8,3,22.4181706905365,False,"The code contains vulnerable cryptographic implementations, including ECC and DSA algorithms.",data/test_files/source_code/mobile_secure_messenger.c,0,0,0,1759578197.8680372,
network_infrastructure_monitor,ollama,llama3:8b,source_code,True,True,0.8,3,20.790199756622314,False,"The code contains vulnerable RSA and ECC implementations, as well as AES-128 symmetric cipher usage.",data/test_files/source_code/network_infrastructure_monitor.cpp,0,0,0,1759578218.6606798,
ntru_lattice_encryption,ollama,llama3:8b,source_code,True,True,0.8,1,20.015716791152954,False,"The code contains a vulnerable implementation of AES-128, but no other cryptographic vulnerabilities were detected.",data/test_files/source_code/ntru_lattice_encryption.java,0,0,0,1759578238.678585,
openssl_des_enc,ollama,llama3:8b,source_code,False,True,0.8,4,24.905706644058228,False,"This code contains vulnerable RSA implementations, DSA-based algorithms, and DES encryption. It also uses MD5 hash functions.",data/test_files/source_code/openssl_des_enc.c,0,0,0,1759578263.585222,
quantum_resistant_messenger,ollama,llama3:8b,source_code,True,True,0.8,4,21.16443920135498,False,"The code contains vulnerable cryptographic implementations and usage patterns. Specifically, DSA is detected as a discrete logarithm based algorithm, AES-128 is detected as a symmetric cipher vulnerable to Grover's algorithm, and insecure random number generation is detected.",data/test_files/source_code/quantum_resistant_messenger.py,0,0,0,1759578284.752248,
rc4_stream_generator,ollama,llama3:8b,source_code,True,True,0.8,1,23.113791942596436,False,"The code contains RC4 implementation, which is vulnerable to Grover's algorithm.",data/test_files/source_code/rc4_stream_generator.c,0,0,0,1759578307.868296,
rsa_gen,ollama,llama3:8b,source_code,True,True,0.8,4,23.006375312805176,False,"The code contains vulnerable RSA implementations and usage patterns, as well as DSA and AES-128 symmetric ciphers. Additionally, it uses PKCS#1 v1.5 padding scheme.",data/test_files/source_code/rsa_gen.c,0,0,0,1759578330.877067,
rsa_modular_exponentiation,ollama,llama3:8b,source_code,True,True,0.8,5,22.461424112319946,False,"The code contains vulnerable RSA implementations, DSA-based algorithms, and uses MD5 hash function. It also employs PKCS#1 v1.5 padding scheme.",data/test_files/source_code/rsa_modular_exponentiation.py,0,0,0,1759578353.340906,
rsa_public_key_system,ollama,llama3:8b,source_code,True,True,0.8,5,22.32661771774292,False,"The code contains vulnerable implementations of RSA and AES-128 algorithms, as well as weak OAEP padding scheme.",data/test_files/source_code/rsa_public_key_system.java,0,0,0,1759578375.669775,
salsa20_stream_cipher,ollama,llama3:8b,source_code,True,True,0.8,1,22.344877004623413,False,"The code appears to use RC4 symmetric cipher, which is vulnerable to Grover's algorithm.",data/test_files/source_code/salsa20_stream_cipher.c,0,0,0,1759578398.0169961,
secure_messaging_protocol,ollama,llama3:8b,source_code,True,True,0.8,5,22.466286182403564,False,"The code contains vulnerable RSA implementations, DSA-based algorithms, and insecure random number generation. It also uses PKCS#1 v1.5 padding scheme.",data/test_files/source_code/secure_messaging_protocol.rb,0,0,0,1759578420.485672,
secure_video_streaming,ollama,llama3:8b,source_code,False,True,0.8,2,21.366188049316406,False,"The code contains a vulnerable implementation of DSA and AES-128, which are susceptible to quantum attacks.",data/test_files/source_code/secure_video_streaming.c,0,0,0,1759578441.854114,
seed_aes_hybrid_banking,ollama,llama3:8b,source_code,True,True,0.8,3,24.577198028564453,False,"This code contains vulnerable cryptographic implementations, including DSA and SEED algorithms.",data/test_files/source_code/seed_aes_hybrid_banking.py,0,0,0,1759578466.433541,
seed_stream_cipher,ollama,llama3:8b,source_code,True,True,0.8,2,21.846611976623535,False,"The code contains a vulnerable implementation of the DSA algorithm and uses AES-128 symmetric cipher, which are both quantum-vulnerable.",data/test_files/source_code/seed_stream_cipher.py,0,0,0,1759578488.281708,
serpent_substitution_network,ollama,llama3:8b,source_code,True,True,0.8,2,24.391534090042114,False,The code contains a vulnerable implementation of the AES-128 symmetric cipher and uses RSA key scheduling.,data/test_files/source_code/serpent_substitution_network.c,0,0,0,1759578512.675686,
sha1_rsa_legacy_documents,ollama,llama3:8b,source_code,True,True,0.8,3,21.591898918151855,False,The code contains vulnerable RSA implementation and weak hash function usage.,data/test_files/source_code/sha1_rsa_legacy_documents.py,0,0,0,1759578534.2699678,
skipjack_government_cipher,ollama,llama3:8b,source_code,False,True,0.8,1,25.387924909591675,False,"The code contains a vulnerable RC4 implementation, but no other cryptographic vulnerabilities were detected.",data/test_files/source_code/skipjack_government_cipher.c,0,0,0,1759578559.6603851,
smart_card_security,ollama,llama3:8b,source_code,True,True,0.8,3,21.42567801475525,False,"The code contains a vulnerable implementation of the TEA-like cipher algorithm, which is susceptible to attacks by quantum computers.",data/test_files/source_code/smart_card_security.c,0,0,0,1759578581.088588,
tiger_hash_function,ollama,llama3:8b,source_code,False,True,0.8,1,26.01788306236267,False,"The code appears to use RC4 symmetric cipher, which is vulnerable to Grover's algorithm.",data/test_files/source_code/tiger_hash_function.c,0,0,0,1759578607.108924,
twofish_advanced_encryption,ollama,llama3:8b,source_code,True,True,0.8,2,24.817450046539307,False,"The code contains a vulnerable implementation of the ElGamal algorithm and a symmetric cipher, Twofish.",data/test_files/source_code/twofish_advanced_encryption.c,0,0,0,1759578631.928809,
whirlpool_hash_digest,ollama,llama3:8b,source_code,False,True,0.8,1,25.79059410095215,False,"The code contains a vulnerable implementation of the AES symmetric cipher, but no other cryptographic vulnerabilities were detected.",data/test_files/source_code/whirlpool_hash_digest.c,0,0,0,1759578657.721869,
wireless_network_encryption,ollama,llama3:8b,source_code,True,True,0.8,1,21.56592106819153,False,"The code uses a stream cipher similar to RC4, which is vulnerable to Grover's algorithm.",data/test_files/source_code/wireless_network_encryption.c,0,0,0,1759578679.29015,
adaptive_multi_tenant_crypto_orchestrator,ollama,llama3:8b,assembly_binary,True,True,0.8,7,23.026935815811157,False,"The analyzed assembly binary code contains vulnerable cryptographic algorithms, including RSA, DSA, SEED S-boxes, DES, and SHA-1. These algorithms are potentially exploitable by quantum computers.",data/test_files/assembly_binary/adaptive_multi_tenant_crypto_orchestrator.s,0,0,0,1759578702.31977,
advanced_block_standard_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,23.400153160095215,False,"This binary contains vulnerable RSA and DES implementations, as well as MD5 hash function usage.",data/test_files/assembly_binary/advanced_block_standard_operations.s,0,0,0,1759578725.721875,
aes_key_expansion_module,ollama,llama3:8b,assembly_binary,True,True,0.8,4,21.73684787750244,False,"The code contains vulnerable RSA and AES-128 implementations, as well as big integer library usage.",data/test_files/assembly_binary/aes_key_expansion_module.s,0,0,0,1759578747.461113,
aria_encryption_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,2,20.800270080566406,False,"The code contains a vulnerable AES-128 implementation and a cryptographic library call, but no other detected vulnerabilities.",data/test_files/assembly_binary/aria_encryption_engine.s,0,0,0,1759578768.2638578,
automotive_ecu_cryptographic_unit,ollama,llama3:8b,assembly_binary,True,True,0.9,7,28.270745038986206,False,"The analyzed assembly code contains vulnerable cryptographic algorithms, including RSA and DSA, as well as Korean algorithm signatures like SEED. Additionally, DES is detected as a symmetric cipher pattern vulnerable to quantum attacks.",data/test_files/assembly_binary/automotive_ecu_cryptographic_unit.s,0,0,0,1759578796.5367098,
banking_transaction_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,5,26.56474208831787,False,"The analysis detected vulnerable cryptographic algorithms, including RSA and DSA, as well as potential use of DES and big integer libraries.",data/test_files/assembly_binary/banking_transaction_processor.s,0,0,0,1759578823.103613,
biometric_authentication_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,6,26.64020299911499,False,"Detected vulnerable cryptographic algorithms: RSA, DSA, DES, and big integer library usage.",data/test_files/assembly_binary/biometric_authentication_engine.s,0,0,0,1759578849.7462652,
blake2b_hash_engine,ollama,llama3:8b,assembly_binary,False,True,0.8,2,23.148632049560547,False,"This code snippet contains vulnerable cryptographic implementations, specifically AES-128 and SHA-1. No other vulnerable algorithms were detected.",data/test_files/assembly_binary/blake2b_hash_engine.s,0,0,0,1759578872.897014,
block_cipher_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,6,26.202759981155396,False,"This code contains vulnerable cryptographic algorithms, including RSA and SEED. The DES cipher is also used, which is vulnerable to quantum attacks.",data/test_files/assembly_binary/block_cipher_operations.s,0,0,0,1759578899.101929,
blockchain_consensus_validator,ollama,llama3:8b,assembly_binary,False,True,0.8,4,26.1423659324646,False,"Vulnerable crypto algorithms detected: RSA, AES-128, SHA-1. Recommendation: Upgrade to quantum-resistant alternatives.",data/test_files/assembly_binary/blockchain_consensus_validator.s,0,0,0,1759578925.245812,
chacha20_stream_processor,ollama,llama3:8b,assembly_binary,False,True,0.8,1,21.11610698699951,False,The code contains a vulnerable implementation of the DES symmetric cipher algorithm.,data/test_files/assembly_binary/chacha20_stream_processor.s,0,0,0,1759578946.3639948,
cloud_storage_encryption_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,4,25.476726055145264,False,"Vulnerable crypto algorithms detected: RSA, AES-128. No evidence of other vulnerable algorithms.",data/test_files/assembly_binary/cloud_storage_encryption_processor.s,0,0,0,1759578971.842795,
crypto_trading_platform_engine,ollama,llama3:8b,assembly_binary,False,True,0.8,5,25.897439002990723,False,"The analysis detected RSA, DSA, and DES cryptographic algorithms, as well as big integer library usage.",data/test_files/assembly_binary/crypto_trading_platform_engine.s,0,0,0,1759578997.742368,
cryptographic_wallet_manager,ollama,llama3:8b,assembly_binary,False,False,0.0,0,28.241780996322632,False,Failed to parse JSON response,data/test_files/assembly_binary/cryptographic_wallet_manager.s,0,0,0,1759579025.984936,
diffie_hellman_key_exchange,ollama,llama3:8b,assembly_binary,True,True,0.8,5,22.373075008392334,False,"This code contains vulnerable cryptographic implementations, including RSA and DSA algorithms, as well as symmetric cipher patterns vulnerable to quantum attacks.",data/test_files/assembly_binary/diffie_hellman_key_exchange.s,0,0,0,1759579048.359904,
digital_signature_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,4,25.866291284561157,False,"Vulnerable crypto algorithms detected: RSA, AES-128. Potential side-channel vulnerabilities and optimization patterns not detected.",data/test_files/assembly_binary/digital_signature_processor.s,0,0,0,1759579074.228214,
distributed_blockchain_consensus_engine,ollama,llama3:8b,assembly_binary,False,True,0.8,5,21.656293869018555,False,"The code contains vulnerable cryptographic algorithms, including RSA and DSA. The use of DES and big integer libraries also raises concerns.",data/test_files/assembly_binary/distributed_blockchain_consensus_engine.s,0,0,0,1759579095.887119,
dsa_signature_verification,ollama,llama3:8b,assembly_binary,True,True,0.8,5,23.054953813552856,False,"The code contains vulnerable RSA and DSA implementations, as well as a DES symmetric cipher pattern. Additionally, it uses big integer library operations.",data/test_files/assembly_binary/dsa_signature_verification.s,0,0,0,1759579118.944243,
elliptic_curve_point_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,3,18.534913063049316,False,"Vulnerable crypto algorithms detected: RSA, DES. No other vulnerable crypto algorithms found.",data/test_files/assembly_binary/elliptic_curve_point_operations.s,0,0,0,1759579137.4815512,
elliptic_curve_scalar_multiplication,ollama,llama3:8b,assembly_binary,False,True,0.8,5,23.40195083618164,False,"The code contains vulnerable cryptographic implementations, including RSA and AES-128, as well as big integer library and modular arithmetic operations.",data/test_files/assembly_binary/elliptic_curve_scalar_multiplication.s,0,0,0,1759579160.885817,
elliptic_mathematical_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,6,23.22092294692993,False,"Detected vulnerable cryptographic algorithms: RSA, SEED, DES. Confident in detection due to explicit evidence.",data/test_files/assembly_binary/elliptic_mathematical_operations.s,0,0,0,1759579184.108746,
ellipticsignature_securehashalgo1_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,3,19.012452840805054,False,"Vulnerable crypto algorithms detected: RSA, DES; potential hash function implementation: MD5.",data/test_files/assembly_binary/ellipticsignature_securehashalgo1_operations.s,0,0,0,1759579203.1234748,
embedded_authentication_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,4,25.738471031188965,False,"Vulnerable crypto algorithms detected: RSA, AES-128. No evidence of other vulnerable algorithms.",data/test_files/assembly_binary/embedded_authentication_processor.s,0,0,0,1759579228.8641732,
embedded_iot_security_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,5,21.66158390045166,False,"The analysis detected RSA, AES-128, and big integer library usage in the provided assembly code.",data/test_files/assembly_binary/embedded_iot_security_processor.s,0,0,0,1759579250.5278661,
enterprise_data_protection_engine,ollama,llama3:8b,assembly_binary,False,False,0.0,0,27.619765043258667,False,Failed to parse JSON response,data/test_files/assembly_binary/enterprise_data_protection_engine.s,0,0,0,1759579278.148351,
feistel_network_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,4,24.407466173171997,False,"Vulnerable crypto algorithms detected: RSA, DES; potential hash function implementation: MD5.",data/test_files/assembly_binary/feistel_network_operations.s,0,0,0,1759579302.558294,
financial_cryptographic_accelerator,ollama,llama3:8b,assembly_binary,True,True,0.8,6,25.812608003616333,False,"This binary contains vulnerable cryptographic implementations, including RSA and SEED algorithms, as well as DES and AES-128 symmetric ciphers.",data/test_files/assembly_binary/financial_cryptographic_accelerator.s,0,0,0,1759579328.372624,
government_classified_system_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,3,24.757308959960938,False,"The analysis detected RSA and DES cryptographic algorithms, but did not detect any other vulnerable crypto algorithms.",data/test_files/assembly_binary/government_classified_system_processor.s,0,0,0,1759579353.13218,
hash_digest_operations,ollama,llama3:8b,assembly_binary,False,True,1.0,0,36.31020998954773,False,No vulnerable cryptography algorithms detected.,data/test_files/assembly_binary/hash_digest_operations.s,0,0,0,1759579389.444864,
hight_lightweight_cipher,ollama,llama3:8b,assembly_binary,True,True,0.8,5,23.183441877365112,False,"The analysis detected vulnerable cryptographic algorithms, including SEED and DES, as well as the use of big integer libraries and the LIGHTWEIGHT_BLOCK crypto library.",data/test_files/assembly_binary/hight_lightweight_cipher.s,0,0,0,1759579412.6308532,
hybrid_banking_security_system,ollama,llama3:8b,assembly_binary,True,True,0.8,4,21.655220985412598,False,"Vulnerable crypto algorithms detected: RSA, AES-128. Potential side-channel vulnerabilities and optimization patterns not detected.",data/test_files/assembly_binary/hybrid_banking_security_system.s,0,0,0,1759579434.288495,
industrial_control_security,ollama,llama3:8b,assembly_binary,True,True,0.8,6,26.060155868530273,False,"Vulnerable crypto algorithms detected: RSA, DSA, DES. Potential side-channel vulnerabilities identified.",data/test_files/assembly_binary/industrial_control_security.s,0,0,0,1759579460.351093,
industrial_security_coprocessor,ollama,llama3:8b,assembly_binary,True,True,0.8,7,29.669174194335938,False,"The code contains vulnerable cryptographic algorithms, including RSA and DSA, as well as Korean algorithm implementations like SEED S-boxes. DES is also detected, but no MD5 or SHA-1 hash functions are found.",data/test_files/assembly_binary/industrial_security_coprocessor.s,0,0,0,1759579490.022583,
kcdsa_signature_generator,ollama,llama3:8b,assembly_binary,True,True,0.8,5,22.928598165512085,False,"The analysis detected RSA, DSA, and AES-128 cryptographic algorithms in the provided assembly code.",data/test_files/assembly_binary/kcdsa_signature_generator.s,0,0,0,1759579512.953182,
keyexchange_protocol_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,18.34474205970764,False,"Vulnerable crypto algorithms detected: RSA, AES-128; potential side-channel vulnerabilities present.",data/test_files/assembly_binary/keyexchange_protocol_operations.s,0,0,0,1759579531.300388,
korean_blockcipher_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,20.04464888572693,False,"Vulnerable crypto algorithms detected: RSA, DES.",data/test_files/assembly_binary/korean_blockcipher_operations.s,0,0,0,1759579551.34737,
lea_block_cipher_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,6,23.947503328323364,False,"This code contains vulnerable cryptographic algorithms, including RSA and SEED. The DES cipher is also detected as being vulnerable to quantum attacks.",data/test_files/assembly_binary/lea_block_cipher_engine.s,0,0,0,1759579575.2972622,
legacy_hash_computation,ollama,llama3:8b,assembly_binary,True,True,0.8,5,26.69954824447632,False,"Detected vulnerable cryptographic algorithms: RSA, DSA, DES, MD5.",data/test_files/assembly_binary/legacy_hash_computation.s,0,0,0,1759579601.9993012,
legacy_pki_certificate_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,5,23.37397599220276,False,"This analysis detected vulnerable cryptographic algorithms, including RSA and DSA, as well as the use of DES and MD5. The confidence score is 0.8 due to the presence of explicit evidence for these vulnerabilities.",data/test_files/assembly_binary/legacy_pki_certificate_processor.s,0,0,0,1759579625.37461,
md5_sha1_hash_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,5,23.06206178665161,False,"The analysis detected vulnerable cryptographic algorithms, including RSA and DES, as well as hash functions MD5. The confidence score is 0.8 due to the explicit evidence found in the code.",data/test_files/assembly_binary/md5_sha1_hash_processor.s,0,0,0,1759579648.438456,
medical_device_security_controller,ollama,llama3:8b,assembly_binary,True,True,0.8,5,26.323430061340332,False,"Vulnerable crypto algorithms detected: RSA, DSA, DES. Recommendation: Upgrade to quantum-resistant alternatives.",data/test_files/assembly_binary/medical_device_security_controller.s,0,0,0,1759579674.763534,
message_digest_128bit_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,17.497963905334473,False,"Detected vulnerable RSA and AES-128 algorithms, as well as SHA-1 hash function implementation.",data/test_files/assembly_binary/message_digest_128bit_operations.s,0,0,0,1759579692.2638872,
mobile_cipher_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,6,26.85017204284668,False,"Vulnerable crypto algorithms detected: RSA, DSA, DES; potential side-channel vulnerabilities identified.",data/test_files/assembly_binary/mobile_cipher_engine.s,0,0,0,1759579719.1162,
mobile_payment_security_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,3,25.405400037765503,False,"Vulnerable crypto algorithms detected: RSA, AES-128; potential side-channel vulnerabilities in domesticn_mobile_cipher implementation.",data/test_files/assembly_binary/mobile_payment_security_engine.s,0,0,0,1759579744.524056,
network_security_gateway,ollama,llama3:8b,assembly_binary,True,True,0.8,5,26.63749408721924,False,"The analysis detected RSA, DSA, and DES cryptographic algorithms in the provided assembly code.",data/test_files/assembly_binary/network_security_gateway.s,0,0,0,1759579771.163958,
neural_network_inference_accelerator,ollama,llama3:8b,assembly_binary,True,True,0.8,5,26.388885974884033,False,"Vulnerable crypto algorithms detected: RSA, DSA, DES. Evidence found in code for these algorithms.",data/test_files/assembly_binary/neural_network_inference_accelerator.s,0,0,0,1759579797.555112,
ntru_polynomial_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,3,22.67029094696045,False,"The code contains vulnerable cryptographic algorithms, including AES-128 and polynomial ring operations for lattice-based security. The NTRU library is used, but no other vulnerable crypto algorithms are detected.",data/test_files/assembly_binary/ntru_polynomial_processor.s,0,0,0,1759579820.226665,
obfuscated_crypto_library_dispatcher,ollama,llama3:8b,assembly_binary,True,True,0.8,5,22.500277996063232,False,"The analysis detected vulnerable RSA and AES-128 cryptographic implementations, as well as obfuscated cryptographic operations. The confidence score is 0.8 due to the presence of explicit evidence for these detections.",data/test_files/assembly_binary/obfuscated_crypto_library_dispatcher.s,0,0,0,1759579842.7292879,
openssl_des_enc,ollama,llama3:8b,assembly_binary,True,True,0.8,3,24.26858901977539,False,The code contains vulnerable DES encryption and uses OpenSSL library.,data/test_files/assembly_binary/openssl_des_enc.asm,0,0,0,1759579866.999578,
openssl_des_enc,ollama,llama3:8b,assembly_binary,True,True,0.8,6,31.176774978637695,False,"This code contains vulnerable cryptographic implementations, including RSA, DES, AES-128, MD5, and SHA-1. Additionally, it uses the SEED and ARIA algorithms, which are also vulnerable to quantum attacks.",data/test_files/assembly_binary/openssl_des_enc.bin,0,0,0,1759579898.179696,
poly1305_authenticator,ollama,llama3:8b,assembly_binary,True,True,0.8,4,23.218052864074707,False,"This code contains vulnerable cryptographic implementations, including RSA and AES-128. Additionally, it uses the Poly1305 algorithm for message authentication.",data/test_files/assembly_binary/poly1305_authenticator.s,0,0,0,1759579921.400015,
polymorphic_malware_crypto_engine,ollama,llama3:8b,assembly_binary,True,True,0.85,7,24.668222188949585,False,"This code contains vulnerable cryptographic algorithms and implementations, including RSA, DES, and SEED. It also uses modular arithmetic and has self-modifying code patterns.",data/test_files/assembly_binary/polymorphic_malware_crypto_engine.s,0,0,0,1759579946.070412,
polynomial_field_arithmetic_engine,ollama,llama3:8b,assembly_binary,False,False,0.0,0,32.32906794548035,False,Failed to parse JSON response,data/test_files/assembly_binary/polynomial_field_arithmetic_engine.s,0,0,0,1759579978.4000762,
postquantum_multimodal_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,4,24.29527974128723,False,"Vulnerable crypto algorithms detected: RSA, DES; potential issues with big integer library and cryptographic library calls.",data/test_files/assembly_binary/postquantum_multimodal_operations.s,0,0,0,1759580002.697999,
publickey_encryption_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,17.9396390914917,False,"Vulnerable algorithms detected: RSA, DES. No other vulnerable crypto algorithms found.",data/test_files/assembly_binary/publickey_encryption_operations.s,0,0,0,1759580020.639806,
publickey_modular_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,17.79093909263611,False,"Detected RSA and AES-128 cryptographic algorithms, as well as big integer library usage.",data/test_files/assembly_binary/publickey_modular_operations.s,0,0,0,1759580038.4328032,
publickeyalgo_messagedigest5_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,18.779338121414185,False,"Vulnerable crypto algorithms detected: RSA, AES-128, SHA-1.",data/test_files/assembly_binary/publickeyalgo_messagedigest5_operations.s,0,0,0,1759580057.213609,
quantum_communication_relay,ollama,llama3:8b,assembly_binary,True,True,0.8,5,27.41643214225769,False,"The analysis detected vulnerable cryptographic algorithms, including RSA and DSA, as well as potential use of DES and big integer libraries.",data/test_files/assembly_binary/quantum_communication_relay.s,0,0,0,1759580084.6325371,
quantum_cryptanalysis_simulation,ollama,llama3:8b,assembly_binary,True,True,0.8,5,24.40062403678894,False,"The analysis detected several vulnerable cryptographic algorithms, including RSA, elliptic curve point operations, and symmetric ciphers (DES, 3DES, RC4). Additionally, MD5 and SHA-1 hash functions were identified.",data/test_files/assembly_binary/quantum_cryptanalysis_simulation.s,0,0,0,1759580109.034946,
quantum_migration_bridge_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,5,26.417842864990234,False,"Vulnerable crypto algorithms detected: RSA, DSA, DES. Recommendation: upgrade to post-quantum cryptography standards.",data/test_files/assembly_binary/quantum_migration_bridge_processor.s,0,0,0,1759580135.454865,
quantum_resistant_lattice_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,1,21.539280891418457,False,"The code contains a vulnerable implementation of AES-128, but no other cryptographic vulnerabilities were detected.",data/test_files/assembly_binary/quantum_resistant_lattice_operations.s,0,0,0,1759580156.996511,
quantum_resistant_migration_bridge,ollama,llama3:8b,assembly_binary,True,True,0.8,8,25.48231863975525,False,"This code contains legacy cryptographic algorithms, including RSA and DSA, which are vulnerable to quantum attacks. Additionally, it uses DES and 3DES symmetric ciphers, as well as MD5 hash function implementations.",data/test_files/assembly_binary/quantum_resistant_migration_bridge.s,0,0,0,1759580182.481591,
quantum_safe_communicator,ollama,llama3:8b,assembly_binary,False,True,0.8,4,25.091794729232788,False,"Vulnerable crypto algorithms detected: RSA, AES-128; potential side-channel vulnerabilities identified.",data/test_files/assembly_binary/quantum_safe_communicator.s,0,0,0,1759580207.575655,
rsa_key_generation_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,4,21.328296422958374,False,"The code contains vulnerable RSA and AES-128 cryptographic implementations, as well as big integer library usage.",data/test_files/assembly_binary/rsa_key_generation_engine.s,0,0,0,1759580228.906377,
salsa20_stream_cipher,ollama,llama3:8b,assembly_binary,False,True,0.8,1,22.37505006790161,False,"The code contains a vulnerable DES implementation, but no other cryptographic vulnerabilities were detected.",data/test_files/assembly_binary/salsa20_stream_cipher.s,0,0,0,1759580251.28387,
satellite_communication_security,ollama,llama3:8b,assembly_binary,False,False,0.0,0,29.106995344161987,False,Failed to parse JSON response,data/test_files/assembly_binary/satellite_communication_security.s,0,0,0,1759580280.3913841,
secure_boot_verification_processor,ollama,llama3:8b,assembly_binary,False,True,0.8,6,27.293518781661987,False,"Detected vulnerable cryptographic algorithms: RSA, DSA, DES. Confident in detection.",data/test_files/assembly_binary/secure_boot_verification_processor.s,0,0,0,1759580307.6870348,
secure_communication_protocol,ollama,llama3:8b,assembly_binary,True,True,0.8,4,25.274010181427002,False,"Vulnerable crypto algorithms detected: RSA, DES; potential side-channel vulnerabilities present.",data/test_files/assembly_binary/secure_communication_protocol.s,0,0,0,1759580332.963329,
secure_hash_256bit_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,3,19.16388773918152,False,"Vulnerable crypto algorithms detected: RSA, DES; potential side-channel vulnerabilities found.",data/test_files/assembly_binary/secure_hash_256bit_operations.s,0,0,0,1759580352.128952,
secure_matrix_transformation_unit,ollama,llama3:8b,assembly_binary,True,True,0.8,5,27.18410301208496,False,"Detected vulnerable cryptographic algorithms: RSA, DSA, DES.",data/test_files/assembly_binary/secure_matrix_transformation_unit.s,0,0,0,1759580379.3150988,
siphash_prf_function,ollama,llama3:8b,assembly_binary,True,True,0.8,2,23.477020025253296,False,The analyzed assembly code contains a vulnerable implementation of the AES-128 symmetric cipher and uses the SipHash cryptographic hash function.,data/test_files/assembly_binary/siphash_prf_function.s,0,0,0,1759580402.793737,
smart_card_authenticator,ollama,llama3:8b,assembly_binary,True,True,0.8,5,26.45662498474121,False,"The analysis detected RSA, DSA, and DES cryptographic algorithms in the provided assembly code.",data/test_files/assembly_binary/smart_card_authenticator.s,0,0,0,1759580429.251817,
smart_card_security_module,ollama,llama3:8b,assembly_binary,True,True,0.8,7,28.336710214614868,False,"This binary contains vulnerable cryptographic implementations, including RSA and DSA algorithms, as well as SEED S-boxes and DES cipher patterns.",data/test_files/assembly_binary/smart_card_security_module.s,0,0,0,1759580457.589968,
sphincs_signature_scheme,ollama,llama3:8b,assembly_binary,True,True,0.8,4,21.728469133377075,False,"The analyzed assembly code contains vulnerable cryptographic implementations, including RSA and AES-128. The SPHINCS+ API is also detected.",data/test_files/assembly_binary/sphincs_signature_scheme.s,0,0,0,1759580479.320048,
steganographic_crypto_covert_channel,ollama,llama3:8b,assembly_binary,True,True,0.8,6,21.831501245498657,False,"Detected vulnerable cryptographic algorithms: RSA, SEED, AES-128. Detected Korean algorithm implementation.",data/test_files/assembly_binary/steganographic_crypto_covert_channel.s,0,0,0,1759580501.153911,
stream_cipher_generator,ollama,llama3:8b,assembly_binary,True,True,0.8,6,25.191336393356323,False,"Detected vulnerable cryptographic algorithms: RSA, SEED, RC4. Confident in the detection of these algorithms.",data/test_files/assembly_binary/stream_cipher_generator.s,0,0,0,1759580526.3474119,
stream_generator_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,4,23.205772876739502,False,"This code contains vulnerable RSA and DES implementations, as well as MD5 hash function usage.",data/test_files/assembly_binary/stream_generator_operations.s,0,0,0,1759580549.5542028,
stream_keygeneration_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,3,16.541957139968872,False,"RSA and DES cryptographic algorithms detected, with potential vulnerabilities to quantum attacks.",data/test_files/assembly_binary/stream_keygeneration_operations.s,0,0,0,1759580566.0979068,
triple_des_encryption_module,ollama,llama3:8b,assembly_binary,True,True,0.8,2,21.627665042877197,False,"The code contains a vulnerable implementation of the DES symmetric cipher algorithm, which is susceptible to quantum attacks.",data/test_files/assembly_binary/triple_des_encryption_module.s,0,0,0,1759580587.7278411,
vpn_tunnel_encryption_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,4,26.207630157470703,False,"Vulnerable crypto algorithms detected: RSA, AES-128. Potential side-channel vulnerabilities exist.",data/test_files/assembly_binary/vpn_tunnel_encryption_engine.s,0,0,0,1759580613.936887,
x25519_key_agreement,ollama,llama3:8b,assembly_binary,True,True,0.8,4,23.694602966308594,False,"The code contains vulnerable cryptographic implementations, including Curve25519 and AES-128. Additionally, it uses Montgomery ladder for scalar multiplication and Curve25519 API calls.",data/test_files/assembly_binary/x25519_key_agreement.s,0,0,0,1759580637.633997,
apache_legacy_ssl,ollama,llama3:8b,logs_config,False,True,0.8,6,27.69720697402954,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA certificate configurations, DHE-RSA cipher suites, AES symmetric ciphers, TLSv1.0, TLSv1.1, and TLSv1.2 protocols, and SSLv3 protocol.",data/test_files/logs_config/apache_legacy_ssl.conf,0,0,0,1759580665.334125,
automotive_v2x_system,ollama,llama3:8b,logs_config,True,True,0.8,9,27.770828247070312,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA-2048, ECDSA-P256, ARIA-128, AES-256-GCM, TLS-ECDHE-RSA-AES256, and DES-EDE3. Additionally, the analysis found legacy cryptographic protocol configurations and deprecated settings.",data/test_files/logs_config/automotive_v2x_system.yaml,0,0,0,1759580693.1071758,
blockchain_node_security,ollama,llama3:8b,logs_config,True,True,0.8,5,25.575563192367554,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, elliptic curve cipher suites, symmetric ciphers, and legacy protocols. Additionally, the analysis found evidence of planned migration to post-quantum algorithms.",data/test_files/logs_config/blockchain_node_security.conf,0,0,0,1759580718.6862452,
cloud_hsm_operations,ollama,llama3:8b,logs_config,True,True,0.8,5,26.801507234573364,False,"This system uses RSA and ECC cryptographic algorithms, with some potential vulnerabilities in the symmetric cipher configurations.",data/test_files/logs_config/cloud_hsm_operations.log,0,0,0,1759580745.490098,
cloud_storage_encryption,ollama,llama3:8b,logs_config,True,True,0.8,10,33.782171964645386,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, DSA, ARIA, SEED, AES, TLS, and RC4/3DES. It also identified some legacy protocol configurations that need to be updated.",data/test_files/logs_config/cloud_storage_encryption.conf,0,0,0,1759580779.2750201,
cryptocurrency_exchange,ollama,llama3:8b,logs_config,True,True,0.8,7,26.998374938964844,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA certificate configurations, ECDSA-secp256k1 usage, and legacy symmetric cipher configurations.",data/test_files/logs_config/cryptocurrency_exchange.log,0,0,0,1759580806.2761621,
cryptographic_operations_detailed,ollama,llama3:8b,logs_config,True,True,0.8,10,35.166975021362305,False,"This system contains several vulnerable cryptographic algorithms and configurations, including RSA, Elliptic Curve, DSA, SEED, and Symmetric Cipher. Additionally, it uses legacy digest algorithms and has not implemented quantum-resistant alternatives.",data/test_files/logs_config/cryptographic_operations_detailed.log,0,0,0,1759580841.4460669,
database_encryption_setup,ollama,llama3:8b,logs_config,True,True,0.8,5,29.658647060394287,False,"This system uses SEED and ARIA algorithms for encryption, which are vulnerable to quantum attacks.",data/test_files/logs_config/database_encryption_setup.log,0,0,0,1759580871.1065722,
email_server_crypto,ollama,llama3:8b,logs_config,False,True,0.8,5,25.082376956939697,False,"The analysis detected vulnerable RSA, DSA, and AES algorithms in the configuration files. Additionally, legacy SSLv2 protocol is still enabled.",data/test_files/logs_config/email_server_crypto.conf,0,0,0,1759580896.192269,
enterprise_banking_pki_configuration,ollama,llama3:8b,logs_config,True,True,0.9,11,32.76187705993652,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA 1024, MD5, and legacy protocols. It also identified the use of quantum-vulnerable cipher suites and protocols in SSL/TLS configuration.",data/test_files/logs_config/enterprise_banking_pki_configuration.conf,0,0,0,1759580928.9570198,
financial_payment_gateway,ollama,llama3:8b,logs_config,True,True,0.8,6,20.881877899169922,False,"This system uses RSA certificates, DSA signature algorithm, and 3DES encryption, which are vulnerable to quantum attacks. Additionally, it uses TLSv1.0 protocol, which is also vulnerable.",data/test_files/logs_config/financial_payment_gateway.conf,0,0,0,1759580949.8414888,
government_document_system,ollama,llama3:8b,logs_config,True,True,0.8,10,28.862450122833252,False,"The system uses a combination of vulnerable and non-vulnerable cryptographic algorithms. RSA certificates are used for legacy compatibility, while EC-KCDSA is used for digital signatures. SEED is used for symmetric encryption. The system also uses ARIA for database encryption and TLS with Korean cipher suite for secure communication.",data/test_files/logs_config/government_document_system.log,0,0,0,1759580978.706212,
healthcare_ehr_system,ollama,llama3:8b,logs_config,True,True,0.8,6,23.67449402809143,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, ECDSA, AES, and legacy cipher suites.",data/test_files/logs_config/healthcare_ehr_system.yaml,0,0,0,1759581002.382517,
industrial_control_system,ollama,llama3:8b,logs_config,True,True,0.8,6,26.35414409637451,False,"The system uses RSA and DSA algorithms, which are vulnerable to quantum attacks. Additionally, SHA-1 is used for certificate validation, which is also vulnerable.",data/test_files/logs_config/industrial_control_system.log,0,0,0,1759581028.738855,
iot_device_firmware_config,ollama,llama3:8b,logs_config,True,True,0.8,5,22.484358310699463,False,"This device uses elliptic curve cryptography for public key operations and AES-GCM for symmetric encryption. It also uses mbedTLS cryptographic library. Some quantum-vulnerable algorithms are detected, but no legacy or weak cryptographic algorithms are enabled.",data/test_files/logs_config/iot_device_firmware_config.yaml,0,0,0,1759581051.2275672,
korean_crypto_library_config,ollama,llama3:8b,logs_config,True,True,0.8,8,28.332995176315308,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including SEED, ARIA, HIGHT, LEA, KCDSA, HAS-160, LSH, MD5, SHA1, and RSA. The KISA Crypto API v2.5 was also identified as a cryptographic library configuration.",data/test_files/logs_config/korean_crypto_library_config.ini,0,0,0,1759581079.5637062,
military_secure_comms,ollama,llama3:8b,logs_config,True,True,0.8,8,27.428493976593018,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, DSA, SEED, AES, and DES. Additionally, some legacy protocols and deprecated settings were identified.",data/test_files/logs_config/military_secure_comms.conf,0,0,0,1759581106.9942641,
mobile_app_security_audit,ollama,llama3:8b,logs_config,True,True,0.8,6,28.355581045150757,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, ECDHE-RSA-AES128-GCM-SHA256, TLS_RSA_WITH_AES_128_CBC_SHA, RC4-SHA, and PBKDF2-HMAC-SHA512.",data/test_files/logs_config/mobile_app_security_audit.log,0,0,0,1759581135.3522189,
nginx_mixed_security_gateway,ollama,llama3:8b,logs_config,True,True,0.8,5,25.964672088623047,False,"Vulnerable crypto algorithms detected: RSA, ARIA, TLSv1.1. Legacy protocol configurations and deprecated settings also identified.",data/test_files/logs_config/nginx_mixed_security_gateway.conf,0,0,0,1759581161.320022,
openssh,ollama,llama3:8b,logs_config,True,True,0.8,7,31.766040802001953,False,"This system uses RSA and AES encryption algorithms, which are vulnerable to quantum attacks. Additionally, deprecated SSH-1 protocol is used, and legacy cryptographic protocols are configured. It is recommended to migrate to quantum-resistant alternatives and update the configuration files.",data/test_files/logs_config/openssh.log,0,0,0,1759581193.088607,
quantum_safe_migration_plan,ollama,llama3:8b,logs_config,True,True,0.8,7,26.753334045410156,False,"The analysis detected several vulnerable cryptographic algorithms, including RSA and DSA, which are used in various configurations throughout the system. Additionally, some symmetric cipher configurations were identified as potentially vulnerable to quantum attacks.",data/test_files/logs_config/quantum_safe_migration_plan.yaml,0,0,0,1759581219.8450549,
satellite_ground_station,ollama,llama3:8b,logs_config,True,True,0.8,9,28.185221910476685,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, SEED, ARIA, KCDSA, and ECDHE-ECDSA-AES256-GCM-SHA384.",data/test_files/logs_config/satellite_ground_station.log,0,0,0,1759581248.034558,
security_scanner_findings,ollama,llama3:8b,logs_config,True,True,0.8,6,26.36109709739685,False,"Detected vulnerable cryptographic algorithms: RSA, Elliptic Curve P-192, RC4-SHA, MD5 Hash Function, SHA-1 Digital Signatures.",data/test_files/logs_config/security_scanner_findings.log,0,0,0,1759581274.398029,
smart_city_infrastructure,ollama,llama3:8b,logs_config,True,True,0.8,9,33.644498348236084,False,"The system uses several quantum-vulnerable algorithms, including RSA, ECDSA-P256, DSA-1024, and MD5. Additionally, legacy protocols like 3DES and Blowfish are still in use.",data/test_files/logs_config/smart_city_infrastructure.log,0,0,0,1759581308.044259,
ssh_server_hardened,ollama,llama3:8b,logs_config,True,True,0.8,7,31.78196406364441,False,"This OpenSSH server configuration uses RSA and elliptic curve cryptography, but also has some legacy protocols disabled. Some symmetric ciphers are used, but they seem to be quantum-resistant.",data/test_files/logs_config/ssh_server_hardened.conf,0,0,0,1759581339.828953,
ssl_legacy_banking_configuration,ollama,llama3:8b,logs_config,False,True,0.8,5,19.738833904266357,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, DHE-RSA-AES256-SHA, AES256, SSLv3, and SSLv2.",data/test_files/logs_config/ssl_legacy_banking_configuration.conf,0,0,0,1759581359.571012,
telecom_5g_network,ollama,llama3:8b,logs_config,True,True,0.8,9,25.51237988471985,False,"The analysis detected several vulnerable cryptographic algorithms, including RSA, EC-KCDSA, DHE-2048, SEED, and ARIA-GCM-128. It also identified legacy protocols and deprecated settings that require migration to quantum-resistant alternatives.",data/test_files/logs_config/telecom_5g_network.conf,0,0,0,1759581385.08605,
tls_cipher_negotiation_warnings,ollama,llama3:8b,logs_config,True,True,0.8,8,26.37228536605835,False,"This system has several vulnerable cryptographic implementations, including RSA-1024, 3DES-EDE-CBC-SHA, RC4-SHA, MD5, and SHA-1. Additionally, it uses Korean domestic ciphers ARIA-128 and SEED-CBC-SHA.",data/test_files/logs_config/tls_cipher_negotiation_warnings.log,0,0,0,1759581411.46067,
vpn_server_runtime,ollama,llama3:8b,logs_config,True,True,0.8,4,23.02506113052368,False,"Detected RSA and DH algorithms, as well as AES symmetric cipher configuration vulnerable to quantum attacks.",data/test_files/logs_config/vpn_server_runtime.log,0,0,0,1759581434.487807,
AdvancedComputationalFramework,ollama,qwen3:8b,source_code,True,True,0.1,0,52.71200180053711,True,NO CLEAR EVIDENCE OF CRYPTOGRAPHIC IMPLEMENTATIONS FOUND,data/test_files/source_code/AdvancedComputationalFramework.rb,0,0,0,1759581487.200853,
AdvancedCryptographicOrchestrator,ollama,qwen3:8b,source_code,True,True,0.1,0,62.9637188911438,True,"NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS FOUND IN THE PROVIDED CODE SNIPPET. ALL DETECTIONS REQUIRE EXPLICIT ALGORITHM NAMES, LIBRARY IMPORTS, OR FUNCTION CALLS THAT MATCH KNOWN VULNERABLE ALGORITHMS.",data/test_files/source_code/AdvancedCryptographicOrchestrator.java,0,0,0,1759581550.166476,
AdvancedMathematicalFramework,ollama,qwen3:8b,source_code,True,True,0.0,0,58.684966802597046,True,"NO cryptographic algorithms or vulnerable patterns detected in the provided code. The implementation contains mathematical operations and hash functions (SHA-256) but lacks explicit references to quantum-vulnerable algorithms, weak hashes, padding schemes, or insecure RNGs.",data/test_files/source_code/AdvancedMathematicalFramework.rs,0,0,0,1759581608.8541079,
AutomotiveSecurityUnit,ollama,qwen3:8b,source_code,True,True,0.0,0,48.971781969070435,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - The code contains a custom Feistel cipher implementation but lacks explicit references to any quantum-vulnerable algorithms, weak hash functions, insecure RNGs, or other cryptographic vulnerabilities listed in the analysis criteria.",data/test_files/source_code/AutomotiveSecurityUnit.cpp,0,0,0,1759581657.827137,
BankingSecurityModule,ollama,qwen3:8b,source_code,True,True,1.0,0,39.857922077178955,True,"No explicit cryptographic algorithms or vulnerable patterns detected in the provided code. The implementation contains a custom block cipher with S-boxes and round functions, but no known quantum-vulnerable algorithms (RSA/ECC/DSA/etc.), weak hashes, insecure RNGs, or deprecated protocols are explicitly implemented.",data/test_files/source_code/BankingSecurityModule.java,0,0,0,1759581697.686471,
BlockchainCryptographyEngine,ollama,qwen3:8b,source_code,True,True,0.85,1,61.42881488800049,True,The code implements elliptic curve cryptography (ECC) with secp256k1 parameters but lacks explicit ECDSA/ECDH usage patterns. No other quantum-vulnerable algorithms or vulnerable implementations were detected.,data/test_files/source_code/BlockchainCryptographyEngine.java,0,0,0,1759581759.116533,
CorporateSecurityOrchestrator,ollama,qwen3:8b,source_code,True,True,0.1,0,58.97419714927673,True,NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS FOUND. THE CODE CONTAINS STANDARD CRYPTOGRAPHY LIBRARY IMPORTS (CRYPTOGRAPHY.HAZMAT) BUT LACKS EXPLICIT FUNCTION CALLS OR USAGE PATTERNS FOR ANY SPECIFIC ALGORITHMS. NO DIRECT INDICATION OF QUANTUM-VULNERABLE OR LEGACY IMPLEMENTATIONS WAS IDENTIFIED.,data/test_files/source_code/CorporateSecurityOrchestrator.py,0,0,0,1759581818.0929558,
CorporateVPNManager,ollama,qwen3:8b,source_code,True,True,0.1,0,61.923022747039795,True,"No explicit cryptographic algorithm implementations or vulnerable patterns detected in the provided code. The implementation uses a custom Feistel network with S-boxes but does not reference standard cryptographic algorithms (RSA, ECC, DES, AES, etc.) or known vulnerabilities.",data/test_files/source_code/CorporateVPNManager.java,0,0,0,1759581880.0179179,
DigitalCertificateValidator,ollama,qwen3:8b,source_code,True,True,0.85,5,58.34168195724487,True,Detected vulnerable RSA implementation with weak parameters and potential SHA-1 hash usage. Identified PKCS#1 v1.5 padding vulnerability and legacy 1024-bit RSA key size.,data/test_files/source_code/DigitalCertificateValidator.java,0,0,0,1759581938.361682,
DistributedComputationEngine,ollama,qwen3:8b,source_code,True,True,0.0,0,59.010722160339355,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - The code contains a custom hash implementation (DigestProcessor) without explicit references to any specific cryptographic algorithms, libraries, or vulnerable patterns. No evidence of RSA, ECC, DSA, symmetric ciphers, weak hashes, padding schemes, or insecure RNGs was found.",data/test_files/source_code/DistributedComputationEngine.py,0,0,0,1759581997.374502,
DistributedComputeManager,ollama,qwen3:8b,source_code,True,True,0.1,0,42.102598905563354,True,"NO cryptographic algorithm implementations detected in the provided code snippet. The 'crypto' module is imported but not utilized, and all computational components are abstracted as generic mathematical operations without explicit cryptographic function calls.",data/test_files/source_code/DistributedComputeManager.js,0,0,0,1759582039.479147,
EnterpriseDataSecurityFramework,ollama,qwen3:8b,source_code,True,True,0.1,0,52.726446866989136,True,"NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS FOUND IN THE PROVIDED CODE SNIPPET. THE CODE CONTAINS MATHEMATICAL STRUCTURES AND FUNCTION PROTOTYPES THAT MAY BE USED FOR CRYPTOGRAPHY, BUT THERE ARE NO EXPLICIT REFERENCES TO SPECIFIC ALGORITHMS OR LIBRARY CALLS THAT WOULD INDICATE QUANTUM-VULNERABLE IMPLEMENTATIONS.",data/test_files/source_code/EnterpriseDataSecurityFramework.c,0,0,0,1759582092.2079418,
EnterpriseSecurityGateway,ollama,qwen3:8b,source_code,True,True,0.6,1,63.85860013961792,True,"Detected RSA key generation infrastructure (modulus/publicExponent/privateExponent setup) but no explicit cryptographic operations or algorithm implementations. No evidence of ECC, DSA, DH, Korean algorithms, symmetric ciphers, hash functions, padding schemes, RNGs, obfuscation, hybrid systems, legacy libraries, or implementation-specific vulnerabilities.",data/test_files/source_code/EnterpriseSecurityGateway.java,0,0,0,1759582156.068532,
HardwareSecurity,ollama,qwen3:8b,source_code,True,True,0.85,1,51.27070498466492,True,"The code uses SHA-1 hash function which is considered weak, but no explicit quantum-vulnerable algorithms (RSA, ECC, DSA, etc.) or other cryptographic vulnerabilities were detected.",data/test_files/source_code/HardwareSecurity.java,0,0,0,1759582207.341207,
IoTDeviceSecurityController,ollama,qwen3:8b,source_code,True,True,0.0,0,59.7759690284729,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - The code contains custom cryptographic primitives without explicit references to known vulnerable algorithms, quantum-resistant implementations, or standard crypto libraries (e.g., RSA, ECC, DSA, AES-128, MD5). All cryptographic operations are implemented internally without clear evidence of specific algorithm usage.",data/test_files/source_code/IoTDeviceSecurityController.go,0,0,0,1759582267.119787,
LegacyPKISystem,ollama,qwen3:8b,source_code,True,True,0.95,3,51.810593128204346,True,"Detected vulnerable cryptographic elements include DSA implementation with 1024-bit keys and SHA-1 hashing (discrete logarithm algorithm), which are quantum-vulnerable. Weak hash function SHA-1 is used in the signing process. Implementation-specific vulnerabilities include simplified prime generation and potential weaknesses in random number generation.",data/test_files/source_code/LegacyPKISystem.java,0,0,0,1759582318.9322538,
MathematicalTransformEngine,ollama,qwen3:8b,source_code,True,True,0.1,0,49.89908218383789,True,"NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS FOUND. THE CODE REFERENCES GENERAL CRYPTOGRAPHY CLASSES (javax.crypto, java.security) BUT LACKS SPECIFIC ALGORITHM INSTANCES OR FUNCTION CALLS THAT WOULD INDICATE QUANTUM-VULNERABLE OR WEAK CRYPTOGRAPHIC PRACTICES.",data/test_files/source_code/MathematicalTransformEngine.java,0,0,0,1759582368.833153,
MediaStreamProtection,ollama,qwen3:8b,source_code,True,True,0.9,2,72.57898902893066,True,Detected vulnerable symmetric cipher RC4 (Grover's vulnerability) and implementation-specific vulnerabilities in quantum-vulnerable algorithms.,data/test_files/source_code/MediaStreamProtection.java,0,0,0,1759582441.413887,
QuantumResistantMessaging,ollama,qwen3:8b,source_code,False,True,1.0,0,52.215956926345825,True,"The code implements a lattice-based post-quantum cryptography system with no detectable use of quantum-vulnerable algorithms, weak hash functions, insecure random number generators, or legacy cryptographic libraries. All detected elements are consistent with quantum-resistant cryptographic practices.",data/test_files/source_code/QuantumResistantMessaging.java,0,0,0,1759582493.631527,
QuantumSafeTransitionManager,ollama,qwen3:8b,source_code,True,True,0.6,1,60.544021129608154,True,"The code contains a hybrid cryptographic system combining legacy and quantum-resistant algorithms, but no explicit implementations of specific vulnerable algorithms (RSA/ECC/DSA/etc.) were found in the provided source code.",data/test_files/source_code/QuantumSafeTransitionManager.cpp,0,0,0,1759582554.177372,
SecureChatApplication,ollama,qwen3:8b,source_code,False,True,0.95,0,59.78443694114685,True,"The code implements ChaCha20 stream cipher (quantum-resistant) using SecureRandom for randomness, but no explicit vulnerable algorithms are detected. No RSA/ECC/DSA/DH/Korean domestic algorithms or weak hashes/padding schemes are present in the provided code.",data/test_files/source_code/SecureChatApplication.java,0,0,0,1759582613.9632409,
SecureCloudStorage,ollama,qwen3:8b,source_code,True,True,0.95,0,62.22722887992859,True,"No explicit cryptographic algorithm implementations or vulnerable patterns detected in the provided code. The AES implementation is custom but does not use standard libraries, and no quantum-vulnerable algorithms (RSA, ECC, DSA) are present.",data/test_files/source_code/SecureCloudStorage.java,0,0,0,1759582676.192411,
SecureTransactionProcessor,ollama,qwen3:8b,source_code,True,True,0.9,0,49.157084941864014,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. The code contains standard cryptographic libraries (crypto/rand, crypto/sha256) but lacks explicit implementations of quantum-vulnerable algorithms or vulnerable patterns. No direct cryptographic function calls were found for RSA, ECC, DSA, DH, ElGamal, Korean domestic algorithms, weak hashes, insecure padding schemes, or legacy protocols.",data/test_files/source_code/SecureTransactionProcessor.go,0,0,0,1759582725.352191,
StealthCryptographicLibrary,ollama,qwen3:8b,source_code,True,True,0.6,1,72.53954195976257,True,"The code contains obfuscated cryptographic implementations with non-descriptive names (LIAP, ECT, AKDP, RIA) suggesting indirect or hidden algorithm usage. No explicit evidence of vulnerable algorithms, padding schemes, hash functions, or legacy libraries was found.",data/test_files/source_code/StealthCryptographicLibrary.py,0,0,0,1759582797.8937411,
TelecommunicationsSecurityHub,ollama,qwen3:8b,source_code,True,True,0.0,0,47.13487005233765,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - No explicit cryptographic API calls, library imports, or algorithm implementations were found in the provided code snippet.",data/test_files/source_code/TelecommunicationsSecurityHub.java,0,0,0,1759582845.030612,
a5_trivium_stream_ciphers,ollama,qwen3:8b,source_code,False,True,0.0,0,56.31375002861023,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED: The provided code implements custom stream cipher logic without explicit references to any cryptographic libraries, algorithms, or vulnerable patterns. No evidence of RSA, ECC, DSA, AES, MD5, SHA-1, insecure RNGs, or other vulnerable components was found.",data/test_files/source_code/a5_trivium_stream_ciphers.py,0,0,0,1759582901.3464808,
aes_advanced_encryption,ollama,qwen3:8b,source_code,True,True,0.0,0,56.85930299758911,True,NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARY USAGE DETECTED,data/test_files/source_code/aes_advanced_encryption.java,0,0,0,1759582958.2074938,
aria_korean_block_cipher,ollama,qwen3:8b,source_code,True,True,0.1,0,61.03424096107483,True,No explicit cryptographic algorithm references or vulnerabilities detected in the provided code.,data/test_files/source_code/aria_korean_block_cipher.py,0,0,0,1759583019.243851,
aria_sha256_ecdsa_government,ollama,qwen3:8b,source_code,True,True,0.0,0,55.28761005401611,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - CODE CONTAINS CUSTOM ENCRYPTION/HASHING LOGIC WITHOUT EXPLICIT REFERENCES TO KNOWN VULNERABLE ALGORITHMS OR LIBRARIES,data/test_files/source_code/aria_sha256_ecdsa_government.py,0,0,0,1759583074.533247,
blowfish_symmetric_encryption,ollama,qwen3:8b,source_code,False,True,0.0,0,61.19463896751404,True,NO vulnerable cryptographic algorithms detected in the provided code. The implementation appears to be a custom block cipher (Fish) without explicit references to any of the targeted cryptographic protocols or vulnerabilities.,data/test_files/source_code/blowfish_symmetric_encryption.c,0,0,0,1759583135.729783,
camellia_block_cipher,ollama,qwen3:8b,source_code,False,True,0.1,0,56.69734501838684,True,"No vulnerable cryptographic algorithms detected in the provided code snippet. The implementation appears to be a direct Camellia cipher key schedule without references to RSA, ECC, discrete logarithm algorithms, weak hashes, or insecure RNGs.",data/test_files/source_code/camellia_block_cipher.c,0,0,0,1759583192.428531,
cast_feistel_cipher,ollama,qwen3:8b,source_code,False,True,0.0,0,72.48833703994751,True,NO cryptographic algorithms or vulnerable patterns detected in the provided code snippet.,data/test_files/source_code/cast_feistel_cipher.c,0,0,0,1759583264.918871,
chacha20_poly1305_aead,ollama,qwen3:8b,source_code,True,True,1.0,0,56.53296685218811,True,"The provided code implements ChaCha20-Poly1305 AEAD, which is a quantum-resistant cryptographic construction. No vulnerable algorithms from the specified categories (RSA, ECC/ECDSA/ECDH, DSA/DH/ElGamal, Korean domestic algorithms, Grover-vulnerable ciphers, weak hashes, etc.) are explicitly detected in the code.",data/test_files/source_code/chacha20_poly1305_aead.java,0,0,0,1759583321.4531589,
cloud_security_orchestrator,ollama,qwen3:8b,source_code,True,True,0.0,0,53.4699010848999,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - The code uses secure random number generation (secrets module), modern cryptographic primitives (hashlib, hmac), and abstracted cryptographic operations without explicit implementation of vulnerable algorithms. No evidence of RSA, ECC, DSA, Korean domestic algorithms, or weak hash functions was found in the provided code.",data/test_files/source_code/cloud_security_orchestrator.py,0,0,0,1759583374.924271,
database_encryption_engine,ollama,qwen3:8b,source_code,True,True,0.0,0,58.0652596950531,True,"No explicit cryptographic algorithms or vulnerable patterns detected in the provided code. The implementation appears to be a custom block cipher using Feistel structure and S-boxes, but no specific vulnerabilities matching the criteria were found.",data/test_files/source_code/database_encryption_engine.c,0,0,0,1759583432.991008,
diffie_hellman_key_exchange,ollama,qwen3:8b,source_code,True,True,0.95,1,58.109915018081665,True,The code implements a Diffie-Hellman key exchange protocol using modular exponentiation with fixed prime and generator parameters. No other cryptographic algorithms or vulnerabilities were detected.,data/test_files/source_code/diffie_hellman_key_exchange.java,0,0,0,1759583491.102504,
digital_identity_platform,ollama,qwen3:8b,source_code,True,True,0.1,0,57.39726996421814,True,"NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS FOUND IN THE PROVIDED CODE SAMPLE. ALL DETECTIONS REQUIRE EXPLICIT ALGORITHM NAMES, LIBRARY CALLS, OR DOCUMENTED FUNCTIONALITY WHICH IS NOT PRESENT IN THIS TEST DATA.",data/test_files/source_code/digital_identity_platform.js,0,0,0,1759583548.501816,
elgamal_diffie_hellman_pki,ollama,qwen3:8b,source_code,True,True,0.85,2,67.40680170059204,True,The code implements Diffie-Hellman key exchange and ElGamal encryption (discrete logarithm-based algorithms) with insecure random number generation. No other cryptographic vulnerabilities were detected.,data/test_files/source_code/elgamal_diffie_hellman_pki.py,0,0,0,1759583615.909884,
elliptic_curve_cryptography,ollama,qwen3:8b,source_code,True,True,0.1,0,51.50423765182495,True,"NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS FOUND IN THE PROVIDED CODE SNIPPET. THE CODE SHOWS ECC PARAMETER DEFINITIONS AND BASIC POINT OPERATIONS BUT LACKS SPECIFIC ALGORITHM NAMES, LIBRARY IMPORTS, OR FUNCTION CALLS TO CONFIRM ANY OF THE TARGETED VULNERABLE ALGORITHMS.",data/test_files/source_code/elliptic_curve_cryptography.java,0,0,0,1759583667.415505,
financial_risk_analyzer,ollama,qwen3:8b,source_code,True,True,0.85,2,84.68015718460083,True,"Detected RSA implementation with vulnerable PKCS#1 v1.5 padding, no other quantum-vulnerable algorithms or post-quantum hybrid systems.",data/test_files/source_code/financial_risk_analyzer.py,0,0,0,1759583752.097206,
financial_transaction_processor,ollama,qwen3:8b,source_code,True,True,0.0,0,62.89412498474121,True,"No explicit cryptographic implementations or references were detected in the provided source code. The code contains a custom symmetric encryption algorithm with Korean constants, but no direct matches to any of the specified vulnerable algorithms or patterns.",data/test_files/source_code/financial_transaction_processor.c,0,0,0,1759583814.9923892,
financial_transaction_security,ollama,qwen3:8b,source_code,True,True,0.0,0,51.90655589103699,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - NO EXPLICIT CRYPTOGRAPHIC FUNCTION CALLS OR LIBRARY IMPORTS FOUND IN THE PROVIDED SOURCE CODE,data/test_files/source_code/financial_transaction_security.c,0,0,0,1759583866.900917,
government_document_signer,ollama,qwen3:8b,source_code,True,True,0.75,3,63.17768311500549,True,"Detected elliptic curve cryptography implementation and insecure random number generator. No explicit RSA, discrete logarithm algorithms, or Korean domestic algorithms identified.",data/test_files/source_code/government_document_signer.c,0,0,0,1759583930.080885,
idea_international_encryption,ollama,qwen3:8b,source_code,False,True,0.0,0,64.73130130767822,True,"No explicit cryptographic algorithm references detected in the provided code. The implementation appears to be a custom symmetric encryption scheme (IDEA) without direct usage of RSA, ECC, discrete logarithm algorithms, or other specified vulnerable protocols.",data/test_files/source_code/idea_international_encryption.java,0,0,0,1759583994.8142788,
iot_device_security,ollama,qwen3:8b,source_code,True,True,0.0,0,62.037384033203125,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED: The code implements a custom lightweight cipher with substitution boxes and round constants, but no explicit references to RSA, ECC, DSA, Korean domestic algorithms, Grover-vulnerable ciphers, weak hashes, padding schemes, insecure RNGs, or hybrid systems were found. All cryptographic operations are implemented internally without library calls.",data/test_files/source_code/iot_device_security.c,0,0,0,1759584056.85373,
lattice_isogeny_postquantum,ollama,qwen3:8b,source_code,True,True,1.0,0,57.6298508644104,True,"The provided code implements lattice-based post-quantum cryptography with no evidence of quantum-vulnerable algorithms, weak hash functions, insecure RNGs, or legacy cryptographic primitives. All detected elements are part of a custom quantum-resistant scheme.",data/test_files/source_code/lattice_isogeny_postquantum.py,0,0,0,1759584114.484831,
legacy_authentication_system,ollama,qwen3:8b,source_code,True,True,0.85,4,63.151971101760864,True,"Detected manual RSA implementation with insecure key generation, potential obfuscation, and implementation-specific vulnerabilities. No standard crypto libraries used.",data/test_files/source_code/legacy_authentication_system.c,0,0,0,1759584177.6389172,
md5_sha1_weak_hash,ollama,qwen3:8b,source_code,False,True,0.1,0,66.01955103874207,True,No explicit cryptographic algorithms or vulnerabilities detected in the provided code. The implementation appears to use custom hash functions without direct references to known cryptographic libraries or standards.,data/test_files/source_code/md5_sha1_weak_hash.py,0,0,0,1759584243.65961,
medical_device_encryption,ollama,qwen3:8b,source_code,True,True,0.0,0,59.246357917785645,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - CODE CONTAINS NO EXPLICIT CRYPTOGRAPHIC FUNCTION CALLS, LIBRARY IMPORTS, OR IMPLEMENTATIONS OF ANY SPECIFIC ALGORITHM",data/test_files/source_code/medical_device_encryption.rs,0,0,0,1759584302.907645,
military_communication_system,ollama,qwen3:8b,source_code,False,True,0.0,0,68.46812891960144,True,"NO VULNERABLE ALGORITHMS DETECTED: The code contains custom hash operations resembling SHA-2 but lacks explicit algorithm names, library imports, or cryptographic function calls. No evidence of RSA, ECC, DSA, symmetric ciphers, weak hashes, padding schemes, or other vulnerable algorithms was found.",data/test_files/source_code/military_communication_system.c,0,0,0,1759584371.3778188,
mobile_secure_messenger,ollama,qwen3:8b,source_code,False,True,0.0,0,52.083338022232056,True,"NO CRYPTOGRAPHIC ALGORITHMS DETECTED - The code contains custom stream cipher and elliptic curve operations without explicit references to known cryptographic libraries, algorithms, or standards. No vulnerable implementations were identified in the provided source code.",data/test_files/source_code/mobile_secure_messenger.c,0,0,0,1759584423.4632409,
network_infrastructure_monitor,ollama,qwen3:8b,source_code,True,True,0.95,0,60.130356788635254,True,"NO VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS DETECTED - The code contains simulated cryptographic operations without explicit use of vulnerable algorithms, libraries, or APIs. All detected elements are simulation-based and do not represent actual cryptographic implementations.",data/test_files/source_code/network_infrastructure_monitor.cpp,0,0,0,1759584483.594698,
ntru_lattice_encryption,ollama,qwen3:8b,source_code,True,True,1.0,0,40.38488507270813,True,"The analyzed code implements NTRU lattice-based cryptography, which is a post-quantum secure algorithm. No quantum-vulnerable cryptographic algorithms (RSA, ECC, DSA, etc.), weak hash functions, insecure random number generators, or legacy cryptographic libraries were detected.",data/test_files/source_code/ntru_lattice_encryption.java,0,0,0,1759584523.9814541,
openssl_des_enc,ollama,qwen3:8b,source_code,False,True,0.95,2,49.35193419456482,True,Detected DES symmetric cipher vulnerable to Grover's algorithm and legacy cryptographic library usage.,data/test_files/source_code/openssl_des_enc.c,0,0,0,1759584573.3339598,
quantum_resistant_messenger,ollama,qwen3:8b,source_code,True,True,1.0,0,63.589542865753174,True,"The provided code implements a lattice-based post-quantum cryptographic system with no explicit use of quantum-vulnerable algorithms (RSA, ECC, DSA, etc.), weak hashes (MD5/SHA-1), or insecure RNGs. All cryptographic operations appear to be based on lattice mathematics and modern secure practices.",data/test_files/source_code/quantum_resistant_messenger.py,0,0,0,1759584636.925365,
rc4_stream_generator,ollama,qwen3:8b,source_code,True,True,0.85,1,74.98680114746094,True,Detected RC4 implementation vulnerable to Grover's algorithm. No other cryptographic algorithms or vulnerabilities detected.,data/test_files/source_code/rc4_stream_generator.c,0,0,0,1759584711.914067,
rsa_gen,ollama,qwen3:8b,source_code,True,True,0.65,1,57.96868300437927,True,"Detected RSA key generation implementation using OpenSSL's BN_generate_prime_ex function for prime number generation, which is quantum-vulnerable. No evidence of other cryptographic algorithms or vulnerabilities in the provided code snippet.",data/test_files/source_code/rsa_gen.c,0,0,0,1759584769.8855228,
rsa_modular_exponentiation,ollama,qwen3:8b,source_code,True,True,0.85,2,51.93529772758484,True,Detected quantum-vulnerable RSA implementation with custom padding and weak hash function (similar to SHA-1). No other cryptographic algorithms or vulnerabilities detected.,data/test_files/source_code/rsa_modular_exponentiation.py,0,0,0,1759584821.822155,
rsa_public_key_system,ollama,qwen3:8b,source_code,True,True,0.95,1,58.1628360748291,True,Detected quantum-vulnerable RSA implementation with standard key generation and encryption/decryption operations. No other cryptographic algorithms or vulnerabilities detected in the provided code.,data/test_files/source_code/rsa_public_key_system.java,0,0,0,1759584879.986783,
salsa20_stream_cipher,ollama,qwen3:8b,source_code,True,True,1.0,0,61.39871311187744,True,"The analyzed code implements Salsa20 and ChaCha20 stream ciphers, which are quantum-resistant. No explicit references to vulnerable cryptographic algorithms, libraries, or implementations were found.",data/test_files/source_code/salsa20_stream_cipher.c,0,0,0,1759584941.387307,
secure_messaging_protocol,ollama,qwen3:8b,source_code,True,True,0.95,3,57.75412607192993,True,Detected RSA implementation with quantum-vulnerable PKCS#1 v1.5 padding. No other cryptographic algorithms or vulnerabilities were found in the provided code.,data/test_files/source_code/secure_messaging_protocol.rb,0,0,0,1759584999.1436381,
secure_video_streaming,ollama,qwen3:8b,source_code,False,True,0.95,0,40.20274901390076,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - The code implements a custom symmetric encryption engine resembling Salsa20 but lacks explicit references to any cryptographic libraries, algorithms, or protocols from the specified vulnerable categories.",data/test_files/source_code/secure_video_streaming.c,0,0,0,1759585039.348435,
seed_aes_hybrid_banking,ollama,qwen3:8b,source_code,True,True,0.0,0,52.3149139881134,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - NO EXPLICIT EVIDENCE OF RSA, ECC, DSA, KOREAN DOMESTIC ALGORITHMS, SYMMETRIC CIPHERS, HASH FUNCTIONS, OR PADDING SCHEMES FOUND IN SOURCE CODE",data/test_files/source_code/seed_aes_hybrid_banking.py,0,0,0,1759585091.6652758,
seed_stream_cipher,ollama,qwen3:8b,source_code,True,True,0.0,0,50.08622074127197,True,"NO cryptographic algorithms or libraries detected in the provided code. The implementation contains custom block cipher operations but no explicit references to known cryptographic primitives, standards, or vulnerable algorithms.",data/test_files/source_code/seed_stream_cipher.py,0,0,0,1759585141.7535958,
serpent_substitution_network,ollama,qwen3:8b,source_code,False,True,0.9,0,73.39725470542908,True,NO vulnerable cryptographic algorithms detected in the provided code snippet.,data/test_files/source_code/serpent_substitution_network.c,0,0,0,1759585215.152262,
sha1_rsa_legacy_documents,ollama,qwen3:8b,source_code,True,True,0.95,2,49.12553811073303,True,Detected vulnerable RSA implementation with 1024-bit modulus using weak primes (1009/1013) and naive key generation. No proper padding schemes or secure libraries used.,data/test_files/source_code/sha1_rsa_legacy_documents.py,0,0,0,1759585264.279572,
skipjack_government_cipher,ollama,qwen3:8b,source_code,False,True,1.0,0,56.076404094696045,True,No cryptographic algorithms or vulnerabilities matching the specified criteria were detected in the provided code.,data/test_files/source_code/skipjack_government_cipher.c,0,0,0,1759585320.357836,
smart_card_security,ollama,qwen3:8b,source_code,False,True,1.0,0,53.10961627960205,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. The code implements a custom TEA-like block cipher but does not use any of the explicitly targeted quantum-vulnerable algorithms (RSA, ECC/ECDSA/ECDH, DSA/DH/ElGamal, AES-128/3DES/DES/RC4, Korean domestic algorithms, weak hashes, or vulnerable padding schemes). No cryptographic libraries or APIs are referenced.",data/test_files/source_code/smart_card_security.c,0,0,0,1759585373.469687,
tiger_hash_function,ollama,qwen3:8b,source_code,False,True,1.0,0,56.38349390029907,True,"The code implements the Tiger cryptographic hash function, which is not classified as a quantum-vulnerable algorithm in this context. No evidence of RSA, ECC/ECDSA/ECDH, discrete logarithm algorithms, Korean domestic algorithms, symmetric ciphers vulnerable to Grover's algorithm, weak hash functions, padding schemes, insecure RNGs/KDFs, obfuscated implementations, hybrid systems, legacy libraries, or implementation-specific vulnerabilities was found.",data/test_files/source_code/tiger_hash_function.c,0,0,0,1759585429.855524,
twofish_advanced_encryption,ollama,qwen3:8b,source_code,False,True,0.0,0,50.48952293395996,True,NO cryptographic algorithms or vulnerable patterns detected in the provided code snippet.,data/test_files/source_code/twofish_advanced_encryption.c,0,0,0,1759585480.347042,
whirlpool_hash_digest,ollama,qwen3:8b,source_code,False,True,0.9,0,60.92676305770874,True,No explicit cryptographic algorithm implementations or references were detected in the provided code. The code appears to implement a custom cryptographic routine (possibly Whirlpool) but lacks direct evidence of vulnerable algorithms as specified.,data/test_files/source_code/whirlpool_hash_digest.c,0,0,0,1759585541.275002,
wireless_network_encryption,ollama,qwen3:8b,source_code,False,True,0.0,0,72.27697420120239,True,No explicit cryptographic algorithms or libraries were detected in the provided source code.,data/test_files/source_code/wireless_network_encryption.c,0,0,0,1759585613.5541482,
adaptive_multi_tenant_crypto_orchestrator,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,74.06323003768921,True,"No explicit cryptographic algorithm implementations or library references were found in the provided binary code. The detected handlers (e.g., modular_4096_handler, curve_p256_handler) suggest potential cryptographic operations but lack direct evidence of vulnerable algorithms or side-channel vulnerabilities.",data/test_files/assembly_binary/adaptive_multi_tenant_crypto_orchestrator.s,0,0,0,1759585687.619842,
advanced_block_standard_operations,ollama,qwen3:8b,assembly_binary,True,True,0.75,2,64.54234504699707,True,"Detected potential SEED S-box implementation in data_402000, but no explicit cryptographic library calls or algorithm names confirmed.",data/test_files/assembly_binary/advanced_block_standard_operations.s,0,0,0,1759585752.164294,
aes_key_expansion_module,ollama,qwen3:8b,assembly_binary,True,True,0.85,1,56.37290382385254,True,"Detected AES-128 implementation compliant with FIPS 197 standards, which is vulnerable to Grover's algorithm (effective security reduced by half). No explicit evidence of other cryptographic algorithms or libraries.",data/test_files/assembly_binary/aes_key_expansion_module.s,0,0,0,1759585808.539283,
aria_encryption_engine,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,53.38872814178467,True,"NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS FOUND. THE CODE SHOWS CUSTOM BLOCK CIPHER STRUCTURE WITH SUBSTITUTION AND DIFFUSION LAYERS, BUT NO EXPLICIT REFERENCES TO SPECIFIC ALGORITHMS OR LIBRARIES WERE IDENTIFIED.",data/test_files/assembly_binary/aria_encryption_engine.s,0,0,0,1759585861.929129,
automotive_ecu_cryptographic_unit,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,56.05790090560913,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS OR PATTERNS DETECTED. THE DISASSEMBLED CODE DOES NOT CONTAIN EXPLICIT REFERENCES TO KNOWN CRYPTOGRAPHIC LIBRARIES, FUNCTION CALLS, OR IMPLEMENTATIONS OF RSA, ECC, DSA, HASH FUNCTIONS, OR KOREAN DOMESTIC ALGORITHMS.",data/test_files/assembly_binary/automotive_ecu_cryptographic_unit.s,0,0,0,1759585917.989604,
banking_transaction_processor,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,52.35675597190857,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS FOUND IN THE PROVIDED DISASSEMBLED CODE. ALL ANALYSIS POINTS LACK EXPLICIT REFERENCES TO VULNERABLE ALGORITHMS, LIBRARIES, OR FUNCTION CALLS.",data/test_files/assembly_binary/banking_transaction_processor.s,0,0,0,1759585970.348105,
biometric_authentication_engine,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,65.18869614601135,True,No explicit cryptographic algorithm implementations or library calls detected in the provided assembly code. All analysis points lack concrete evidence of vulnerable crypto operations.,data/test_files/assembly_binary/biometric_authentication_engine.s,0,0,0,1759586035.538516,
blake2b_hash_engine,ollama,qwen3:8b,assembly_binary,False,True,0.9,0,80.55481314659119,True,"No explicit cryptographic algorithms or library calls detected that match the specified vulnerable categories (RSA, ECC, DSA/DH/ElGamal, Korean algorithms, MD5/SHA-1, etc.). The code implements a custom hash function resembling BLAKE2b but does not reference any of the targeted vulnerable algorithms.",data/test_files/assembly_binary/blake2b_hash_engine.s,0,0,0,1759586116.09704,
block_cipher_operations,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,68.50967907905579,True,"NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS FOUND IN THE PROVIDED ASSEMBLY CODE. ALL OBSERVATIONS ARE SPECULATIVE AND LACK EXPLICIT REFERENCES TO KNOWN CRYPTOGRAPHIC FUNCTIONS, LIBRARIES, OR ALGORITHM SIGNATURES.",data/test_files/assembly_binary/block_cipher_operations.s,0,0,0,1759586184.608495,
blockchain_consensus_validator,ollama,qwen3:8b,assembly_binary,False,True,0.1,0,58.12673211097717,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARIES FOUND IN THE DISASSEMBLY. ALL DETECTIONS REQUIRE EXPLICIT FUNCTION CALLS, LIBRARY IMPORTS, OR DOCUMENTED API USAGE WHICH ARE NOT PRESENT IN THE PROVIDED CODE.",data/test_files/assembly_binary/blockchain_consensus_validator.s,0,0,0,1759586242.738011,
chacha20_stream_processor,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,61.119587898254395,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. THE CODE IMPLEMENTS A CUSTOM STREAM CIPHER WITH KEY SCHEDULING AND KEYSTREAM GENERATION, BUT LACKS EXPLICIT REFERENCES TO ANY OF THE SPECIFIED ALGORITHMS OR LIBRARIES.",data/test_files/assembly_binary/chacha20_stream_processor.s,0,0,0,1759586303.8589172,
cloud_storage_encryption_processor,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,61.24081778526306,True,"No explicit cryptographic algorithm implementations or library calls detected in the provided assembly code. The analysis suggests potential obfuscation or truncated implementation, but no definitive evidence of vulnerable algorithms was found.",data/test_files/assembly_binary/cloud_storage_encryption_processor.s,0,0,0,1759586365.1011908,
crypto_trading_platform_engine,ollama,qwen3:8b,assembly_binary,False,True,0.1,0,58.62955594062805,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS FOUND IN THE DISASSEMBLED CODE. ALL ANALYSIS POINTS LACK EXPLICIT FUNCTION NAMES, LIBRARY IMPORTS, OR DOCUMENTED API REFERENCES REQUIRED FOR DETECTION.",data/test_files/assembly_binary/crypto_trading_platform_engine.s,0,0,0,1759586423.7323751,
cryptographic_wallet_manager,ollama,qwen3:8b,assembly_binary,False,True,0.85,3,66.69728207588196,True,"Detected elliptic curve operations (curve25519, secp256k1) and modular arithmetic patterns consistent with cryptographic implementations. No explicit evidence of RSA, symmetric ciphers, hash functions, or Korean algorithms.",data/test_files/assembly_binary/cryptographic_wallet_manager.s,0,0,0,1759586490.43168,
diffie_hellman_key_exchange,ollama,qwen3:8b,assembly_binary,True,True,0.85,3,57.67824411392212,True,Detected Diffie-Hellman key exchange implementation with modular exponentiation and big integer operations. No explicit evidence of other cryptographic algorithms or libraries.,data/test_files/assembly_binary/diffie_hellman_key_exchange.s,0,0,0,1759586548.11154,
digital_signature_processor,ollama,qwen3:8b,assembly_binary,True,True,0.85,2,63.26448583602905,True,Detected RSA modular exponentiation and large integer arithmetic patterns in the modular_exponentiation function. No explicit evidence found for other cryptographic algorithms or libraries.,data/test_files/assembly_binary/digital_signature_processor.s,0,0,0,1759586611.3777862,
distributed_blockchain_consensus_engine,ollama,qwen3:8b,assembly_binary,False,True,0.1,0,54.43552899360657,True,No explicit cryptographic algorithm implementations or library calls detected in the provided assembly code. All analysis points lack concrete evidence of quantum-vulnerable cryptographic patterns.,data/test_files/assembly_binary/distributed_blockchain_consensus_engine.s,0,0,0,1759586665.81468,
dsa_signature_verification,ollama,qwen3:8b,assembly_binary,True,True,0.95,3,62.33311891555786,True,"Detected DSA-based discrete logarithm computation with modular arithmetic operations and optimization patterns. No evidence of Korean algorithms, symmetric ciphers, or hash functions (MD5/SHA-1) found.",data/test_files/assembly_binary/dsa_signature_verification.s,0,0,0,1759586728.1498911,
elliptic_curve_point_operations,ollama,qwen3:8b,assembly_binary,False,True,0.85,1,51.624382972717285,True,"Detected elliptic curve scalar multiplication patterns with data containing elliptic curve coordinates (data_402000, data_402020) and bit-parallel processing in sub_401100. No other cryptographic algorithms or libraries detected.",data/test_files/assembly_binary/elliptic_curve_point_operations.s,0,0,0,1759586779.7755158,
elliptic_curve_scalar_multiplication,ollama,qwen3:8b,assembly_binary,False,True,0.85,2,57.70424294471741,True,Detected elliptic curve scalar multiplication and modular arithmetic operations. No explicit evidence of other vulnerable cryptographic algorithms or libraries.,data/test_files/assembly_binary/elliptic_curve_scalar_multiplication.s,0,0,0,1759586837.482427,
elliptic_mathematical_operations,ollama,qwen3:8b,assembly_binary,False,True,0.1,0,61.865126848220825,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS FOUND IN THE PROVIDED ASSEMBLY CODE. ALL ANALYSIS POINTS LACK SPECIFIC FUNCTION CALLS, LIBRARY IMPORTS, OR DOCUMENTED IMPLEMENTATIONS REQUIRED FOR DETECTION.",data/test_files/assembly_binary/elliptic_mathematical_operations.s,0,0,0,1759586899.349587,
ellipticsignature_securehashalgo1_operations,ollama,qwen3:8b,assembly_binary,False,True,0.1,0,58.612650871276855,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS FOUND IN THE PROVIDED ASSEMBLY CODE. ALL ANALYSIS POINTS REQUIRE EXPLICIT FUNCTION CALLS, LIBRARY IMPORTS, OR DOCUMENTED API SIGNATURES WHICH ARE NOT PRESENT IN THE TEST DATA.",data/test_files/assembly_binary/ellipticsignature_securehashalgo1_operations.s,0,0,0,1759586957.9638588,
embedded_authentication_processor,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,60.85010600090027,True,"NO VULNERABLE CRYPTOGRAPHIC ELEMENTS DETECTED - No explicit cryptographic function calls, library imports, or algorithm signatures were found in the provided assembly code.",data/test_files/assembly_binary/embedded_authentication_processor.s,0,0,0,1759587018.815873,
embedded_iot_security_processor,ollama,qwen3:8b,assembly_binary,True,True,0.85,6,56.02998614311218,True,"Detected vulnerable cryptographic elements: Diffie-Hellman (ECDH) implementation using P-192 curve, HIGHT algorithm for lightweight cryptography, and modular arithmetic operations. Key storage patterns identified but no explicit library calls found.",data/test_files/assembly_binary/embedded_iot_security_processor.s,0,0,0,1759587074.8477492,
enterprise_data_protection_engine,ollama,qwen3:8b,assembly_binary,True,True,0.75,3,63.4902880191803,True,"Detected Korean Feistel network implementation (likely ARIA/HIGHT variant) and large integer arithmetic operations, but no explicit cryptographic library calls or algorithm names confirmed.",data/test_files/assembly_binary/enterprise_data_protection_engine.s,0,0,0,1759587138.339649,
feistel_network_operations,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,76.2096300125122,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS FOUND IN THE PROVIDED ASSEMBLY CODE. ALL ANALYSIS POINTS LACK EXPLICIT FUNCTION CALLS, IMPORT STATEMENTS, OR DOCUMENTED API REFERENCES REQUIRED FOR DETECTION.",data/test_files/assembly_binary/feistel_network_operations.s,0,0,0,1759587214.551602,
financial_cryptographic_accelerator,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,63.37649202346802,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - NO CLEAR EVIDENCE OF CRYPTOGRAPHIC FUNCTION CALLS, LIBRARY IMPORTS, OR IMPLEMENTATION SIGNATURES FOUND IN THE PROVIDED CODE SAMPLE",data/test_files/assembly_binary/financial_cryptographic_accelerator.s,0,0,0,1759587277.929899,
government_classified_system_processor,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,51.44315218925476,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - NO EXPlicit cryptographic function calls, library imports, or algorithm-specific implementations were found in the provided assembly code.",data/test_files/assembly_binary/government_classified_system_processor.s,0,0,0,1759587329.375223,
hash_digest_operations,ollama,qwen3:8b,assembly_binary,False,True,0.95,1,58.58802914619446,True,Detected MD5 hash function implementation with characteristic constants and processing patterns. No evidence of other cryptographic algorithms or libraries.,data/test_files/assembly_binary/hash_digest_operations.s,0,0,0,1759587387.9648519,
hight_lightweight_cipher,ollama,qwen3:8b,assembly_binary,True,True,0.85,2,63.33829188346863,True,"Detected HIGHT block cipher implementation (Korean algorithm) with domestic standard references. No explicit evidence of other quantum-vulnerable algorithms like AES-128, DES, or hash functions.",data/test_files/assembly_binary/hight_lightweight_cipher.s,0,0,0,1759587451.304517,
hybrid_banking_security_system,ollama,qwen3:8b,assembly_binary,True,True,0.85,2,52.26010274887085,True,"Detected RSA modular exponentiation and large integer arithmetic patterns in the authentication phase, which are vulnerable to quantum attacks. No other cryptographic algorithms or libraries were explicitly identified.",data/test_files/assembly_binary/hybrid_banking_security_system.s,0,0,0,1759587503.566565,
industrial_control_security,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,49.67483186721802,True,NO cryptographic algorithms or library calls detected in the provided assembly code. All analysis points lack explicit evidence of vulnerable crypto implementations.,data/test_files/assembly_binary/industrial_control_security.s,0,0,0,1759587553.2431722,
industrial_security_coprocessor,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,66.04991006851196,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS FOUND IN THE PROVIDED ASSEMBLY CODE. ALL ANALYSIS POINTS LACK EXPLICIT FUNCTION CALLS, LIBRARY IMPORTS, OR DOCUMENTED IMPLEMENTATIONS.",data/test_files/assembly_binary/industrial_security_coprocessor.s,0,0,0,1759587619.294179,
kcdsa_signature_generator,ollama,qwen3:8b,assembly_binary,True,True,0.95,3,63.65157890319824,True,Detected DSA discrete logarithm computation with big integer operations and key storage patterns. No explicit Korean algorithm implementations or cryptographic library calls found.,data/test_files/assembly_binary/kcdsa_signature_generator.s,0,0,0,1759587682.9478998,
keyexchange_protocol_operations,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,49.7158088684082,True,No explicit cryptographic algorithm implementations or library calls detected in the provided assembly code. The observed operations appear to be general-purpose arithmetic and control flow patterns without specific cryptographic function signatures.,data/test_files/assembly_binary/keyexchange_protocol_operations.s,0,0,0,1759587732.665731,
korean_blockcipher_operations,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,63.638587951660156,True,"No explicit cryptographic algorithms, library calls, or implementation patterns were detected in the provided assembly binary. The data sections contain potential S-box candidates but lack definitive evidence of quantum-vulnerable cryptographic operations.",data/test_files/assembly_binary/korean_blockcipher_operations.s,0,0,0,1759587796.30628,
lea_block_cipher_engine,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,57.57201385498047,True,"No explicit cryptographic algorithms, libraries, or vulnerable patterns detected in the provided assembly code.",data/test_files/assembly_binary/lea_block_cipher_engine.s,0,0,0,1759587853.879497,
legacy_hash_computation,ollama,qwen3:8b,assembly_binary,True,True,0.85,1,55.34653067588806,True,"Detected SHA-1 hash function implementation through constant values (0x89abcdef, 0xfedcba98) in digest_alg1_process_block. No explicit cryptographic library calls or API signatures found.",data/test_files/assembly_binary/legacy_hash_computation.s,0,0,0,1759587909.227795,
legacy_pki_certificate_processor,ollama,qwen3:8b,assembly_binary,False,True,0.1,0,61.27232003211975,True,"No explicit cryptographic algorithm implementations or library calls were detected in the provided assembly code snippet. The analysis identified potential algorithm codes (e.g., 0x01, 0x11) but lacked direct references to specific vulnerable algorithms like RSA, DSA, MD5, SHA-1, or Korean domestic ciphers.",data/test_files/assembly_binary/legacy_pki_certificate_processor.s,0,0,0,1759587970.5019898,
md5_sha1_hash_processor,ollama,qwen3:8b,assembly_binary,True,True,0.95,1,56.80497407913208,True,"Detected legacy cryptographic hash functions MD5 and SHA-1 in the hash_alg_state and digest_alg1_state initializations. Both algorithms are vulnerable to quantum attacks (Grover's algorithm) and collision attacks, requiring migration to post-quantum cryptographic standards.",data/test_files/assembly_binary/md5_sha1_hash_processor.s,0,0,0,1759588027.308913,
medical_device_security_controller,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,50.30197072029114,True,"No explicit cryptographic function calls, library imports, or documented crypto operations detected in the provided assembly code. All analysis points remain undetected.",data/test_files/assembly_binary/medical_device_security_controller.s,0,0,0,1759588077.612733,
message_digest_128bit_operations,ollama,qwen3:8b,assembly_binary,True,True,0.95,1,42.03345203399658,True,Detected MD5 hash function implementation using standard initialization constants and compression function values. No other cryptographic algorithms or vulnerable patterns were found.,data/test_files/assembly_binary/message_digest_128bit_operations.s,0,0,0,1759588119.647865,
mobile_cipher_engine,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,51.98123216629028,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - NO CLEAR EVIDENCE OF CRYPTOGRAPHIC FUNCTION CALLS, LIBRARY IMPORTS, OR SPECIFIC ALGORITHM IMPLEMENTATIONS FOUND IN THE PROVIDED ASSEMBLY CODE",data/test_files/assembly_binary/mobile_cipher_engine.s,0,0,0,1759588171.6302662,
mobile_payment_security_engine,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,56.45964479446411,True,NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS FOUND IN THE DISASSEMBLED CODE. ALL OPERATIONS APPEAR TO BE GENERAL-PURPOSE ARITHMETIC WITHOUT SPECIFIC CRYPTOGRAPHIC SIGNATURES.,data/test_files/assembly_binary/mobile_payment_security_engine.s,0,0,0,1759588228.092044,
network_security_gateway,ollama,qwen3:8b,assembly_binary,True,True,0.95,1,49.0372200012207,True,Detected DES symmetric cipher implementation vulnerable to quantum attacks (explicit function calls to des_encrypt_block and des_key_schedule). No evidence of other cryptographic algorithms or libraries.,data/test_files/assembly_binary/network_security_gateway.s,0,0,0,1759588277.131072,
neural_network_inference_accelerator,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,55.710487842559814,True,NO cryptographic algorithms or library calls detected in the provided assembly code. The observed operations appear to be general-purpose data processing rather than cryptographic functions.,data/test_files/assembly_binary/neural_network_inference_accelerator.s,0,0,0,1759588332.842874,
ntru_polynomial_processor,ollama,qwen3:8b,assembly_binary,True,True,0.95,0,64.63725113868713,True,No vulnerable cryptographic algorithms or patterns detected. The code implements a post-quantum secure algorithm (NTRU) using custom polynomial operations and modular arithmetic without explicit references to known cryptographic libraries or vulnerable algorithms.,data/test_files/assembly_binary/ntru_polynomial_processor.s,0,0,0,1759588397.481451,
obfuscated_crypto_library_dispatcher,ollama,qwen3:8b,assembly_binary,True,True,0.85,1,67.38669109344482,True,"The binary exhibits assembly-level obfuscation techniques to hide cryptographic operations, but no explicit references to specific vulnerable algorithms or libraries were found.",data/test_files/assembly_binary/obfuscated_crypto_library_dispatcher.s,0,0,0,1759588464.8696609,
openssl_des_enc,ollama,qwen3:8b,assembly_binary,True,True,0.85,1,72.57815718650818,True,"Detected DES symmetric cipher patterns (64-bit key size handling) in the simple_des_encrypt function, indicating potential quantum vulnerability. No explicit library calls or Korean algorithm signatures found.",data/test_files/assembly_binary/openssl_des_enc.asm,0,0,0,1759588537.450131,
openssl_des_enc,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,66.48558521270752,True,NOT DETECTED,data/test_files/assembly_binary/openssl_des_enc.bin,0,0,0,1759588603.938619,
poly1305_authenticator,ollama,qwen3:8b,assembly_binary,False,True,0.1,0,108.69446873664856,True,"No explicit cryptographic algorithms, libraries, or vulnerable patterns detected in the provided assembly code. The implementation appears to be a custom Poly1305 MAC without references to RSA, elliptic curves, discrete logarithm operations, Korean algorithms, hash functions, or side-channel vulnerabilities.",data/test_files/assembly_binary/poly1305_authenticator.s,0,0,0,1759588712.634221,
polymorphic_malware_crypto_engine,ollama,qwen3:8b,assembly_binary,True,True,0.6,1,59.178313970565796,True,"The analysis detected obfuscated function pointer patterns using XOR encoding, which may indicate attempts to hide cryptographic operations. No explicit references to specific vulnerable algorithms or libraries were found.",data/test_files/assembly_binary/polymorphic_malware_crypto_engine.s,0,0,0,1759588771.814553,
polynomial_field_arithmetic_engine,ollama,qwen3:8b,assembly_binary,False,True,0.6,1,149.43095588684082,True,"Detected elliptic curve scalar multiplication operations, but no explicit evidence for other cryptographic algorithms or libraries.",data/test_files/assembly_binary/polynomial_field_arithmetic_engine.s,0,0,0,1759588921.247506,
postquantum_multimodal_operations,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,59.82591891288757,True,"NO VULNERABLE CRYPTOGRAPHIC ELEMENTS DETECTED - NO CLEAR EVIDENCE OF CRYPTOGRAPHIC FUNCTION CALLS, LIBRARY IMPORTS, OR IMPLEMENTATION PATTERNS FOUND IN THE PROVIDED ASSEMBLY CODE",data/test_files/assembly_binary/postquantum_multimodal_operations.s,0,0,0,1759588981.07617,
publickey_encryption_operations,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,41.094398021698,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - NO EXPlicit cryptographic API calls, library imports, or algorithm implementations were found in the provided assembly code.",data/test_files/assembly_binary/publickey_encryption_operations.s,0,0,0,1759589022.172074,
publickey_modular_operations,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,49.51787495613098,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARIES FOUND IN THE PROVIDED ASSEMBLY CODE. ALL ANALYSIS POINTS ARE MARKED AS NOT DETECTED DUE TO LACK OF EXPLICIT CRYPTOGRAPHIC FUNCTION CALLS, LIBRARY REFERENCES, OR IMPLEMENTATION SIGNATURES.",data/test_files/assembly_binary/publickey_modular_operations.s,0,0,0,1759589071.691749,
publickeyalgo_messagedigest5_operations,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,49.321890115737915,True,"NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS FOUND IN THE PROVIDED ASSEMBLY CODE. ALL ANALYSIS POINTS REQUIRE EXPLICIT CRYPTOGRAPHIC API CALLS, LIBRARY IMPORTS, OR DOCUMENTED FUNCTION REFERENCES WHICH ARE NOT PRESENT IN THE TEST DATA.",data/test_files/assembly_binary/publickeyalgo_messagedigest5_operations.s,0,0,0,1759589121.016475,
quantum_communication_relay,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,60.164504051208496,True,"No explicit cryptographic algorithm implementations, library calls, or API signatures detected in the provided disassembled code. The function names suggest potential domestic algorithms but lack concrete evidence of specific cryptographic operations.",data/test_files/assembly_binary/quantum_communication_relay.s,0,0,0,1759589181.183945,
quantum_cryptanalysis_simulation,ollama,qwen3:8b,assembly_binary,True,True,0.75,2,55.767406940460205,True,"Detected elliptic curve implementations (NIST P-256/P-384/P-521/secp256k1) and modular arithmetic operations. No explicit cryptographic library calls or specific vulnerable algorithms (RSA, DSA, AES-128, etc.) were found.",data/test_files/assembly_binary/quantum_cryptanalysis_simulation.s,0,0,0,1759589236.953778,
quantum_migration_bridge_processor,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,54.85507774353027,True,NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS FOUND IN THE PROVIDED ASSEMBLY CODE. ALL ANALYSIS POINTS ARE MARKED AS NOT DETECTED.,data/test_files/assembly_binary/quantum_migration_bridge_processor.s,0,0,0,1759589291.812265,
quantum_resistant_lattice_operations,ollama,qwen3:8b,assembly_binary,True,True,1.0,0,48.10355019569397,True,"The analyzed code implements lattice-based post-quantum cryptography (Ring-LWE and LLL basis reduction) without any explicit references to traditional cryptographic algorithms or vulnerable implementations. No evidence of RSA, ECC, DSA, DH, ElGamal, Korean algorithms, symmetric ciphers, hash functions, or cryptographic libraries was found.",data/test_files/assembly_binary/quantum_resistant_lattice_operations.s,0,0,0,1759589339.9186728,
quantum_resistant_migration_bridge,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,57.59102487564087,True,"No explicit cryptographic algorithm implementations or library calls detected in the provided code snippet. All analysis points require specific function names, library imports, or documented API usage that are absent from the truncated assembly code.",data/test_files/assembly_binary/quantum_resistant_migration_bridge.s,0,0,0,1759589397.513363,
quantum_safe_communicator,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,61.47386193275452,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - NO EXPlicit cryptographic library calls, algorithm names, or implementation signatures found in the provided assembly code.",data/test_files/assembly_binary/quantum_safe_communicator.s,0,0,0,1759589458.98994,
rsa_key_generation_engine,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,50.495110750198364,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - The code contains cryptographic operations (prime generation, Miller-Rabin test, modular exponentiation) but lacks explicit references to specific algorithms or libraries. No quantum-vulnerable implementations were found in the provided assembly code.",data/test_files/assembly_binary/rsa_key_generation_engine.s,0,0,0,1759589509.487872,
salsa20_stream_cipher,ollama,qwen3:8b,assembly_binary,False,True,0.1,0,60.87166690826416,True,"No explicit cryptographic algorithms or library calls detected in the provided assembly code. The implementation appears to be a custom stream cipher (STREAM_CIPHER_ALT) with quarter-round operations, but no specific vulnerable algorithms (DES, AES-128, etc.) were identified through explicit function names or library references.",data/test_files/assembly_binary/salsa20_stream_cipher.s,0,0,0,1759589570.362412,
satellite_communication_security,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,69.82952690124512,True,NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARIES DETECTED IN THE PROVIDED ASSEMBLY CODE. ALL OBSERVED OPERATIONS ARE GENERAL AND LACK SPECIFIC INDICATORS OF VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS.,data/test_files/assembly_binary/satellite_communication_security.s,0,0,0,1759589640.194976,
secure_boot_verification_processor,ollama,qwen3:8b,assembly_binary,False,True,0.75,2,65.62714624404907,True,Detected potential Korean domestic cryptographic algorithm implementation in domesticn_secure_boot_cipher function with specific constants and byte manipulation patterns.,data/test_files/assembly_binary/secure_boot_verification_processor.s,0,0,0,1759589705.824501,
secure_communication_protocol,ollama,qwen3:8b,assembly_binary,True,True,0.85,5,68.53834986686707,True,Detected RSA modular exponentiation and Diffie-Hellman signatures with potential side-channel vulnerabilities. No explicit evidence for other algorithms.,data/test_files/assembly_binary/secure_communication_protocol.s,0,0,0,1759589774.365124,
secure_hash_256bit_operations,ollama,qwen3:8b,assembly_binary,False,True,0.1,0,56.163267850875854,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. The code contains hash initialization constants (matching SHA-256) but lacks explicit cryptographic function calls, library imports, or API signatures required for detection.",data/test_files/assembly_binary/secure_hash_256bit_operations.s,0,0,0,1759589830.531202,
secure_matrix_transformation_unit,ollama,qwen3:8b,assembly_binary,True,True,0.85,1,65.56926226615906,True,Detected potential SEED S-box implementation in Korean algorithm signatures (referencing transformation_sbox at 0x602000). No other cryptographic algorithms or libraries were explicitly identified.,data/test_files/assembly_binary/secure_matrix_transformation_unit.s,0,0,0,1759589896.101954,
siphash_prf_function,ollama,qwen3:8b,assembly_binary,False,True,1.0,0,61.148200035095215,True,"No explicit cryptographic algorithms or library calls detected that match the specified vulnerable categories (RSA, ECC, DSA/DH/ElGamal, MD5/SHA-1, etc.). The implementation appears to be SipHash, a secure hash function not listed as quantum-vulnerable.",data/test_files/assembly_binary/siphash_prf_function.s,0,0,0,1759589957.253021,
smart_card_authenticator,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,57.17149591445923,True,NO cryptographic algorithms or library calls detected in the provided assembly code. All analysis points lack explicit evidence of vulnerable crypto implementations.,data/test_files/assembly_binary/smart_card_authenticator.s,0,0,0,1759590014.426786,
smart_card_security_module,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,60.74065589904785,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED - NO CLEAR EVIDENCE OF CRYPTOGRAPHIC FUNCTION CALLS, LIBRARY IMPORTS, OR SPECIFIC ALGORITHM IMPLEMENTATIONS FOUND IN THE PROVIDED ASSEMBLY CODE",data/test_files/assembly_binary/smart_card_security_module.s,0,0,0,1759590075.170377,
sphincs_signature_scheme,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,58.637434005737305,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. The code implements a hash-based post-quantum signature system (SPHINCS+) with no evidence of classical cryptographic algorithms or vulnerable implementations.,data/test_files/assembly_binary/sphincs_signature_scheme.s,0,0,0,1759590133.8099232,
steganographic_crypto_covert_channel,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,50.740681886672974,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS DETECTED. THE CODE CONTAINS DISGUISED IMAGE PROCESSING STEPS WITHOUT EXPLICIT REFERENCES TO ANY CRYPTOGRAPHIC IMPLEMENTATIONS, LIBRARIES, OR SPECIFIC ALGORITHMS.",data/test_files/assembly_binary/steganographic_crypto_covert_channel.s,0,0,0,1759590184.553261,
stream_cipher_generator,ollama,qwen3:8b,assembly_binary,True,True,0.6,1,45.175408124923706,True,Detected RC4 symmetric cipher implementation (vulnerable to quantum attacks) through explicit function calls. No evidence of other cryptographic algorithms or vulnerabilities.,data/test_files/assembly_binary/stream_cipher_generator.s,0,0,0,1759590229.730861,
stream_generator_operations,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,68.14177799224854,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS DETECTED. THE CODE CONTAINS GENERIC BIT MANIPULATION AND DATA INITIALIZATION WITHOUT EXPLICIT REFERENCES TO KNOWN CRYPTOGRAPHIC FUNCTIONS, LIBRARIES, OR ALGORITHMS.",data/test_files/assembly_binary/stream_generator_operations.s,0,0,0,1759590297.874735,
stream_keygeneration_operations,ollama,qwen3:8b,assembly_binary,False,True,0.1,0,50.91938304901123,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS FOUND IN THE PROVIDED ASSEMBLY CODE. ALL ANALYSIS POINTS ARE MARKED AS NOT DETECTED DUE TO LACK OF EXPLICIT CRYPTOGRAPHIC FUNCTION CALLS, LIBRARY IMPORTS, OR DOCUMENTED IMPLEMENTATIONS.",data/test_files/assembly_binary/stream_keygeneration_operations.s,0,0,0,1759590348.7964559,
triple_des_encryption_module,ollama,qwen3:8b,assembly_binary,True,True,0.85,2,62.019243001937866,True,Detected vulnerable symmetric cipher patterns (3DES) with EDE optimization and Grover's algorithm vulnerability. No evidence of other cryptographic algorithms or libraries.,data/test_files/assembly_binary/triple_des_encryption_module.s,0,0,0,1759590410.8182411,
vpn_tunnel_encryption_engine,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,60.674768924713135,True,"No explicit cryptographic algorithm implementations, library calls, or API signatures were detected in the provided assembly code. All analysis points lack concrete evidence.",data/test_files/assembly_binary/vpn_tunnel_encryption_engine.s,0,0,0,1759590471.4949172,
x25519_key_agreement,ollama,qwen3:8b,assembly_binary,True,True,0.95,3,55.884546756744385,True,"The code implements Curve25519 elliptic curve operations with Montgomery ladder scalar multiplication, which is quantum-resistant. No vulnerable cryptographic algorithms (RSA, DSA, SHA-1, etc.) are detected.",data/test_files/assembly_binary/x25519_key_agreement.s,0,0,0,1759590527.381907,
apache_legacy_ssl,ollama,qwen3:8b,logs_config,True,True,0.95,5,69.577073097229,True,"Detected vulnerable RSA (1024-bit), DH (1024-bit), RC4, DES, 3DES, MD5, and deprecated SSLv3/TLSv1.0 protocols in Apache configuration files.",data/test_files/logs_config/apache_legacy_ssl.conf,0,0,0,1759590596.962313,
automotive_v2x_system,ollama,qwen3:8b,logs_config,False,False,0.0,0,96.58900308609009,False,Failed to parse JSON response,data/test_files/logs_config/automotive_v2x_system.yaml,0,0,0,1759590693.551876,
blockchain_node_security,ollama,qwen3:8b,logs_config,False,False,0.0,0,94.52560615539551,False,Failed to parse JSON response,data/test_files/logs_config/blockchain_node_security.conf,0,0,0,1759590788.079703,
cloud_hsm_operations,ollama,qwen3:8b,logs_config,True,True,0.95,5,83.99768137931824,True,Detected RSA and ECC P-384 configurations with quantum-vulnerable algorithms in TLS cipher suites and certificate operations.,data/test_files/logs_config/cloud_hsm_operations.log,0,0,0,1759590872.079652,
cloud_storage_encryption,ollama,qwen3:8b,logs_config,False,False,0.0,0,98.1814558506012,False,Failed to parse JSON response,data/test_files/logs_config/cloud_storage_encryption.conf,0,0,0,1759590970.261894,
cryptocurrency_exchange,,,,False,False,0,0,199.17682218551636,False,,,0,0,0,0,Ollama API Error for qwen3:8b: Empty response from qwen3:8b after retry
cryptographic_operations_detailed,ollama,qwen3:8b,logs_config,True,True,0.95,8,92.94635605812073,True,"Detected RSA, ECC, Diffie-Hellman, and stream cipher vulnerabilities. Quantum vulnerability warnings and migration planning detected. Korean algorithms and SSL/TLS configurations not explicitly identified.",data/test_files/logs_config/cryptographic_operations_detailed.log,0,0,0,1759591262.3888152,
database_encryption_setup,ollama,qwen3:8b,logs_config,True,True,0.95,6,67.78366804122925,True,"Detected Korean algorithms SEED and ARIA, AES-256 key wrap, HSM integration, and ECB mode warning. No explicit evidence of quantum-vulnerable symmetric ciphers in active use.",data/test_files/logs_config/database_encryption_setup.log,0,0,0,1759591330.17485,
email_server_crypto,ollama,qwen3:8b,logs_config,True,True,0.95,6,77.04670286178589,True,"Detected RSA (2048-bit) certificates, DH parameters, and legacy SHA-1 in S/MIME. 3DES symmetric ciphers are also present. No explicit quantum-resistant algorithms or migration logs found.",data/test_files/logs_config/email_server_crypto.conf,0,0,0,1759591407.225528,
enterprise_banking_pki_configuration,ollama,qwen3:8b,logs_config,False,False,0.0,0,93.82525396347046,False,Failed to parse JSON response,data/test_files/logs_config/enterprise_banking_pki_configuration.conf,0,0,0,1759591501.053931,
financial_payment_gateway,ollama,qwen3:8b,logs_config,True,True,0.98,8,88.56126189231873,True,"The configuration contains multiple quantum-vulnerable cryptographic elements including RSA-1024, SHA-1, TLSv1.0/1.1, 3DES, RC4, and MD5. These algorithms are susceptible to attacks from quantum computers and should be replaced with post-quantum alternatives.",data/test_files/logs_config/financial_payment_gateway.conf,0,0,0,1759591589.6171038,
government_document_system,,,,False,False,0,0,194.0358760356903,False,,,0,0,0,0,Ollama API Error for qwen3:8b: Empty response from qwen3:8b after retry
healthcare_ehr_system,ollama,qwen3:8b,logs_config,True,True,0.95,10,88.8406298160553,True,"Detected RSA-2048, ECDSA-P256, DHE-DSA, AES-128-CBC/GCM, TLS 1.2 with vulnerable cipher suites (DHE-DSA-AES128-SHA), and legacy protocols. No post-quantum migration implemented.",data/test_files/logs_config/healthcare_ehr_system.yaml,0,0,0,1759591872.495811,
industrial_control_system,ollama,qwen3:8b,logs_config,True,True,0.95,10,95.26433610916138,True,"Detected vulnerable algorithms include RSA, DSA, DH group 14, and SHA-1. Korean standards (SEED, ARIA, HIGHT) are in use. SSL/TLS configurations with DHE-DSA-AES128-SHA and legacy protocols (DSA, SHA-1) are present.",data/test_files/logs_config/industrial_control_system.log,0,0,0,1759591967.761632,
iot_device_firmware_config,ollama,qwen3:8b,logs_config,True,True,0.85,6,92.00394105911255,True,"The configuration uses ECC (secp256r1) in multiple areas (key_type, TLS cipher suites, firmware signing), which are quantum-vulnerable. No Korean algorithms or explicit symmetric cipher vulnerabilities detected. Legacy protocols like TLS v1.0/1.1 are disabled.",data/test_files/logs_config/iot_device_firmware_config.yaml,0,0,0,1759592059.769093,
korean_crypto_library_config,ollama,qwen3:8b,logs_config,False,False,0.0,0,94.84307813644409,False,Failed to parse JSON response,data/test_files/logs_config/korean_crypto_library_config.ini,0,0,0,1759592154.613527,
military_secure_comms,ollama,qwen3:8b,logs_config,True,True,0.92,9,96.92787003517151,True,"Detected RSA-4096, Diffie-Hellman (DHE-3072/DH-Group-20), 3DES, MD5, and Korean algorithms (ARIA/SEED/LEA/KCDSA). Legacy protocols and vulnerable hashes are present in logs. No explicit migration to quantum-resistant algorithms observed.",data/test_files/logs_config/military_secure_comms.conf,0,0,0,1759592251.544124,
mobile_app_security_audit,ollama,qwen3:8b,logs_config,True,True,0.95,6,79.7619800567627,True,"Detected RSA 2048-bit keys, AES-128-CBC (CBC mode), TLS 1.2 protocol, RC4-SHA cipher suite, and PBKDF2 with insufficient iterations as vulnerable configurations.",data/test_files/logs_config/mobile_app_security_audit.log,0,0,0,1759592331.30814,
nginx_mixed_security_gateway,ollama,qwen3:8b,logs_config,False,True,0.95,7,82.31701397895813,True,"Detected vulnerable RSA 1024-bit keys, deprecated TLSv1/TLSv1.1 protocols, and Korean algorithms ARIA/SEED in cipher suites. SSL/TLS configurations use outdated protocols and weak ciphers (RC4, 3DES).",data/test_files/logs_config/nginx_mixed_security_gateway.conf,0,0,0,1759592413.628572,
openssh,ollama,qwen3:8b,logs_config,False,False,0.0,0,102.26815795898438,False,Failed to parse JSON response,data/test_files/logs_config/openssh.log,0,0,0,1759592515.897506,
quantum_safe_migration_plan,ollama,qwen3:8b,logs_config,False,False,0.0,0,94.87914204597473,False,Failed to parse JSON response,data/test_files/logs_config/quantum_safe_migration_plan.yaml,0,0,0,1759592610.777982,
satellite_ground_station,ollama,qwen3:8b,logs_config,False,False,0.0,0,98.94587302207947,False,Failed to parse JSON response,data/test_files/logs_config/satellite_ground_station.log,0,0,0,1759592709.726836,
security_scanner_findings,ollama,qwen3:8b,logs_config,True,True,0.92,9,79.11179804801941,True,"Detected RSA 1024-bit certificates, ECC P-192 curves, 3DES encryption, RC4-SHA cipher suites, SHA-1 HMAC and MD5 hashing in vulnerable configurations across multiple systems.",data/test_files/logs_config/security_scanner_findings.log,0,0,0,1759592788.8409002,
smart_city_infrastructure,ollama,qwen3:8b,logs_config,True,True,0.95,12,95.6855959892273,True,"Detected RSA (2048/3072/4096), ECDSA, DSA-1024, DHE-2048, Korean algorithms (HIGHT, ARIA, SEED, LEA, KCDSA, LSH), vulnerable symmetric ciphers (AES-128-CBC, 3DES, Blowfish, MD5, RC4), and SSL/TLS with DHE-RSA. Explicit log entries confirm quantum-vulnerable usage.",data/test_files/logs_config/smart_city_infrastructure.log,0,0,0,1759592884.528914,
ssh_server_hardened,ollama,qwen3:8b,logs_config,True,True,0.95,5,80.29581308364868,True,Detected RSA and ECDH/ECDSA algorithms vulnerable to quantum attacks. Symmetric ciphers appear secure but may require post-quantum migration. No explicit Korean standards or migration logs found.,data/test_files/logs_config/ssh_server_hardened.conf,0,0,0,1759592964.828789,
ssl_legacy_banking_configuration,ollama,qwen3:8b,logs_config,True,True,0.95,7,82.93932318687439,True,"Detected multiple quantum-vulnerable configurations including RSA-1024 certificates, 1024-bit DH parameters, RC4/MD5 symmetric ciphers, and TLSv1.0 protocols. No evidence of migration to quantum-resistant algorithms or Korean domestic standards compliance.",data/test_files/logs_config/ssl_legacy_banking_configuration.conf,0,0,0,1759593047.771669,
telecom_5g_network,ollama,qwen3:8b,logs_config,False,False,0.0,0,92.8717429637909,False,Failed to parse JSON response,data/test_files/logs_config/telecom_5g_network.conf,0,0,0,1759593140.64429,
tls_cipher_negotiation_warnings,ollama,qwen3:8b,logs_config,True,True,0.95,9,88.48484492301941,True,"Detected vulnerable RSA-1024 certificates, DH-1024 key exchange, 3DES/RC4 symmetric ciphers, MD5/SHA-1 hashes, and Korean SEED/ARIA algorithms. SSL/TLS configurations include vulnerable cipher suites. Multiple warnings about deprecated cryptographic operations.",data/test_files/logs_config/tls_cipher_negotiation_warnings.log,0,0,0,1759593229.131413,
vpn_server_runtime,ollama,qwen3:8b,logs_config,False,False,0.0,0,96.83613300323486,False,Failed to parse JSON response,data/test_files/logs_config/vpn_server_runtime.log,0,0,0,1759593325.968425,
AdvancedComputationalFramework,ollama,codellama:7b,source_code,False,False,0.0,0,55.06236815452576,False,Failed to parse JSON response,data/test_files/source_code/AdvancedComputationalFramework.rb,0,0,0,1759593381.0315561,
AdvancedCryptographicOrchestrator,ollama,codellama:7b,source_code,False,False,0.0,0,11.8785080909729,False,Failed to parse JSON response,data/test_files/source_code/AdvancedCryptographicOrchestrator.java,0,0,0,1759593392.910557,
AdvancedMathematicalFramework,ollama,codellama:7b,source_code,False,False,0.0,0,13.484070777893066,False,Failed to parse JSON response,data/test_files/source_code/AdvancedMathematicalFramework.rs,0,0,0,1759593406.3963861,
AutomotiveSecurityUnit,ollama,codellama:7b,source_code,False,False,0.0,0,22.853323221206665,False,Failed to parse JSON response,data/test_files/source_code/AutomotiveSecurityUnit.cpp,0,0,0,1759593429.250252,
BankingSecurityModule,ollama,codellama:7b,source_code,False,False,0.0,0,22.89025092124939,False,Failed to parse JSON response,data/test_files/source_code/BankingSecurityModule.java,0,0,0,1759593452.141032,
BlockchainCryptographyEngine,ollama,codellama:7b,source_code,False,False,0.0,0,31.416023015975952,False,Failed to parse JSON response,data/test_files/source_code/BlockchainCryptographyEngine.java,0,0,0,1759593483.557608,
CorporateSecurityOrchestrator,ollama,codellama:7b,source_code,False,False,0.0,0,37.382302045822144,False,Failed to parse JSON response,data/test_files/source_code/CorporateSecurityOrchestrator.py,0,0,0,1759593520.9403908,
CorporateVPNManager,ollama,codellama:7b,source_code,False,False,0.0,0,16.158550024032593,False,Failed to parse JSON response,data/test_files/source_code/CorporateVPNManager.java,0,0,0,1759593537.099332,
DigitalCertificateValidator,ollama,codellama:7b,source_code,False,False,0.0,0,28.683116674423218,False,Failed to parse JSON response,data/test_files/source_code/DigitalCertificateValidator.java,0,0,0,1759593565.783034,
DistributedComputationEngine,ollama,codellama:7b,source_code,False,False,0.0,0,55.52588891983032,False,Failed to parse JSON response,data/test_files/source_code/DistributedComputationEngine.py,0,0,0,1759593621.309972,
DistributedComputeManager,ollama,codellama:7b,source_code,False,False,0.0,0,32.2547869682312,False,Failed to parse JSON response,data/test_files/source_code/DistributedComputeManager.js,0,0,0,1759593653.565374,
EnterpriseDataSecurityFramework,ollama,codellama:7b,source_code,False,False,0.0,0,23.431314945220947,False,Failed to parse JSON response,data/test_files/source_code/EnterpriseDataSecurityFramework.c,0,0,0,1759593676.9974809,
EnterpriseSecurityGateway,ollama,codellama:7b,source_code,False,False,0.0,0,16.490819931030273,False,Failed to parse JSON response,data/test_files/source_code/EnterpriseSecurityGateway.java,0,0,0,1759593693.4888132,
HardwareSecurity,ollama,codellama:7b,source_code,False,False,0.0,0,31.09167218208313,False,Failed to parse JSON response,data/test_files/source_code/HardwareSecurity.java,0,0,0,1759593724.581059,
IoTDeviceSecurityController,ollama,codellama:7b,source_code,False,False,0.0,0,25.315042734146118,False,Failed to parse JSON response,data/test_files/source_code/IoTDeviceSecurityController.go,0,0,0,1759593749.897368,
LegacyPKISystem,ollama,codellama:7b,source_code,False,False,0.0,0,16.749247789382935,False,Failed to parse JSON response,data/test_files/source_code/LegacyPKISystem.java,0,0,0,1759593766.6470242,
MathematicalTransformEngine,ollama,codellama:7b,source_code,False,False,0.0,0,28.01541566848755,False,Failed to parse JSON response,data/test_files/source_code/MathematicalTransformEngine.java,0,0,0,1759593794.662806,
MediaStreamProtection,ollama,codellama:7b,source_code,False,False,0.0,0,27.165982961654663,False,Failed to parse JSON response,data/test_files/source_code/MediaStreamProtection.java,0,0,0,1759593821.829103,
QuantumResistantMessaging,ollama,codellama:7b,source_code,False,False,0.0,0,35.023977756500244,False,Failed to parse JSON response,data/test_files/source_code/QuantumResistantMessaging.java,0,0,0,1759593856.853506,
QuantumSafeTransitionManager,ollama,codellama:7b,source_code,False,False,0.0,0,18.814993143081665,False,Failed to parse JSON response,data/test_files/source_code/QuantumSafeTransitionManager.cpp,0,0,0,1759593875.6690402,
SecureChatApplication,ollama,codellama:7b,source_code,False,False,0.0,0,24.34609317779541,False,Failed to parse JSON response,data/test_files/source_code/SecureChatApplication.java,0,0,0,1759593900.015619,
SecureCloudStorage,ollama,codellama:7b,source_code,False,False,0.0,0,25.50470209121704,False,Failed to parse JSON response,data/test_files/source_code/SecureCloudStorage.java,0,0,0,1759593925.520721,
SecureTransactionProcessor,ollama,codellama:7b,source_code,False,False,0.0,0,25.18360710144043,False,Failed to parse JSON response,data/test_files/source_code/SecureTransactionProcessor.go,0,0,0,1759593950.705795,
StealthCryptographicLibrary,ollama,codellama:7b,source_code,False,False,0.0,0,24.82889223098755,False,Failed to parse JSON response,data/test_files/source_code/StealthCryptographicLibrary.py,0,0,0,1759593975.5352802,
TelecommunicationsSecurityHub,ollama,codellama:7b,source_code,False,False,0.0,0,11.015901327133179,False,Failed to parse JSON response,data/test_files/source_code/TelecommunicationsSecurityHub.java,0,0,0,1759593986.551708,
a5_trivium_stream_ciphers,ollama,codellama:7b,source_code,False,False,0.0,0,14.593148946762085,False,Failed to parse JSON response,data/test_files/source_code/a5_trivium_stream_ciphers.py,0,0,0,1759594001.1452951,
aes_advanced_encryption,ollama,codellama:7b,source_code,True,True,0.8,2,32.54296278953552,False,"This code has several potential vulnerabilities related to cryptography, including the use of AES and RSA.",data/test_files/source_code/aes_advanced_encryption.java,0,0,0,1759594033.690198,
aria_korean_block_cipher,ollama,codellama:7b,source_code,False,False,0.0,0,25.776201009750366,False,Failed to parse JSON response,data/test_files/source_code/aria_korean_block_cipher.py,0,0,0,1759594059.466811,
aria_sha256_ecdsa_government,ollama,codellama:7b,source_code,False,False,0.0,0,57.64065599441528,False,Failed to parse JSON response,data/test_files/source_code/aria_sha256_ecdsa_government.py,0,0,0,1759594117.108126,
blowfish_symmetric_encryption,ollama,codellama:7b,source_code,False,False,0.0,0,15.099193096160889,False,Failed to parse JSON response,data/test_files/source_code/blowfish_symmetric_encryption.c,0,0,0,1759594132.20805,
camellia_block_cipher,ollama,codellama:7b,source_code,False,False,0.0,0,49.5028772354126,False,Failed to parse JSON response,data/test_files/source_code/camellia_block_cipher.c,0,0,0,1759594181.7115562,
cast_feistel_cipher,ollama,codellama:7b,source_code,False,False,0.0,0,30.8129940032959,False,Failed to parse JSON response,data/test_files/source_code/cast_feistel_cipher.c,0,0,0,1759594212.525016,
chacha20_poly1305_aead,ollama,codellama:7b,source_code,False,False,0.0,0,24.745625734329224,False,Failed to parse JSON response,data/test_files/source_code/chacha20_poly1305_aead.java,0,0,0,1759594237.271018,
cloud_security_orchestrator,ollama,codellama:7b,source_code,False,False,0.0,0,17.555351734161377,False,Failed to parse JSON response,data/test_files/source_code/cloud_security_orchestrator.py,0,0,0,1759594254.8268218,
database_encryption_engine,ollama,codellama:7b,source_code,False,False,0.0,0,26.055668354034424,False,Failed to parse JSON response,data/test_files/source_code/database_encryption_engine.c,0,0,0,1759594280.883292,
diffie_hellman_key_exchange,ollama,codellama:7b,source_code,False,False,0.0,0,17.36152982711792,False,Failed to parse JSON response,data/test_files/source_code/diffie_hellman_key_exchange.java,0,0,0,1759594298.2452638,
digital_identity_platform,ollama,codellama:7b,source_code,False,False,0.0,0,30.860385179519653,False,Failed to parse JSON response,data/test_files/source_code/digital_identity_platform.js,0,0,0,1759594329.106035,
elgamal_diffie_hellman_pki,ollama,codellama:7b,source_code,False,False,0.0,0,25.335466861724854,False,Failed to parse JSON response,data/test_files/source_code/elgamal_diffie_hellman_pki.py,0,0,0,1759594354.441903,
elliptic_curve_cryptography,ollama,codellama:7b,source_code,False,False,0.0,0,23.497588872909546,False,Failed to parse JSON response,data/test_files/source_code/elliptic_curve_cryptography.java,0,0,0,1759594377.93997,
financial_risk_analyzer,ollama,codellama:7b,source_code,False,False,0.0,0,26.90465784072876,False,Failed to parse JSON response,data/test_files/source_code/financial_risk_analyzer.py,0,0,0,1759594404.844966,
financial_transaction_processor,ollama,codellama:7b,source_code,False,False,0.0,0,24.329841136932373,False,Failed to parse JSON response,data/test_files/source_code/financial_transaction_processor.c,0,0,0,1759594429.175321,
financial_transaction_security,ollama,codellama:7b,source_code,False,False,0.0,0,24.525723934173584,False,Failed to parse JSON response,data/test_files/source_code/financial_transaction_security.c,0,0,0,1759594453.7017002,
government_document_signer,ollama,codellama:7b,source_code,False,False,0.0,0,17.23584008216858,False,Failed to parse JSON response,data/test_files/source_code/government_document_signer.c,0,0,0,1759594470.938297,
idea_international_encryption,ollama,codellama:7b,source_code,False,False,0.0,0,23.292376041412354,False,Failed to parse JSON response,data/test_files/source_code/idea_international_encryption.java,0,0,0,1759594494.231207,
iot_device_security,ollama,codellama:7b,source_code,False,False,0.0,0,25.193990230560303,False,Failed to parse JSON response,data/test_files/source_code/iot_device_security.c,0,0,0,1759594519.425998,
lattice_isogeny_postquantum,,,,False,False,0,0,60.01794409751892,False,,,0,0,0,0,"Ollama API Error for codellama:7b: HTTPConnectionPool(host='localhost', port=11434): Read timed out. (read timeout=60)"
legacy_authentication_system,ollama,codellama:7b,source_code,False,False,0.0,0,28.11264991760254,False,Failed to parse JSON response,data/test_files/source_code/legacy_authentication_system.c,0,0,0,1759594607.5574489,
md5_sha1_weak_hash,ollama,codellama:7b,source_code,False,False,0.0,0,46.50391221046448,False,Failed to parse JSON response,data/test_files/source_code/md5_sha1_weak_hash.py,0,0,0,1759594654.061861,
medical_device_encryption,ollama,codellama:7b,source_code,False,False,0.0,0,22.611655950546265,False,Failed to parse JSON response,data/test_files/source_code/medical_device_encryption.rs,0,0,0,1759594676.674517,
military_communication_system,ollama,codellama:7b,source_code,False,False,0.0,0,26.497648000717163,False,Failed to parse JSON response,data/test_files/source_code/military_communication_system.c,0,0,0,1759594703.172946,
mobile_secure_messenger,ollama,codellama:7b,source_code,False,False,0.0,0,33.69392800331116,False,Failed to parse JSON response,data/test_files/source_code/mobile_secure_messenger.c,0,0,0,1759594736.867674,
network_infrastructure_monitor,ollama,codellama:7b,source_code,False,False,0.0,0,29.438289165496826,False,Failed to parse JSON response,data/test_files/source_code/network_infrastructure_monitor.cpp,0,0,0,1759594766.306337,
ntru_lattice_encryption,ollama,codellama:7b,source_code,False,False,0.0,0,40.013836145401,False,Failed to parse JSON response,data/test_files/source_code/ntru_lattice_encryption.java,0,0,0,1759594806.320648,
openssl_des_enc,ollama,codellama:7b,source_code,False,False,0.0,0,32.38284206390381,False,Failed to parse JSON response,data/test_files/source_code/openssl_des_enc.c,0,0,0,1759594838.704309,
quantum_resistant_messenger,ollama,codellama:7b,source_code,False,False,0.0,0,24.586498022079468,False,Failed to parse JSON response,data/test_files/source_code/quantum_resistant_messenger.py,0,0,0,1759594863.291379,
rc4_stream_generator,ollama,codellama:7b,source_code,False,False,0.0,0,20.619271755218506,False,Failed to parse JSON response,data/test_files/source_code/rc4_stream_generator.c,0,0,0,1759594883.911409,
rsa_gen,ollama,codellama:7b,source_code,False,False,0.0,0,28.51981019973755,False,Failed to parse JSON response,data/test_files/source_code/rsa_gen.c,0,0,0,1759594912.43203,
rsa_modular_exponentiation,ollama,codellama:7b,source_code,False,False,0.0,0,24.781191110610962,False,Failed to parse JSON response,data/test_files/source_code/rsa_modular_exponentiation.py,0,0,0,1759594937.213753,
rsa_public_key_system,ollama,codellama:7b,source_code,False,False,0.0,0,10.87803316116333,False,Failed to parse JSON response,data/test_files/source_code/rsa_public_key_system.java,0,0,0,1759594948.092335,
salsa20_stream_cipher,ollama,codellama:7b,source_code,False,False,0.0,0,21.222294807434082,False,Failed to parse JSON response,data/test_files/source_code/salsa20_stream_cipher.c,0,0,0,1759594969.315209,
secure_messaging_protocol,ollama,codellama:7b,source_code,False,False,0.0,0,12.956630945205688,False,Failed to parse JSON response,data/test_files/source_code/secure_messaging_protocol.rb,0,0,0,1759594982.2723489,
secure_video_streaming,ollama,codellama:7b,source_code,False,False,0.0,0,26.191647052764893,False,Failed to parse JSON response,data/test_files/source_code/secure_video_streaming.c,0,0,0,1759595008.464826,
seed_aes_hybrid_banking,ollama,codellama:7b,source_code,False,False,0.0,0,39.9455771446228,False,Failed to parse JSON response,data/test_files/source_code/seed_aes_hybrid_banking.py,0,0,0,1759595048.411061,
seed_stream_cipher,ollama,codellama:7b,source_code,False,False,0.0,0,19.99805784225464,False,Failed to parse JSON response,data/test_files/source_code/seed_stream_cipher.py,0,0,0,1759595068.4096808,
serpent_substitution_network,ollama,codellama:7b,source_code,False,False,0.0,0,44.520813941955566,False,Failed to parse JSON response,data/test_files/source_code/serpent_substitution_network.c,0,0,0,1759595112.931297,
sha1_rsa_legacy_documents,ollama,codellama:7b,source_code,False,False,0.0,0,21.397391080856323,False,Failed to parse JSON response,data/test_files/source_code/sha1_rsa_legacy_documents.py,0,0,0,1759595134.329049,
skipjack_government_cipher,ollama,codellama:7b,source_code,False,False,0.0,0,14.49070405960083,False,Failed to parse JSON response,data/test_files/source_code/skipjack_government_cipher.c,0,0,0,1759595148.820229,
smart_card_security,ollama,codellama:7b,source_code,False,False,0.0,0,25.49314785003662,False,Failed to parse JSON response,data/test_files/source_code/smart_card_security.c,0,0,0,1759595174.3140302,
tiger_hash_function,ollama,codellama:7b,source_code,False,False,0.0,0,17.668788194656372,False,Failed to parse JSON response,data/test_files/source_code/tiger_hash_function.c,0,0,0,1759595191.983516,
twofish_advanced_encryption,ollama,codellama:7b,source_code,False,True,0.5,1,30.24341893196106,True,Detected vulnerability in RC4 algorithm due to keystream generation using RC4-like algorithm.,data/test_files/source_code/twofish_advanced_encryption.c,0,0,0,1759595222.229484,
whirlpool_hash_digest,ollama,codellama:7b,source_code,False,False,0.0,0,13.355499982833862,False,Failed to parse JSON response,data/test_files/source_code/whirlpool_hash_digest.c,0,0,0,1759595235.5854132,
wireless_network_encryption,ollama,codellama:7b,source_code,False,False,0.0,0,25.710169315338135,False,Failed to parse JSON response,data/test_files/source_code/wireless_network_encryption.c,0,0,0,1759595261.296073,
adaptive_multi_tenant_crypto_orchestrator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,21.224977254867554,False,Failed to parse JSON response,data/test_files/assembly_binary/adaptive_multi_tenant_crypto_orchestrator.s,0,0,0,1759595282.521763,
advanced_block_standard_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,45.16364097595215,False,Failed to parse JSON response,data/test_files/assembly_binary/advanced_block_standard_operations.s,0,0,0,1759595327.686006,
aes_key_expansion_module,ollama,codellama:7b,assembly_binary,False,False,0.0,0,24.72185492515564,False,Failed to parse JSON response,data/test_files/assembly_binary/aes_key_expansion_module.s,0,0,0,1759595352.408192,
aria_encryption_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,23.461090803146362,False,Failed to parse JSON response,data/test_files/assembly_binary/aria_encryption_engine.s,0,0,0,1759595375.869787,
automotive_ecu_cryptographic_unit,,,,False,False,0,0,60.008504152297974,False,,,0,0,0,0,"Ollama API Error for codellama:7b: HTTPConnectionPool(host='localhost', port=11434): Read timed out. (read timeout=60)"
banking_transaction_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,31.0961651802063,False,Failed to parse JSON response,data/test_files/assembly_binary/banking_transaction_processor.s,0,0,0,1759595466.975013,
biometric_authentication_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,58.38877487182617,False,Failed to parse JSON response,data/test_files/assembly_binary/biometric_authentication_engine.s,0,0,0,1759595525.364276,
blake2b_hash_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,26.37468385696411,False,Failed to parse JSON response,data/test_files/assembly_binary/blake2b_hash_engine.s,0,0,0,1759595551.739391,
block_cipher_operations,,,,False,False,0,0,60.00898194313049,False,,,0,0,0,0,"Ollama API Error for codellama:7b: HTTPConnectionPool(host='localhost', port=11434): Read timed out. (read timeout=60)"
blockchain_consensus_validator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,14.234084129333496,False,Failed to parse JSON response,data/test_files/assembly_binary/blockchain_consensus_validator.s,0,0,0,1759595625.9828632,
chacha20_stream_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,24.18102502822876,False,Failed to parse JSON response,data/test_files/assembly_binary/chacha20_stream_processor.s,0,0,0,1759595650.1642141,
cloud_storage_encryption_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,30.58191418647766,False,Failed to parse JSON response,data/test_files/assembly_binary/cloud_storage_encryption_processor.s,0,0,0,1759595680.746515,
crypto_trading_platform_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,13.056549787521362,False,Failed to parse JSON response,data/test_files/assembly_binary/crypto_trading_platform_engine.s,0,0,0,1759595693.803435,
cryptographic_wallet_manager,ollama,codellama:7b,assembly_binary,False,False,0.0,0,13.750977039337158,False,Failed to parse JSON response,data/test_files/assembly_binary/cryptographic_wallet_manager.s,0,0,0,1759595707.5547159,
diffie_hellman_key_exchange,ollama,codellama:7b,assembly_binary,False,False,0.0,0,27.71645188331604,False,Failed to parse JSON response,data/test_files/assembly_binary/diffie_hellman_key_exchange.s,0,0,0,1759595735.2715561,
digital_signature_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,29.59444522857666,False,Failed to parse JSON response,data/test_files/assembly_binary/digital_signature_processor.s,0,0,0,1759595764.866285,
distributed_blockchain_consensus_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,15.878188848495483,False,Failed to parse JSON response,data/test_files/assembly_binary/distributed_blockchain_consensus_engine.s,0,0,0,1759595780.744879,
dsa_signature_verification,ollama,codellama:7b,assembly_binary,False,False,0.0,0,26.1197988986969,False,Failed to parse JSON response,data/test_files/assembly_binary/dsa_signature_verification.s,0,0,0,1759595806.8651001,
elliptic_curve_point_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,19.028331995010376,False,Failed to parse JSON response,data/test_files/assembly_binary/elliptic_curve_point_operations.s,0,0,0,1759595825.8938198,
elliptic_curve_scalar_multiplication,,,,False,False,0,0,60.00847792625427,False,,,0,0,0,0,"Ollama API Error for codellama:7b: HTTPConnectionPool(host='localhost', port=11434): Read timed out. (read timeout=60)"
elliptic_mathematical_operations,,,,False,False,0,0,60.00734996795654,False,,,0,0,0,0,"Ollama API Error for codellama:7b: HTTPConnectionPool(host='localhost', port=11434): Read timed out. (read timeout=60)"
ellipticsignature_securehashalgo1_operations,,,,False,False,0,0,60.00738286972046,False,,,0,0,0,0,"Ollama API Error for codellama:7b: HTTPConnectionPool(host='localhost', port=11434): Read timed out. (read timeout=60)"
embedded_authentication_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,34.428027868270874,False,Failed to parse JSON response,data/test_files/assembly_binary/embedded_authentication_processor.s,0,0,0,1759596040.346038,
embedded_iot_security_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,12.463916063308716,False,Failed to parse JSON response,data/test_files/assembly_binary/embedded_iot_security_processor.s,0,0,0,1759596052.810291,
enterprise_data_protection_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,56.07562804222107,False,Failed to parse JSON response,data/test_files/assembly_binary/enterprise_data_protection_engine.s,0,0,0,1759596108.8869472,
feistel_network_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,14.27618408203125,False,Failed to parse JSON response,data/test_files/assembly_binary/feistel_network_operations.s,0,0,0,1759596123.1634078,
financial_cryptographic_accelerator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,28.881166219711304,False,Failed to parse JSON response,data/test_files/assembly_binary/financial_cryptographic_accelerator.s,0,0,0,1759596152.044915,
government_classified_system_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,28.80082106590271,False,Failed to parse JSON response,data/test_files/assembly_binary/government_classified_system_processor.s,0,0,0,1759596180.846219,
hash_digest_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,15.738521099090576,False,Failed to parse JSON response,data/test_files/assembly_binary/hash_digest_operations.s,0,0,0,1759596196.585145,
hight_lightweight_cipher,ollama,codellama:7b,assembly_binary,False,False,0.0,0,16.86169171333313,False,Failed to parse JSON response,data/test_files/assembly_binary/hight_lightweight_cipher.s,0,0,0,1759596213.44727,
hybrid_banking_security_system,ollama,codellama:7b,assembly_binary,False,False,0.0,0,13.609915733337402,False,Failed to parse JSON response,data/test_files/assembly_binary/hybrid_banking_security_system.s,0,0,0,1759596227.057703,
industrial_control_security,ollama,codellama:7b,assembly_binary,False,False,0.0,0,52.17094898223877,False,Failed to parse JSON response,data/test_files/assembly_binary/industrial_control_security.s,0,0,0,1759596279.2295449,
industrial_security_coprocessor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,29.120760202407837,False,Failed to parse JSON response,data/test_files/assembly_binary/industrial_security_coprocessor.s,0,0,0,1759596308.350699,
kcdsa_signature_generator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,22.9389431476593,False,Failed to parse JSON response,data/test_files/assembly_binary/kcdsa_signature_generator.s,0,0,0,1759596331.2900748,
keyexchange_protocol_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,46.11223602294922,False,Failed to parse JSON response,data/test_files/assembly_binary/keyexchange_protocol_operations.s,0,0,0,1759596377.402833,
korean_blockcipher_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,17.60651707649231,False,Failed to parse JSON response,data/test_files/assembly_binary/korean_blockcipher_operations.s,0,0,0,1759596395.0097349,
lea_block_cipher_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,28.416992902755737,False,Failed to parse JSON response,data/test_files/assembly_binary/lea_block_cipher_engine.s,0,0,0,1759596423.427305,
legacy_hash_computation,ollama,codellama:7b,assembly_binary,False,False,0.0,0,52.5340518951416,False,Failed to parse JSON response,data/test_files/assembly_binary/legacy_hash_computation.s,0,0,0,1759596475.961898,
legacy_pki_certificate_processor,,,,False,False,0,0,60.0094678401947,False,,,0,0,0,0,"Ollama API Error for codellama:7b: HTTPConnectionPool(host='localhost', port=11434): Read timed out. (read timeout=60)"
md5_sha1_hash_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,24.36033034324646,False,Failed to parse JSON response,data/test_files/assembly_binary/md5_sha1_hash_processor.s,0,0,0,1759596560.332295,
medical_device_security_controller,ollama,codellama:7b,assembly_binary,False,False,0.0,0,28.912731885910034,False,Failed to parse JSON response,data/test_files/assembly_binary/medical_device_security_controller.s,0,0,0,1759596589.2453918,
message_digest_128bit_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,38.20412611961365,False,Failed to parse JSON response,data/test_files/assembly_binary/message_digest_128bit_operations.s,0,0,0,1759596627.449963,
mobile_cipher_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,33.2667932510376,False,Failed to parse JSON response,data/test_files/assembly_binary/mobile_cipher_engine.s,0,0,0,1759596660.71728,
mobile_payment_security_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,55.68363308906555,False,Failed to parse JSON response,data/test_files/assembly_binary/mobile_payment_security_engine.s,0,0,0,1759596716.401598,
network_security_gateway,ollama,codellama:7b,assembly_binary,False,False,0.0,0,29.351129055023193,False,Failed to parse JSON response,data/test_files/assembly_binary/network_security_gateway.s,0,0,0,1759596745.75316,
neural_network_inference_accelerator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,26.93445110321045,False,Failed to parse JSON response,data/test_files/assembly_binary/neural_network_inference_accelerator.s,0,0,0,1759596772.688035,
ntru_polynomial_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,23.927250862121582,False,Failed to parse JSON response,data/test_files/assembly_binary/ntru_polynomial_processor.s,0,0,0,1759596796.615662,
obfuscated_crypto_library_dispatcher,ollama,codellama:7b,assembly_binary,False,False,0.0,0,17.961636781692505,False,Failed to parse JSON response,data/test_files/assembly_binary/obfuscated_crypto_library_dispatcher.s,0,0,0,1759596814.577867,
openssl_des_enc,ollama,codellama:7b,assembly_binary,False,False,0.0,0,53.61219310760498,False,Failed to parse JSON response,data/test_files/assembly_binary/openssl_des_enc.asm,0,0,0,1759596868.191085,
openssl_des_enc,ollama,codellama:7b,assembly_binary,False,False,0.0,0,22.903331756591797,False,Failed to parse JSON response,data/test_files/assembly_binary/openssl_des_enc.bin,0,0,0,1759596891.0966132,
poly1305_authenticator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,23.5880069732666,False,Failed to parse JSON response,data/test_files/assembly_binary/poly1305_authenticator.s,0,0,0,1759596914.68493,
polymorphic_malware_crypto_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,15.671972036361694,False,Failed to parse JSON response,data/test_files/assembly_binary/polymorphic_malware_crypto_engine.s,0,0,0,1759596930.357287,
polynomial_field_arithmetic_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,14.490867853164673,False,Failed to parse JSON response,data/test_files/assembly_binary/polynomial_field_arithmetic_engine.s,0,0,0,1759596944.8485,
postquantum_multimodal_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,33.779444217681885,False,Failed to parse JSON response,data/test_files/assembly_binary/postquantum_multimodal_operations.s,0,0,0,1759596978.628343,
publickey_encryption_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,20.30097270011902,False,Failed to parse JSON response,data/test_files/assembly_binary/publickey_encryption_operations.s,0,0,0,1759596998.929814,
publickey_modular_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,15.415153741836548,False,Failed to parse JSON response,data/test_files/assembly_binary/publickey_modular_operations.s,0,0,0,1759597014.345388,
publickeyalgo_messagedigest5_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,15.136787176132202,False,Failed to parse JSON response,data/test_files/assembly_binary/publickeyalgo_messagedigest5_operations.s,0,0,0,1759597029.4825711,
quantum_communication_relay,ollama,codellama:7b,assembly_binary,False,False,0.0,0,59.004297971725464,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_communication_relay.s,0,0,0,1759597088.487825,
quantum_cryptanalysis_simulation,ollama,codellama:7b,assembly_binary,False,False,0.0,0,22.717629194259644,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_cryptanalysis_simulation.s,0,0,0,1759597111.205847,
quantum_migration_bridge_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,29.98930597305298,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_migration_bridge_processor.s,0,0,0,1759597141.1955142,
quantum_resistant_lattice_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,51.5118670463562,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_resistant_lattice_operations.s,0,0,0,1759597192.707764,
quantum_resistant_migration_bridge,ollama,codellama:7b,assembly_binary,False,False,0.0,0,21.073618173599243,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_resistant_migration_bridge.s,0,0,0,1759597213.781845,
quantum_safe_communicator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,29.36262607574463,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_safe_communicator.s,0,0,0,1759597243.1448529,
rsa_key_generation_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,16.553078651428223,False,Failed to parse JSON response,data/test_files/assembly_binary/rsa_key_generation_engine.s,0,0,0,1759597259.698275,
salsa20_stream_cipher,ollama,codellama:7b,assembly_binary,False,False,0.0,0,18.16660714149475,False,Failed to parse JSON response,data/test_files/assembly_binary/salsa20_stream_cipher.s,0,0,0,1759597277.86521,
satellite_communication_security,ollama,codellama:7b,assembly_binary,False,False,0.0,0,34.702385902404785,False,Failed to parse JSON response,data/test_files/assembly_binary/satellite_communication_security.s,0,0,0,1759597312.567932,
secure_boot_verification_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,44.129732847213745,False,Failed to parse JSON response,data/test_files/assembly_binary/secure_boot_verification_processor.s,0,0,0,1759597356.69798,
secure_communication_protocol,ollama,codellama:7b,assembly_binary,False,False,0.0,0,52.824214935302734,False,Failed to parse JSON response,data/test_files/assembly_binary/secure_communication_protocol.s,0,0,0,1759597409.522735,
secure_hash_256bit_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,18.995126962661743,False,Failed to parse JSON response,data/test_files/assembly_binary/secure_hash_256bit_operations.s,0,0,0,1759597428.518188,
secure_matrix_transformation_unit,ollama,codellama:7b,assembly_binary,False,False,0.0,0,13.580114126205444,False,Failed to parse JSON response,data/test_files/assembly_binary/secure_matrix_transformation_unit.s,0,0,0,1759597442.098614,
siphash_prf_function,ollama,codellama:7b,assembly_binary,False,False,0.0,0,33.46161699295044,False,Failed to parse JSON response,data/test_files/assembly_binary/siphash_prf_function.s,0,0,0,1759597475.5607271,
smart_card_authenticator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,29.41320300102234,False,Failed to parse JSON response,data/test_files/assembly_binary/smart_card_authenticator.s,0,0,0,1759597504.974435,
smart_card_security_module,ollama,codellama:7b,assembly_binary,False,False,0.0,0,29.378180027008057,False,Failed to parse JSON response,data/test_files/assembly_binary/smart_card_security_module.s,0,0,0,1759597534.3530219,
sphincs_signature_scheme,ollama,codellama:7b,assembly_binary,False,False,0.0,0,16.636409044265747,False,Failed to parse JSON response,data/test_files/assembly_binary/sphincs_signature_scheme.s,0,0,0,1759597550.989763,
steganographic_crypto_covert_channel,ollama,codellama:7b,assembly_binary,False,False,0.0,0,16.71161985397339,False,Failed to parse JSON response,data/test_files/assembly_binary/steganographic_crypto_covert_channel.s,0,0,0,1759597567.701997,
stream_cipher_generator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,29.503910064697266,False,Failed to parse JSON response,data/test_files/assembly_binary/stream_cipher_generator.s,0,0,0,1759597597.206392,
stream_generator_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,27.291272163391113,False,Failed to parse JSON response,data/test_files/assembly_binary/stream_generator_operations.s,0,0,0,1759597624.498113,
stream_keygeneration_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,37.91215705871582,False,Failed to parse JSON response,data/test_files/assembly_binary/stream_keygeneration_operations.s,0,0,0,1759597662.410666,
triple_des_encryption_module,ollama,codellama:7b,assembly_binary,False,False,0.0,0,33.02115297317505,False,Failed to parse JSON response,data/test_files/assembly_binary/triple_des_encryption_module.s,0,0,0,1759597695.432249,
vpn_tunnel_encryption_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,34.43813514709473,False,Failed to parse JSON response,data/test_files/assembly_binary/vpn_tunnel_encryption_engine.s,0,0,0,1759597729.870899,
x25519_key_agreement,ollama,codellama:7b,assembly_binary,False,False,0.0,0,20.525609970092773,False,Failed to parse JSON response,data/test_files/assembly_binary/x25519_key_agreement.s,0,0,0,1759597750.3969011,
apache_legacy_ssl,ollama,codellama:7b,logs_config,False,False,0.0,0,28.493585109710693,False,Failed to parse JSON response,data/test_files/logs_config/apache_legacy_ssl.conf,0,0,0,1759597778.8913221,
automotive_v2x_system,ollama,codellama:7b,logs_config,False,False,0.0,0,28.117436170578003,False,Failed to parse JSON response,data/test_files/logs_config/automotive_v2x_system.yaml,0,0,0,1759597807.009108,
blockchain_node_security,ollama,codellama:7b,logs_config,False,False,0.0,0,17.148326873779297,False,Failed to parse JSON response,data/test_files/logs_config/blockchain_node_security.conf,0,0,0,1759597824.158776,
cloud_hsm_operations,ollama,codellama:7b,logs_config,False,False,0.0,0,36.077285051345825,False,Failed to parse JSON response,data/test_files/logs_config/cloud_hsm_operations.log,0,0,0,1759597860.2365901,
cloud_storage_encryption,ollama,codellama:7b,logs_config,False,False,0.0,0,21.024356842041016,False,Failed to parse JSON response,data/test_files/logs_config/cloud_storage_encryption.conf,0,0,0,1759597881.2613912,
cryptocurrency_exchange,ollama,codellama:7b,logs_config,False,False,0.0,0,23.19408106803894,False,Failed to parse JSON response,data/test_files/logs_config/cryptocurrency_exchange.log,0,0,0,1759597904.456102,
cryptographic_operations_detailed,ollama,codellama:7b,logs_config,False,False,0.0,0,22.898536920547485,False,Failed to parse JSON response,data/test_files/logs_config/cryptographic_operations_detailed.log,0,0,0,1759597927.355051,
database_encryption_setup,ollama,codellama:7b,logs_config,False,False,0.0,0,22.215933799743652,False,Failed to parse JSON response,data/test_files/logs_config/database_encryption_setup.log,0,0,0,1759597949.571411,
email_server_crypto,,,,False,False,0,0,60.01138091087341,False,,,0,0,0,0,"Ollama API Error for codellama:7b: HTTPConnectionPool(host='localhost', port=11434): Read timed out. (read timeout=60)"
enterprise_banking_pki_configuration,ollama,codellama:7b,logs_config,False,False,0.0,0,20.11645221710205,False,Failed to parse JSON response,data/test_files/logs_config/enterprise_banking_pki_configuration.conf,0,0,0,1759598029.7022998,
financial_payment_gateway,ollama,codellama:7b,logs_config,False,False,0.0,0,16.890208959579468,False,Failed to parse JSON response,data/test_files/logs_config/financial_payment_gateway.conf,0,0,0,1759598046.593005,
government_document_system,ollama,codellama:7b,logs_config,False,False,0.0,0,51.546143770217896,False,Failed to parse JSON response,data/test_files/logs_config/government_document_system.log,0,0,0,1759598098.1399019,
healthcare_ehr_system,ollama,codellama:7b,logs_config,True,True,0.75,5,32.178850173950195,True,"DETECTED: RSA (Evidence: import RSA from Crypto.PublicKey, line 5), DETECTED: ECDSA (Evidence: elliptic_curve cipher suite configurations and ECC parameter settings), DETECTED: ECDSA (Evidence: log entries indicating quantum-vulnerable cryptographic operations)",data/test_files/logs_config/healthcare_ehr_system.yaml,0,0,0,1759598130.320807,
industrial_control_system,ollama,codellama:7b,logs_config,False,False,0.0,0,24.733187913894653,False,Failed to parse JSON response,data/test_files/logs_config/industrial_control_system.log,0,0,0,1759598155.054402,
iot_device_firmware_config,ollama,codellama:7b,logs_config,False,False,0.0,0,27.687278032302856,False,Failed to parse JSON response,data/test_files/logs_config/iot_device_firmware_config.yaml,0,0,0,1759598182.744351,
korean_crypto_library_config,ollama,codellama:7b,logs_config,False,False,0.0,0,31.895673990249634,False,Failed to parse JSON response,data/test_files/logs_config/korean_crypto_library_config.ini,0,0,0,1759598214.6414368,
military_secure_comms,,,,False,False,0,0,60.009814977645874,False,,,0,0,0,0,"Ollama API Error for codellama:7b: HTTPConnectionPool(host='localhost', port=11434): Read timed out. (read timeout=60)"
mobile_app_security_audit,ollama,codellama:7b,logs_config,False,False,0.0,0,25.519428253173828,False,Failed to parse JSON response,data/test_files/logs_config/mobile_app_security_audit.log,0,0,0,1759598300.171345,
nginx_mixed_security_gateway,ollama,codellama:7b,logs_config,True,True,0.75,3,37.605628967285156,True,"DETECTED: RSA (Evidence: import RSA from Crypto.PublicKey, line 5), DETECTED: AES (Evidence: Cipher.AES.new() call, line 23)",data/test_files/logs_config/nginx_mixed_security_gateway.conf,0,0,0,1759598337.7803059,
openssh,ollama,codellama:7b,logs_config,False,False,0.0,0,50.04537916183472,False,Failed to parse JSON response,data/test_files/logs_config/openssh.log,0,0,0,1759598387.826828,
quantum_safe_migration_plan,ollama,codellama:7b,logs_config,False,False,0.0,0,36.776652574539185,False,Failed to parse JSON response,data/test_files/logs_config/quantum_safe_migration_plan.yaml,0,0,0,1759598424.604806,
satellite_ground_station,ollama,codellama:7b,logs_config,False,False,0.0,0,53.23044466972351,False,Failed to parse JSON response,data/test_files/logs_config/satellite_ground_station.log,0,0,0,1759598477.83833,
security_scanner_findings,,,,False,False,0,0,60.00891900062561,False,,,0,0,0,0,"Ollama API Error for codellama:7b: HTTPConnectionPool(host='localhost', port=11434): Read timed out. (read timeout=60)"
smart_city_infrastructure,ollama,codellama:7b,logs_config,False,False,0.0,0,24.15055203437805,False,Failed to parse JSON response,data/test_files/logs_config/smart_city_infrastructure.log,0,0,0,1759598561.9982688,
ssh_server_hardened,ollama,codellama:7b,logs_config,False,False,0.0,0,17.43891191482544,False,Failed to parse JSON response,data/test_files/logs_config/ssh_server_hardened.conf,0,0,0,1759598579.439088,
ssl_legacy_banking_configuration,ollama,codellama:7b,logs_config,False,False,0.0,0,26.681384086608887,False,Failed to parse JSON response,data/test_files/logs_config/ssl_legacy_banking_configuration.conf,0,0,0,1759598606.1220741,
telecom_5g_network,ollama,codellama:7b,logs_config,False,False,0.0,0,15.282198905944824,False,Failed to parse JSON response,data/test_files/logs_config/telecom_5g_network.conf,0,0,0,1759598621.4047859,
tls_cipher_negotiation_warnings,ollama,codellama:7b,logs_config,False,False,0.0,0,25.279340028762817,False,Failed to parse JSON response,data/test_files/logs_config/tls_cipher_negotiation_warnings.log,0,0,0,1759598646.684512,
vpn_server_runtime,ollama,codellama:7b,logs_config,False,False,0.0,0,17.886693000793457,False,Failed to parse JSON response,data/test_files/logs_config/vpn_server_runtime.log,0,0,0,1759598664.571477,
