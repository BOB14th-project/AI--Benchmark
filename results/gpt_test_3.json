{
  "benchmark_info": {
    "timestamp": "2025-10-30T14:37:59.661112",
    "test_models": [
      "gpt-4.1"
    ],
    "pqc_base_url": "http://localhost:8000",
    "ollama_base_url": "http://localhost:11434",
    "total_tests": 412
  },
  "results": [
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "AdvancedComputationalFramework",
      "file_name": "AdvancedComputationalFramework.rb",
      "response_time": 5.003225803375244,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 2,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "The code imports the 'openssl' library, which provides access to non-quantum-resistant algorithms such as RSA, DSA, ECDSA, and ECDH. Although the specific algorithm usage is not shown in the provided snippet, the presence of 'openssl' in a security context strongly indicates potential use of these vulnerable algorithms.",
        "detected_algorithms": [
          "RSA",
          "DSA",
          "ECDSA",
          "ECDH"
        ],
        "recommendations": "Audit all cryptographic operations using OpenSSL and replace RSA, DSA, ECDSA, and ECDH with post-quantum cryptography algorithms such as CRYSTALS-Kyber or CRYSTALS-Dilithium where appropriate.",
        "evidence": "require 'openssl' line in the code",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "AdvancedComputationalFramework",
      "file_name": "AdvancedComputationalFramework.rb",
      "response_time": 5.224159002304077,
      "json_valid": true,
      "true_positives": 4,
      "false_positives": 2,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "DETECTED: RSA (Evidence: require 'openssl', line 5)",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "DETECTED: ECC/ECDSA/ECDH (Evidence: require 'openssl', line 5)",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "DETECTED: DSA/DH/ElGamal (Evidence: require 'openssl', line 5)",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "DETECTED: AES/3DES/DES/RC4 (Evidence: require 'openssl', line 5)",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: MD5/SHA-1/SHA-256 (Evidence: require 'digest', line 6)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: SecureRandom (Evidence: require 'securerandom', line 7)",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.85,
        "summary": "Detected usage of OpenSSL (potential RSA, ECC, DSA, DH, ElGamal, AES, 3DES, DES, RC4), Digest (MD5, SHA-1, SHA-256), and SecureRandom. No explicit evidence of Korean domestic algorithms, vulnerable padding schemes, hybrid systems, or legacy/deprecated cipher suites."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "AdvancedCryptographicOrchestrator",
      "file_name": "AdvancedCryptographicOrchestrator.java",
      "response_time": 3.9756460189819336,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "The code imports java.security and javax.crypto, and references PKCS1Padding, which is commonly associated with RSA encryption. These indicate potential use of RSA or other non-quantum-resistant algorithms, even if the actual cryptographic operations are abstracted.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "Replace RSA and any non-quantum-resistant algorithms with post-quantum cryptography such as CRYSTALS-Kyber or other NIST-approved PQC algorithms.",
        "evidence": "import java.security.*, import javax.crypto.*, and use of PKCS1Padding constant.",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "AdvancedCryptographicOrchestrator",
      "file_name": "AdvancedCryptographicOrchestrator.java",
      "response_time": 7.240872144699097,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "DETECTED: Elliptic Curve Cryptography (Evidence: KeyPairGenerator.getInstance(\"EllipticCurve\") call in performGeometricTransform method)",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "DETECTED: PKCS#1 v1.5 Padding (Evidence: use of \"PKCS1Padding\" in DATA_TRANSFORMATION_PROTOCOL constant and Cipher.getInstance(\"ModularCipher/ECB/PKCS1Padding\") call in performModularArithmetic method)",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "DETECTED: Obfuscated or indirect implementations (Evidence: performModularArithmetic uses KeyPairGenerator.getInstance(\"ModularArithmetic\") and Cipher.getInstance(\"ModularCipher/ECB/PKCS1Padding\"), which are non-standard algorithm names, suggesting possible obfuscation of quantum-vulnerable algorithms)",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.85,
        "summary": "Detected explicit use of Elliptic Curve Cryptography (ECC) and PKCS#1 v1.5 padding, both quantum-vulnerable. Evidence of obfuscated or indirect implementation of potentially quantum-vulnerable algorithms via non-standard algorithm names in cryptographic API calls."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "AdvancedMathematicalFramework",
      "file_name": "AdvancedMathematicalFramework.rs",
      "response_time": 3.6864588260650635,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected in the provided code. No related cryptographic library imports or function calls found.",
        "detected_algorithms": [],
        "recommendations": "No action required. Ensure future cryptographic implementations use post-quantum algorithms.",
        "evidence": "No evidence of non-quantum-resistant cryptography in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "AdvancedMathematicalFramework",
      "file_name": "AdvancedMathematicalFramework.rs",
      "response_time": 3.6980550289154053,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "AutomotiveSecurityUnit",
      "file_name": "AutomotiveSecurityUnit.cpp",
      "response_time": 2.827281951904297,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a custom Feistel cipher and does not import or use standard non-quantum-resistant cryptographic algorithms.",
        "detected_algorithms": [],
        "recommendations": "No immediate action required regarding quantum vulnerability. However, custom cryptography should be avoided in favor of well-reviewed, standardized, and quantum-resistant algorithms.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "AutomotiveSecurityUnit",
      "file_name": "AutomotiveSecurityUnit.cpp",
      "response_time": 3.2603161334991455,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "BankingSecurityModule",
      "file_name": "BankingSecurityModule.java",
      "response_time": 3.0619099140167236,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a custom block cipher and does not import or utilize any standard non-quantum-resistant public-key cryptography algorithms.",
        "detected_algorithms": [],
        "recommendations": "No immediate action required regarding quantum vulnerability. Ensure any future cryptographic additions use post-quantum algorithms.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 0.99,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "BankingSecurityModule",
      "file_name": "BankingSecurityModule.java",
      "response_time": 3.0420408248901367,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations was detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "BlockchainCryptographyEngine",
      "file_name": "BlockchainCryptographyEngine.java",
      "response_time": 6.251022815704346,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "The code implements elliptic curve cryptography (ECC) for key generation and signing, specifically using parameters matching the secp256k1 curve, which is used in ECDSA. ECDSA is not quantum-resistant and is vulnerable to Shor's algorithm.",
        "detected_algorithms": [
          "ECDSA",
          "Elliptic Curve Cryptography"
        ],
        "recommendations": "Replace ECDSA with a post-quantum digital signature scheme such as CRYSTALS-Dilithium or Falcon. For key exchange, use post-quantum algorithms like CRYSTALS-Kyber.",
        "evidence": "Custom ECPoint class, curve parameters (CURVE_P, CURVE_A, CURVE_B, CURVE_N), scalar multiplication for public key generation (private_key * G), and signature key pair generation all indicate ECDSA usage.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "BlockchainCryptographyEngine",
      "file_name": "BlockchainCryptographyEngine.java",
      "response_time": 7.410994052886963,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "DETECTED: Elliptic Curve Cryptography (Evidence: Custom EC scalar multiplication and point operations in scalarMultiply, pointAdd, pointDouble methods; curve parameters for secp256k1 explicitly defined)",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: SecureRandom (Evidence: java.security.SecureRandom used for key generation in generateKeyPair method)",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Elliptic Curve Cryptography (ECC) is explicitly implemented using secp256k1 parameters, which is quantum-vulnerable. SecureRandom is used for key generation, but no evidence of other quantum-vulnerable or deprecated algorithms is present in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "CorporateSecurityOrchestrator",
      "file_name": "CorporateSecurityOrchestrator.py",
      "response_time": 5.919501066207886,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 2,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Detected imports from cryptography.hazmat.primitives.asymmetric.ec and digital_signature, which provide ECDSA and other non-quantum-resistant algorithms. The presence of asymmetric_cipher (likely RSA/DSA) further increases risk.",
        "detected_algorithms": [
          "ECDSA",
          "ECDH",
          "RSA",
          "DSA"
        ],
        "recommendations": "Replace all ECDSA, ECDH, RSA, and DSA usages with post-quantum cryptography algorithms such as CRYSTALS-Kyber or Dilithium. Avoid using elliptic curve and modular arithmetic-based primitives.",
        "evidence": "from cryptography.hazmat.primitives.asymmetric import asymmetric_cipher as modular_arithmetic, ec, digital_signature, padding",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "CorporateSecurityOrchestrator",
      "file_name": "CorporateSecurityOrchestrator.py",
      "response_time": 4.431905031204224,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "DETECTED: ECC (Evidence: import ec from cryptography.hazmat.primitives.asymmetric, line 18)",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: SHA-256 (Evidence: import hashlib, line 10)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.85,
        "summary": "Detected explicit usage of ECC (via cryptography.hazmat.primitives.asymmetric.ec) and SHA-256 (via hashlib). No evidence of RSA, DSA, DH, ElGamal, Korean domestic algorithms, or legacy/deprecated cipher suites in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "CorporateVPNManager",
      "file_name": "CorporateVPNManager.java",
      "response_time": 3.6285529136657715,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a custom Feistel-based cipher and does not import or use standard non-quantum-resistant cryptographic algorithms.",
        "detected_algorithms": [],
        "recommendations": "Consider using post-quantum cryptography algorithms such as CRYSTALS-Kyber or CRYSTALS-Dilithium for key exchange and signatures if cryptographic primitives are required. Avoid custom cryptographic implementations in production.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "CorporateVPNManager",
      "file_name": "CorporateVPNManager.java",
      "response_time": 3.7051501274108887,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided code segment."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "DigitalCertificateValidator",
      "file_name": "DigitalCertificateValidator.java",
      "response_time": 3.5945358276367188,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Detected manual implementation of RSA key generation using modular arithmetic (BigInteger p, q, productN, exponentE, exponentD). RSA is not quantum-resistant.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "Replace RSA with a post-quantum cryptography algorithm such as CRYSTALS-Kyber or another NIST-approved PQC scheme.",
        "evidence": "Class ModularKeyData generates RSA key pair using BigInteger p, q, productN, exponentE, exponentD.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "DigitalCertificateValidator",
      "file_name": "DigitalCertificateValidator.java",
      "response_time": 5.160239934921265,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "DETECTED: RSA (Evidence: ModularKeyData class with productN, exponentE, exponentD, and generateKeyPair() using modular arithmetic for key generation and signature, lines in ModularKeyData and generateCertificateSignature/verifyCertificateSignature methods)",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "DETECTED: RSA implementation-specific vulnerability (Evidence: ModularKeyData.generateKeyPair() uses small, hardcoded primes 61 and 53 for p and q, which is insecure and easily factorable, lines in generateKeyPair())"
        },
        "confidence_score": 0.98,
        "summary": "RSA is explicitly implemented for digital signatures and key management, with a critical implementation vulnerability due to the use of small, hardcoded primes for key generation. No evidence of ECC, DSA, ElGamal, Korean domestic algorithms, symmetric ciphers, weak hash functions, vulnerable padding, insecure RNG/KDF, or hybrid quantum-resistant systems."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "DistributedComputationEngine",
      "file_name": "DistributedComputationEngine.py",
      "response_time": 3.428644895553589,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. Only hash functions and mathematical processing present.",
        "detected_algorithms": [],
        "recommendations": "No action needed. If cryptographic signing or encryption is added, use post-quantum algorithms.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "DistributedComputationEngine",
      "file_name": "DistributedComputationEngine.py",
      "response_time": 5.06968092918396,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: SHA-256 (Evidence: hashlib import, line 4)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.7,
        "summary": "SHA-256 is detected via the 'hashlib' import (line 4). No explicit evidence of other quantum-vulnerable cryptographic algorithms or implementations is present in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "DistributedComputeManager",
      "file_name": "DistributedComputeManager.js",
      "response_time": 3.999556303024292,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "The code imports the 'crypto' module from Node.js, which provides access to non-quantum-resistant algorithms such as RSA, DSA, ECDSA, and ECDH. While the provided snippet does not show explicit usage of these algorithms, the presence of the 'crypto' module indicates a high likelihood of their use elsewhere in the file or project.",
        "detected_algorithms": [
          "RSA",
          "DSA",
          "ECDSA",
          "ECDH (potential)"
        ],
        "recommendations": "Audit all uses of the 'crypto' module. Replace RSA, DSA, ECDSA, and ECDH with post-quantum cryptography algorithms such as CRYSTALS-Kyber or Dilithium where possible.",
        "evidence": "const crypto = require('crypto');",
        "confidence_score": 0.8,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "DistributedComputeManager",
      "file_name": "DistributedComputeManager.js",
      "response_time": 4.98380184173584,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "EnterpriseDataSecurityFramework",
      "file_name": "EnterpriseDataSecurityFramework.c",
      "response_time": 3.7898988723754883,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Potential RSA usage detected due to presence of 2048-bit modulus and public exponent 65537, which are standard RSA parameters.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "Replace RSA with a post-quantum cryptography algorithm such as CRYSTALS-Kyber for key exchange and CRYSTALS-Dilithium for signatures.",
        "evidence": "LARGE_PRIME_MODULUS_BITS 2048 and SMALL_PRIME_EXPONENT 65537 constants, LargeIntegerContext struct with public_exp field.",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "EnterpriseDataSecurityFramework",
      "file_name": "EnterpriseDataSecurityFramework.c",
      "response_time": 3.1513071060180664,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 4,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "EnterpriseSecurityGateway",
      "file_name": "EnterpriseSecurityGateway.java",
      "response_time": 4.137488126754761,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Detected use of large integer modular exponentiation and prime generation for factorization-based security, which strongly indicates RSA usage. The use of 2048-bit key sizes and variable names such as modulus, exponentE, and exponentD further support this.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "Replace RSA with a post-quantum cryptography algorithm such as CRYSTALS-Kyber for encryption and CRYSTALS-Dilithium for signatures.",
        "evidence": "processLargeNumbers uses modular exponentiation with exponentE and modulus; generateKeyMaterial generates large primes for factorization-based security; LARGE_NUMBER_SIZE = 2048.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "EnterpriseSecurityGateway",
      "file_name": "EnterpriseSecurityGateway.java",
      "response_time": 6.179992914199829,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "DETECTED: RSA (Evidence: processLargeNumbers uses BigInteger.modPow(exponentE, modulus); generateKeyMaterial generates primes p, q and computes productN = p.multiply(q), exponentE = 65537, exponentD = exponentE.modInverse(phi))",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "DETECTED: ECC (Evidence: PolynomialProcessor class with fieldPrime, curveA, curveB, EllipticPoint, and performCurveOperations for scalar multiplication on curves)",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit RSA and ECC (elliptic curve cryptography) implementations using BigInteger arithmetic and curve operations. No evidence of other quantum-vulnerable or deprecated algorithms in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "HardwareSecurity",
      "file_name": "HardwareSecurity.java",
      "response_time": 3.582357883453369,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected in the provided code. The code only uses SecureRandom and a placeholder hash function.",
        "detected_algorithms": [],
        "recommendations": "No action needed regarding quantum-vulnerable algorithms. If cryptographic signing or key exchange is added, use post-quantum algorithms.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found.",
        "confidence_score": 0.99,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "HardwareSecurity",
      "file_name": "HardwareSecurity.java",
      "response_time": 4.72509503364563,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: SecureRandom (Evidence: java.security.SecureRandom import and usage in TPMSimulator constructor and initializeTPM)",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms detected. The only cryptographic element present is the use of java.security.SecureRandom for random number generation."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "IoTDeviceSecurityController",
      "file_name": "IoTDeviceSecurityController.go",
      "response_time": 3.130887031555176,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements custom lightweight ciphers and digest functions, but does not import or use standard non-quantum-resistant algorithms.",
        "detected_algorithms": [],
        "recommendations": "Continue to avoid standard non-quantum-resistant algorithms. For future-proofing, consider post-quantum cryptography for key exchange and signatures if interoperability is required.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "IoTDeviceSecurityController",
      "file_name": "IoTDeviceSecurityController.go",
      "response_time": 2.988115072250366,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "LegacyPKISystem",
      "file_name": "LegacyPKISystem.java",
      "response_time": 2.508078098297119,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Detected usage of DSA (Digital Signature Algorithm), which is not quantum-resistant and vulnerable to Shor's algorithm.",
        "detected_algorithms": [
          "DSA"
        ],
        "recommendations": "Replace DSA with a post-quantum digital signature scheme such as CRYSTALS-Dilithium or Falcon.",
        "evidence": "Class DSASignature implements DSA key generation and signing logic, including DSA parameter generation and key pair creation.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "LegacyPKISystem",
      "file_name": "LegacyPKISystem.java",
      "response_time": 8.084223985671997,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "DETECTED: DSA (Evidence: DSASignature class implements DSA parameter and key generation, signMessage() and verifySignature() methods)",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: SecureRandom (Evidence: new SecureRandom() used for key and parameter generation in DSASignature constructor and methods)",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "DETECTED: DSA 1024-bit key size (Evidence: DSA_KEY_SIZE = 1024, DSA_SUBGROUP_SIZE = 160, used in parameter generation in DSASignature)"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit implementation of DSA (discrete logarithm based, quantum-vulnerable) with 1024-bit keys and SecureRandom for key/parameter generation. No evidence of RSA, ECC, symmetric ciphers, weak hash functions, padding schemes, Korean domestic algorithms, or hybrid quantum-resistant algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "MathematicalTransformEngine",
      "file_name": "MathematicalTransformEngine.java",
      "response_time": 3.9157891273498535,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected in the provided code. No related imports or function calls found.",
        "detected_algorithms": [],
        "recommendations": "No action required. Ensure future cryptographic implementations use quantum-resistant algorithms.",
        "evidence": "No cryptographic algorithm imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "MathematicalTransformEngine",
      "file_name": "MathematicalTransformEngine.java",
      "response_time": 6.0403831005096436,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "DETECTED: AES (Evidence: import javax.crypto.Cipher, import javax.crypto.KeyGenerator, import javax.crypto.SecretKey, import javax.crypto.spec.SecretKeySpec)",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: SecureRandom (Evidence: java.security.SecureRandom, line in LargeNumberProcessor class)",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.7,
        "summary": "Detected usage of AES via javax.crypto imports, which is quantum-vulnerable at 128-bit key sizes. SecureRandom is used for randomness, which is not quantum-resistant. No explicit evidence of RSA, ECC, DSA, DH, ElGamal, Korean domestic algorithms, weak hash functions, or deprecated cipher suites."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "MediaStreamProtection",
      "file_name": "MediaStreamProtection.java",
      "response_time": 5.554758071899414,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements custom stream ciphers and does not import or use standard asymmetric cryptography libraries vulnerable to quantum attacks.",
        "detected_algorithms": [],
        "recommendations": "If asymmetric cryptography is required, use post-quantum algorithms such as CRYSTALS-Kyber or CRYSTALS-Dilithium. For symmetric ciphers, ensure the algorithm is secure and well-reviewed.",
        "evidence": "No import or usage of java.security.KeyPairGenerator, java.security.Signature, javax.crypto.KeyAgreement, or related asymmetric cryptography APIs. Only custom stream cipher logic is present.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "MediaStreamProtection",
      "file_name": "MediaStreamProtection.java",
      "response_time": 3.580061912536621,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "QuantumResistantMessaging",
      "file_name": "QuantumResistantMessaging.java",
      "response_time": 4.1163928508758545,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant cryptographic algorithms detected. The code implements a lattice-based key exchange, which is considered post-quantum secure.",
        "detected_algorithms": [],
        "recommendations": "Continue using lattice-based cryptography for quantum resistance. Ensure the implementation follows best practices and is reviewed for side-channel and implementation vulnerabilities.",
        "evidence": "No imports or usage of RSA, DSA, ECDSA, or ECDH detected. All cryptographic operations are lattice-based.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "QuantumResistantMessaging",
      "file_name": "QuantumResistantMessaging.java",
      "response_time": 3.0911428928375244,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "QuantumSafeTransitionManager",
      "file_name": "QuantumSafeTransitionManager.cpp",
      "response_time": 6.360406160354614,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Detected usage of legacy cryptographic algorithms vulnerable to quantum attacks, including RSA (modular arithmetic) and discrete logarithm-based schemes (likely DSA, ECDSA, or ECDH). The code references 2048-bit modulus size and curve parameter size, which are typical for RSA and elliptic curve cryptography, respectively.",
        "detected_algorithms": [
          "RSA",
          "DSA",
          "ECDSA",
          "ECDH"
        ],
        "recommendations": "Replace RSA, DSA, ECDSA, and ECDH with post-quantum cryptographic algorithms such as CRYSTALS-Kyber (for key exchange) and CRYSTALS-Dilithium (for signatures).",
        "evidence": "LEGACY_MODULUS_SIZE = 2048; CURVE_PARAMETER_SIZE = 256; algorithmPool[\"IFE\"] = std::make_unique<IntegerFactorizationEngine>(); algorithmPool[\"DLE\"] = std::make_unique<DiscreteLogarithmEngine>();",
        "confidence_score": 0.97,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "QuantumSafeTransitionManager",
      "file_name": "QuantumSafeTransitionManager.cpp",
      "response_time": 5.799479246139526,
      "json_valid": true,
      "true_positives": 3,
      "false_positives": 4,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "DETECTED: RSA (Evidence: #include <openssl/bn.h>, #include <openssl/evp.h>)",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "DETECTED: ECC (Evidence: #include <openssl/evp.h>)",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "DETECTED: DSA/DH (Evidence: #include <openssl/bn.h>, #include <openssl/evp.h>)",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "DETECTED: AES (Evidence: #include <openssl/evp.h>)",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: OpenSSL PRNG (Evidence: #include <openssl/rand.h>)",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "DETECTED: Hybrid system (Evidence: performHybridMigration(), executeHybridStrategy() functions)",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "DETECTED: OpenSSL legacy algorithms (Evidence: #include <openssl/bn.h>, #include <openssl/evp.h>, #include <openssl/rand.h>)",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.85,
        "summary": "Detected explicit usage of OpenSSL cryptographic primitives supporting RSA, ECC, DSA/DH, and AES, as well as OpenSSL's PRNG. Hybrid migration logic is present. No evidence of Korean domestic algorithms, weak hash functions, vulnerable padding, or implementation-specific vulnerabilities."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "SecureChatApplication",
      "file_name": "SecureChatApplication.java",
      "response_time": 5.88355016708374,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant cryptographic algorithms (RSA, DSA, ECDSA, ECDH) detected. The code appears to implement a stream cipher similar to ChaCha, which is a symmetric algorithm and not directly vulnerable to quantum attacks in the same way as public-key algorithms.",
        "detected_algorithms": [],
        "recommendations": "No immediate action required regarding quantum resistance for the cryptography in this code. For future-proofing, monitor developments in symmetric cipher key size recommendations.",
        "evidence": "No imports or usage of RSA, DSA, ECDSA, or ECDH found. Only symmetric stream cipher logic present.",
        "confidence_score": 0.99,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "SecureChatApplication",
      "file_name": "SecureChatApplication.java",
      "response_time": 4.372712850570679,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "SecureCloudStorage",
      "file_name": "SecureCloudStorage.java",
      "response_time": 3.717803955078125,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a custom symmetric block cipher and does not import or use non-quantum-resistant asymmetric algorithms.",
        "detected_algorithms": [],
        "recommendations": "No immediate action required regarding quantum vulnerability. For best practices, consider using well-vetted symmetric ciphers like AES and review for cryptographic soundness.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "SecureCloudStorage",
      "file_name": "SecureCloudStorage.java",
      "response_time": 3.0258748531341553,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: SecureRandom (Evidence: import java.security.SecureRandom, line 4)",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "No explicit evidence of quantum-vulnerable asymmetric or symmetric cryptographic algorithms detected. The code uses SecureRandom for randomness (detected via import), but no direct use of known quantum-vulnerable algorithms or weak hash functions is present in the provided snippet."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "SecureTransactionProcessor",
      "file_name": "SecureTransactionProcessor.go",
      "response_time": 4.301916837692261,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected in the provided code. No related cryptographic library imports or function calls found.",
        "detected_algorithms": [],
        "recommendations": "No action required. If cryptographic operations are added in the future, ensure to use post-quantum cryptography algorithms.",
        "evidence": "Imports include 'crypto/rand' and 'crypto/hash_256', but no quantum-vulnerable algorithms or operations are present in the code snippet.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "SecureTransactionProcessor",
      "file_name": "SecureTransactionProcessor.go",
      "response_time": 3.2502970695495605,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "StealthCryptographicLibrary",
      "file_name": "StealthCryptographicLibrary.py",
      "response_time": 3.681973934173584,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 2,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Obfuscated imports from cryptography.hazmat.primitives.asymmetric include asymmetric_cipher (likely RSA), ec (Elliptic Curve, i.e., ECDSA/ECDH), and digital_signature (likely DSA/ECDSA), all of which are not quantum-resistant.",
        "detected_algorithms": [
          "RSA",
          "ECDSA",
          "ECDH",
          "DSA"
        ],
        "recommendations": "Replace RSA, ECDSA, ECDH, and DSA with post-quantum cryptography algorithms such as CRYSTALS-Kyber (for encryption/key exchange) and CRYSTALS-Dilithium (for signatures).",
        "evidence": "from cryptography.hazmat.primitives.asymmetric import asymmetric_cipher as modular_arithmetic, ec as curve_operations, digital_signature as discrete_log",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "StealthCryptographicLibrary",
      "file_name": "StealthCryptographicLibrary.py",
      "response_time": 4.067239999771118,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "DETECTED: ECC (Evidence: import ec as curve_operations from cryptography.hazmat.primitives.asymmetric, line 11)",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "DETECTED: Discrete Logarithm (Evidence: import digital_signature as discrete_log from cryptography.hazmat.primitives.asymmetric, line 11)",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: SHA-1 (Evidence: import hashlib, line 1)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.7,
        "summary": "Detected explicit imports for elliptic curve cryptography (ECC) and discrete logarithm-based algorithms, as well as the hashlib library which includes SHA-1. No explicit evidence of RSA, symmetric ciphers, Korean domestic algorithms, or other quantum-vulnerable algorithms in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "TelecommunicationsSecurityHub",
      "file_name": "TelecommunicationsSecurityHub.java",
      "response_time": 4.047144174575806,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected in the provided code. Only custom stream cipher, block cipher, and message digest classes are referenced.",
        "detected_algorithms": [],
        "recommendations": "Ensure that any cryptographic primitives used are quantum-resistant. If asymmetric cryptography is added, prefer post-quantum algorithms such as CRYSTALS-Kyber or Dilithium.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "TelecommunicationsSecurityHub",
      "file_name": "TelecommunicationsSecurityHub.java",
      "response_time": 3.7110681533813477,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided code segment."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "a5_trivium_stream_ciphers",
      "file_name": "a5_trivium_stream_ciphers.py",
      "response_time": 2.657006025314331,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a custom stream cipher and does not import or use any standard cryptographic algorithms vulnerable to quantum attacks.",
        "detected_algorithms": [],
        "recommendations": "No quantum-vulnerable algorithms detected. If cryptographic security is required, use well-vetted, quantum-resistant algorithms such as CRYSTALS-Kyber or CRYSTALS-Dilithium.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "a5_trivium_stream_ciphers",
      "file_name": "a5_trivium_stream_ciphers.py",
      "response_time": 3.001013994216919,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "aes_advanced_encryption",
      "file_name": "aes_advanced_encryption.java",
      "response_time": 4.985431909561157,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant public key cryptography (RSA, DSA, ECDSA, ECDH) detected. Code implements AES, which is a symmetric cipher and currently considered quantum-resistant against Grover's algorithm with sufficient key size.",
        "detected_algorithms": [
          "AES"
        ],
        "recommendations": "No changes required for quantum resistance in symmetric encryption. Ensure AES key size is at least 256 bits for maximum post-quantum security.",
        "evidence": "SBOX, INV_SBOX, and AES structural patterns detected; no RSA, DSA, ECDSA, or ECDH usage or imports.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "aes_advanced_encryption",
      "file_name": "aes_advanced_encryption.java",
      "response_time": 3.244602918624878,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided code segment."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "aria_korean_block_cipher",
      "file_name": "aria_korean_block_cipher.py",
      "response_time": 3.757314920425415,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a symmetric block cipher (ARIA-like), which is not known to be vulnerable to quantum attacks in the same way as public-key algorithms.",
        "detected_algorithms": [],
        "recommendations": "No changes needed regarding quantum resistance for this code. For key exchange or signatures, use post-quantum algorithms.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "aria_korean_block_cipher",
      "file_name": "aria_korean_block_cipher.py",
      "response_time": 3.0202949047088623,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "aria_sha256_ecdsa_government",
      "file_name": "aria_sha256_ecdsa_government.py",
      "response_time": 3.7843658924102783,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected in the provided code. The code appears to implement a block cipher (possibly ARIA) and does not import or invoke any non-quantum-resistant cryptographic algorithms.",
        "detected_algorithms": [],
        "recommendations": "No changes required regarding quantum resistance for the provided code. If digital signatures or key exchange are added, use post-quantum algorithms such as CRYSTALS-Kyber or Dilithium.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "aria_sha256_ecdsa_government",
      "file_name": "aria_sha256_ecdsa_government.py",
      "response_time": 2.8694210052490234,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "blowfish_symmetric_encryption",
      "file_name": "blowfish_symmetric_encryption.c",
      "response_time": 4.4123430252075195,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant asymmetric cryptography (RSA, DSA, ECDSA, ECDH) detected. The code implements Blowfish, a symmetric cipher, which is not directly vulnerable to quantum attacks in the same way as asymmetric algorithms.",
        "detected_algorithms": [
          "Blowfish"
        ],
        "recommendations": "For long-term security, consider using symmetric algorithms with larger key sizes (e.g., AES-256) and ensure key management practices are quantum-safe. No immediate PQC migration required for symmetric encryption.",
        "evidence": "Custom implementation of Blowfish symmetric cipher; no usage of RSA, DSA, ECDSA, or ECDH found.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "blowfish_symmetric_encryption",
      "file_name": "blowfish_symmetric_encryption.c",
      "response_time": 5.412928104400635,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "camellia_block_cipher",
      "file_name": "camellia_block_cipher.c",
      "response_time": 4.261327028274536,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant public-key cryptography (RSA, DSA, ECDSA, ECDH) detected. The code implements the Camellia symmetric block cipher, which is not directly vulnerable to quantum attacks in the same way as public-key algorithms.",
        "detected_algorithms": [],
        "recommendations": "No changes required for quantum resistance regarding public-key cryptography. For long-term security, consider hybrid encryption schemes combining symmetric ciphers with post-quantum key exchange if used in a larger protocol.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found. Only Camellia block cipher implementation present.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "camellia_block_cipher",
      "file_name": "camellia_block_cipher.c",
      "response_time": 3.2568459510803223,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "cast_feistel_cipher",
      "file_name": "cast_feistel_cipher.c",
      "response_time": 3.581449031829834,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a custom Feistel cipher and does not import or use any non-quantum-resistant public key cryptography.",
        "detected_algorithms": [],
        "recommendations": "No action needed regarding quantum resistance for public key cryptography. If public key operations are added, use post-quantum algorithms such as CRYSTALS-Kyber or Dilithium.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "cast_feistel_cipher",
      "file_name": "cast_feistel_cipher.c",
      "response_time": 3.4496922492980957,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "chacha20_poly1305_aead",
      "file_name": "chacha20_poly1305_aead.java",
      "response_time": 3.5000498294830322,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements ChaCha20-Poly1305 AEAD, which is a symmetric cipher and not directly vulnerable to quantum attacks in the same way as asymmetric algorithms.",
        "detected_algorithms": [],
        "recommendations": "No changes required for quantum resistance regarding asymmetric cryptography. For long-term confidentiality, consider using post-quantum key exchange if key establishment is performed elsewhere.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 0.99,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "chacha20_poly1305_aead",
      "file_name": "chacha20_poly1305_aead.java",
      "response_time": 3.033997058868408,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided code segment."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "cloud_security_orchestrator",
      "file_name": "cloud_security_orchestrator.py",
      "response_time": 2.6319692134857178,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of non-quantum-resistant cryptographic algorithms (RSA, DSA, ECDSA, ECDH) detected in the provided code segment.",
        "detected_algorithms": [],
        "recommendations": "Continue to avoid non-quantum-resistant algorithms. If asymmetric cryptography is added, consider post-quantum algorithms such as CRYSTALS-Kyber or Dilithium.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "cloud_security_orchestrator",
      "file_name": "cloud_security_orchestrator.py",
      "response_time": 4.151079893112183,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: SHA-256 (Evidence: import hashlib, line 1)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.7,
        "summary": "SHA-256 hash function detected via hashlib import. No explicit evidence of other quantum-vulnerable algorithms or deprecated cryptographic primitives in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "database_encryption_engine",
      "file_name": "database_encryption_engine.c",
      "response_time": 2.868242025375366,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a custom Feistel-based block cipher and does not import or call any standard non-quantum-resistant cryptographic algorithms.",
        "detected_algorithms": [],
        "recommendations": "No quantum-vulnerable algorithms detected. However, custom cryptography is generally discouraged; consider using well-reviewed, quantum-resistant cryptographic libraries.",
        "evidence": "No references to RSA, DSA, ECDSA, ECDH, or related library imports or function calls found in the provided code.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "database_encryption_engine",
      "file_name": "database_encryption_engine.c",
      "response_time": 3.5880677700042725,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "diffie_hellman_key_exchange",
      "file_name": "diffie_hellman_key_exchange.java",
      "response_time": 2.5910747051239014,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "The code implements classical Diffie-Hellman key exchange, which is not quantum-resistant and is vulnerable to Shor's algorithm.",
        "detected_algorithms": [
          "Diffie-Hellman"
        ],
        "recommendations": "Replace with a post-quantum key exchange algorithm such as CRYSTALS-Kyber or NTRU.",
        "evidence": "Use of large prime modulus and generator for modular exponentiation, matching Diffie-Hellman structural pattern.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "diffie_hellman_key_exchange",
      "file_name": "diffie_hellman_key_exchange.java",
      "response_time": 4.695203065872192,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "DETECTED: DH (Evidence: Implementation of Diffie-Hellman key exchange using modular exponentiation in generateKeyPair() and computeSharedSecret() functions)",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit implementation of Diffie-Hellman (DH) key exchange, which is quantum-vulnerable. No evidence of other vulnerable algorithms or cryptographic primitives."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "digital_identity_platform",
      "file_name": "digital_identity_platform.js",
      "response_time": 3.2761902809143066,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Detected modular exponentiation patterns and 2048-bit key sizes, which are characteristic of RSA or similar large integer cryptosystems vulnerable to quantum attacks.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "Replace with post-quantum cryptography algorithms such as CRYSTALS-Kyber for encryption and CRYSTALS-Dilithium for signatures.",
        "evidence": "Class uses 2048-bit keys, modular exponentiation, and signature operations with large integers, matching RSA patterns.",
        "confidence_score": 0.92,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "digital_identity_platform",
      "file_name": "digital_identity_platform.js",
      "response_time": 5.6204729080200195,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "DETECTED: RSA-like operations (Evidence: LargeIntegerCalculator class uses modular exponentiation, keySize=2048, exponentE=65537, performModularExponentiation(), performPrivateKeyOperation(), performPublicKeyOperation(), which are characteristic of RSA usage, and crypto.randomBytes for key simulation)",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "DETECTED: ECC (Evidence: EllipticCurveProcessor class, curveParameters for secp256k1, generateKeyPair() uses curve parameters and private key generation with crypto.randomBytes(32))",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit usage of quantum-vulnerable RSA-like operations and elliptic curve cryptography (ECC) via modular exponentiation and secp256k1 curve parameters. No evidence of other vulnerable algorithms or insecure primitives."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "elgamal_diffie_hellman_pki",
      "file_name": "elgamal_diffie_hellman_pki.py",
      "response_time": 3.2886881828308105,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "The code implements a public key cryptosystem based on discrete logarithm problems (ElGamal/Diffie-Hellman-like), which is not quantum-resistant and is vulnerable to Shor's algorithm.",
        "detected_algorithms": [
          "Diffie-Hellman",
          "ElGamal-style key exchange"
        ],
        "recommendations": "Replace with post-quantum cryptography algorithms such as CRYSTALS-Kyber or NTRU for key exchange and encryption.",
        "evidence": "Custom implementation of safe prime generation, generator finding, and asymmetric keypair generation using discrete logarithm-based methods.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "elgamal_diffie_hellman_pki",
      "file_name": "elgamal_diffie_hellman_pki.py",
      "response_time": 7.1406919956207275,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "DETECTED: Discrete Logarithm Based Algorithms (Evidence: Implementation of key generation, encryption, and decryption using modular exponentiation and safe primes in KoreanPublicKeySystem and KoreanModularKeyExchange classes)",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: Insecure Random Number Generators (Evidence: Use of Python's 'random' module for cryptographic key generation in multiple functions, e.g., _miller_rabin_test, _generate_safe_prime, generate_asymmetric_keypair, asymmetric_encrypt, generate_exchange_keypair)",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "DETECTED: Implementation-Specific Vulnerabilities (Evidence: Use of non-cryptographically secure random number generation for key material, and custom implementation of cryptographic primitives without use of vetted libraries)"
        },
        "confidence_score": 0.95,
        "summary": "Detected custom discrete logarithm-based cryptosystem and key exchange (quantum-vulnerable), insecure use of Python's random module for key generation, and implementation-specific risks due to non-standard cryptographic code. No evidence of RSA, ECC, Korean domestic algorithms, symmetric ciphers, weak hashes, or deprecated cipher suites."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "elliptic_curve_cryptography",
      "file_name": "elliptic_curve_cryptography.java",
      "response_time": 3.721935987472534,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Elliptic curve cryptography (ECC) detected, which includes ECDSA/ECDH operations that are not quantum-resistant.",
        "detected_algorithms": [
          "ECDSA",
          "ECDH",
          "Elliptic Curve Cryptography"
        ],
        "recommendations": "Replace ECC-based algorithms with post-quantum cryptography such as CRYSTALS-Kyber for key exchange and CRYSTALS-Dilithium for signatures.",
        "evidence": "Prime field parameters (PRIME_P, CURVE_A, CURVE_B), base point (GX, GY), and point operations (ECPoint class) indicate ECC usage.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "elliptic_curve_cryptography",
      "file_name": "elliptic_curve_cryptography.java",
      "response_time": 4.791230201721191,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "DETECTED: Elliptic Curve Cryptography (Evidence: Class 'EllipticCurveCryptography', ECPoint operations, scalarMultiply, pointAdd, pointDouble, KeyPair, Signature classes)",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: SecureRandom (Evidence: 'private static final SecureRandom random = new SecureRandom();')",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit implementation of Elliptic Curve Cryptography (ECC), which is quantum-vulnerable. Also detected use of SecureRandom for key generation. No evidence of RSA, DSA, DH, ElGamal, Korean domestic algorithms, symmetric ciphers, weak hash functions, vulnerable padding, hybrid systems, or legacy crypto libraries."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "financial_risk_analyzer",
      "file_name": "financial_risk_analyzer.py",
      "response_time": 2.907219171524048,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석 불가: LLM 호출 실패",
        "detected_algorithms": [],
        "recommendations": "수동 검토 필요",
        "evidence": "파일: financial_risk_analyzer.py",
        "confidence_score": 0.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "financial_risk_analyzer",
      "file_name": "financial_risk_analyzer.py",
      "response_time": 4.476245641708374,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "DETECTED: RSA (Evidence: Custom RSA key generation and signing in LargeNumberProcessor.generate_financial_keypair and sign_financial_transaction methods)",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "DETECTED: PKCS#1 v1.5 (Evidence: _apply_financial_padding called in sign_financial_transaction for PKCS#1 v1.5 padding)",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit custom RSA implementation and PKCS#1 v1.5 padding usage, both quantum-vulnerable. No evidence of other vulnerable algorithms or cryptographic primitives."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "financial_transaction_processor",
      "file_name": "financial_transaction_processor.c",
      "response_time": 5.132136821746826,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a domestic block cipher and key schedule, but does not use any known non-quantum-resistant public key algorithms.",
        "detected_algorithms": [],
        "recommendations": "No changes required regarding quantum resistance for public key cryptography. Review domestic cipher for overall cryptographic strength and compliance.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 0.99,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "financial_transaction_processor",
      "file_name": "financial_transaction_processor.c",
      "response_time": 4.595707178115845,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "financial_transaction_security",
      "file_name": "financial_transaction_security.c",
      "response_time": 4.335690975189209,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Detected usage of large integer context with fields named 'productN', 'private_exp', and 'public_exp', which are characteristic of RSA cryptography. These are not quantum-resistant.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "Replace RSA with a post-quantum cryptographic algorithm such as CRYSTALS-Kyber for encryption and CRYSTALS-Dilithium for signatures.",
        "evidence": "LargeIntegerContext struct contains 'productN', 'private_exp', and 'public_exp', which are typical for RSA key structures.",
        "confidence_score": 0.92,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "financial_transaction_security",
      "file_name": "financial_transaction_security.c",
      "response_time": 3.2963509559631348,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided code segment."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "government_document_signer",
      "file_name": "government_document_signer.c",
      "response_time": 12.495099067687988,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "The code implements an elliptic curve digital signature algorithm (ECDSA) structure, which is not quantum-resistant and is vulnerable to quantum attacks.",
        "detected_algorithms": [
          "ECDSA"
        ],
        "recommendations": "Replace ECDSA with a post-quantum digital signature scheme such as CRYSTALS-DILITHIUM or Falcon for quantum resistance.",
        "evidence": "The code defines elliptic curve parameters, base points, and signature components (r, s), matching ECDSA structural patterns as described in the expert knowledge base.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "government_document_signer",
      "file_name": "government_document_signer.c",
      "response_time": 4.909329891204834,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 3,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "DETECTED: Elliptic Curve Cryptography (Evidence: EllipticCurveDomain struct, ec_point_double function, generate_signature_keypair function)",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "DETECTED: EC-KCDSA (Evidence: init_korean_curve function, DigitalSignatureKey struct, GovernmentSignature struct)",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: Insecure Random Number Generator (Evidence: srand(12345) and rand() usage in generate_signature_keypair function)",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "DETECTED: Implementation-specific vulnerability (Evidence: Simplified and insecure scalar multiplication and point doubling in ec_point_double and generate_signature_keypair functions)"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit use of elliptic curve cryptography (ECC), specifically a Korean domestic EC-KCDSA-like scheme, with insecure random number generation and simplified, potentially vulnerable implementation of cryptographic operations."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "idea_international_encryption",
      "file_name": "idea_international_encryption.java",
      "response_time": 4.200009107589722,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant public-key cryptography (RSA, DSA, ECDSA, ECDH) detected. The code implements the IDEA symmetric cipher, which is not directly vulnerable to quantum attacks in the same way as public-key algorithms.",
        "detected_algorithms": [],
        "recommendations": "No immediate action required regarding quantum resistance for this code. For future-proofing, consider monitoring developments in quantum cryptanalysis of symmetric ciphers and use larger key sizes if needed.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH. Only symmetric IDEA cipher logic present.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "idea_international_encryption",
      "file_name": "idea_international_encryption.java",
      "response_time": 3.4506590366363525,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "iot_device_security",
      "file_name": "iot_device_security.c",
      "response_time": 3.65073299407959,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a custom lightweight symmetric cipher for IoT devices and does not import or use any non-quantum-resistant asymmetric cryptography.",
        "detected_algorithms": [],
        "recommendations": "No immediate action required regarding quantum vulnerability. For future-proofing, consider using standardized post-quantum cryptography if asymmetric cryptography is added.",
        "evidence": "No references to RSA, DSA, ECDSA, ECDH, or related library imports or function calls found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "iot_device_security",
      "file_name": "iot_device_security.c",
      "response_time": 2.8425941467285156,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "korean_authentication_server",
      "file_name": "korean_authentication_server.cpp",
      "response_time": 3.590689182281494,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code uses custom symmetric encryption and OpenSSL SHA hashing, but no non-quantum-resistant asymmetric algorithms are present in the provided snippet.",
        "detected_algorithms": [],
        "recommendations": "If asymmetric cryptography is required elsewhere in the codebase, use post-quantum algorithms such as CRYSTALS-Kyber or Dilithium. Continue to avoid RSA, DSA, ECDSA, and ECDH.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH detected in the provided code.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "korean_authentication_server",
      "file_name": "korean_authentication_server.cpp",
      "response_time": 3.396070957183838,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: SHA-1 (Evidence: #include <openssl/sha.h>, line 13)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "SHA-1 hash function detected via OpenSSL include; no explicit evidence of other quantum-vulnerable algorithms or deprecated cryptographic primitives."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "korean_banking_security_module",
      "file_name": "korean_banking_security_module.py",
      "response_time": 3.489928960800171,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a custom symmetric block cipher and does not import or use non-quantum-resistant asymmetric algorithms.",
        "detected_algorithms": [],
        "recommendations": "No immediate action required regarding quantum vulnerability. For future-proofing, ensure any asymmetric cryptography added uses post-quantum algorithms.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "korean_banking_security_module",
      "file_name": "korean_banking_security_module.py",
      "response_time": 3.049715042114258,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: SHA-256 (Evidence: import hashlib, line 4)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.9,
        "summary": "SHA-256 usage detected via hashlib import. No explicit evidence of other quantum-vulnerable algorithms or deprecated cryptographic primitives."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "korean_blockchain_wallet",
      "file_name": "korean_blockchain_wallet.py",
      "response_time": 6.300148010253906,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "The code implements ECDSA (Elliptic Curve Digital Signature Algorithm) using a Koblitz curve similar to secp256k1, which is not quantum-resistant and is vulnerable to Shor's algorithm.",
        "detected_algorithms": [
          "ECDSA",
          "Elliptic Curve Cryptography (secp256k1)"
        ],
        "recommendations": "Replace ECDSA with a post-quantum digital signature scheme such as CRYSTALS-Dilithium or Falcon. Avoid using elliptic curve cryptography for key generation and signing in quantum-threatened environments.",
        "evidence": "Class and parameter definitions for elliptic curve domain parameters, including secp256k1-like curve, and comments indicating use for digital signatures.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "korean_blockchain_wallet",
      "file_name": "korean_blockchain_wallet.py",
      "response_time": 4.595378875732422,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "DETECTED: Elliptic Curve Cryptography (Evidence: EllipticCurvePoint and EllipticCurveParameters classes, custom EC arithmetic implementation)",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "DETECTED: Implementation-specific vulnerabilities in quantum-vulnerable algorithms (Evidence: Custom implementation of elliptic curve arithmetic in EllipticCurveParameters and EllipticCurvePoint classes, which may be susceptible to side-channel attacks or other implementation flaws)"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit use of custom elliptic curve cryptography, which is quantum-vulnerable and may have implementation-specific risks. No evidence of RSA, DSA, DH, ElGamal, Korean domestic algorithms, symmetric ciphers, weak hash functions, or deprecated libraries."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "korean_cloud_storage_encryptor",
      "file_name": "korean_cloud_storage_encryptor.py",
      "response_time": 4.077303171157837,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a custom SPN cipher and uses standard Python libraries for hashing and HMAC, which are not public-key algorithms vulnerable to quantum attacks.",
        "detected_algorithms": [],
        "recommendations": "No quantum-vulnerable public-key cryptography detected. If public-key encryption or signatures are required, use post-quantum algorithms such as CRYSTALS-Kyber or Dilithium.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "korean_cloud_storage_encryptor",
      "file_name": "korean_cloud_storage_encryptor.py",
      "response_time": 3.8814520835876465,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: SHA-256 (Evidence: import hashlib, line 6)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "SHA-256 hash function detected via hashlib import; no explicit evidence of other quantum-vulnerable algorithms or weak cryptographic primitives."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "korean_government_data_processor",
      "file_name": "korean_government_data_processor.java",
      "response_time": 3.1846301555633545,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a custom symmetric encryption algorithm and does not import or use any non-quantum-resistant asymmetric cryptography.",
        "detected_algorithms": [],
        "recommendations": "No immediate action required regarding quantum vulnerability. For future-proofing, ensure any asymmetric cryptography added uses post-quantum algorithms.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "korean_government_data_processor",
      "file_name": "korean_government_data_processor.java",
      "response_time": 2.828658103942871,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related insecure implementations detected in the provided code segment."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "korean_iot_device_firmware",
      "file_name": "korean_iot_device_firmware.c",
      "response_time": 3.4849460124969482,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a lightweight block cipher (likely HIGHT) for symmetric encryption, which is not directly vulnerable to quantum attacks like Shor's algorithm.",
        "detected_algorithms": [],
        "recommendations": "No immediate action required regarding quantum vulnerability for this code. For future-proofing, consider post-quantum secure symmetric cipher modes and key management.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH. The code focuses on symmetric key schedule generation.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "korean_iot_device_firmware",
      "file_name": "korean_iot_device_firmware.c",
      "response_time": 3.582620859146118,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "korean_pki_certificate_system",
      "file_name": "korean_pki_certificate_system.cpp",
      "response_time": 3.872215747833252,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "The code implements a digital signature system based on the discrete logarithm problem, which is characteristic of DSA or similar algorithms. These are not quantum-resistant. The use of OpenSSL BIGNUM and references to domain parameters (prime, generator, subgroup order) further indicate DSA-like cryptography.",
        "detected_algorithms": [
          "DSA",
          "Discrete Logarithm-based Signature"
        ],
        "recommendations": "Replace with post-quantum digital signature schemes such as CRYSTALS-Dilithium or Falcon. Avoid discrete logarithm-based cryptography for new systems.",
        "evidence": "Comments and class structures explicitly reference discrete logarithm problem, domain parameters (prime, generator, subgroup order), and use of OpenSSL BIGNUM for cryptographic operations.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "korean_pki_certificate_system",
      "file_name": "korean_pki_certificate_system.cpp",
      "response_time": 4.856534957885742,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 3,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "DETECTED: Discrete Logarithm Based Algorithms (Evidence: Use of OpenSSL BIGNUM for modular exponentiation, prime generation, and generator search in DomainParameters::generate, and key generation in SignatureKeyPair::generate)",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: SHA-1 (Evidence: #include <openssl/sha.h>, line 10)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "DETECTED: OpenSSL BIGNUM (Evidence: #include <openssl/bn.h>, line 9)",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit use of discrete logarithm based algorithms (likely DSA/DH/ElGamal style) via OpenSSL BIGNUM operations and domain parameter generation, as well as SHA-1 hash function and OpenSSL legacy cryptographic library usage. No evidence of RSA, ECC, Korean domestic algorithms, or symmetric ciphers vulnerable to Grover's algorithm."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "korean_secure_messaging_app",
      "file_name": "korean_secure_messaging_app.js",
      "response_time": 3.4012668132781982,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements an ARX-based block cipher (similar to LEA) and does not use non-quantum-resistant public key cryptography.",
        "detected_algorithms": [],
        "recommendations": "No changes needed regarding quantum resistance for public key cryptography. If public key operations are added, use post-quantum algorithms such as CRYSTALS-Kyber or Dilithium.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "korean_secure_messaging_app",
      "file_name": "korean_secure_messaging_app.js",
      "response_time": 3.6688568592071533,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "korean_vpn_tunnel_manager",
      "file_name": "korean_vpn_tunnel_manager.java",
      "response_time": 3.0459389686584473,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements custom Feistel and SPN ciphers and uses javax.crypto.Cipher, but no non-quantum-resistant algorithms are explicitly used.",
        "detected_algorithms": [],
        "recommendations": "Continue to avoid RSA, DSA, ECDSA, and ECDH. For future-proofing, consider post-quantum cryptography for key exchange and signatures if needed.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "korean_vpn_tunnel_manager",
      "file_name": "korean_vpn_tunnel_manager.java",
      "response_time": 3.476956844329834,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "DETECTED: AES (Evidence: import javax.crypto.Cipher; line 1)",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.85,
        "summary": "AES detected via javax.crypto.Cipher import; no explicit evidence of other quantum-vulnerable algorithms or deprecated cryptographic primitives."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "lattice_isogeny_postquantum",
      "file_name": "lattice_isogeny_postquantum.py",
      "response_time": 3.4831340312957764,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant cryptographic algorithms (RSA, DSA, ECDSA, ECDH) detected. The code appears to implement lattice-based post-quantum cryptography primitives.",
        "detected_algorithms": [],
        "recommendations": "No changes needed. Continue using lattice-based or other post-quantum cryptographic schemes.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "lattice_isogeny_postquantum",
      "file_name": "lattice_isogeny_postquantum.py",
      "response_time": 6.611891984939575,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: random (Evidence: import random in _gaussian_sampling and generate_lattice_keypair)",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "No explicit evidence of quantum-vulnerable algorithms detected. Use of Python's 'random' module for cryptographic key and error generation is insecure and should be replaced with a cryptographically secure RNG."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "legacy_authentication_system",
      "file_name": "legacy_authentication_system.c",
      "response_time": 3.2602479457855225,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Detected custom implementation of RSA-like asymmetric cryptography (productN, public_exp, private_exp) and legacy hash function, both of which are not quantum-resistant.",
        "detected_algorithms": [
          "RSA (custom implementation)",
          "Legacy Hash (SHA-1 like)"
        ],
        "recommendations": "Replace asymmetric cryptography with post-quantum algorithms such as CRYSTALS-Kyber for encryption and CRYSTALS-Dilithium for signatures. Replace legacy hash with SHA-3 or SHA-2 family.",
        "evidence": "AsymmetricKeyPair struct with productN, public_exp, private_exp fields and key_size; legacy hash context and SHA-1 like constants and processing.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "legacy_authentication_system",
      "file_name": "legacy_authentication_system.c",
      "response_time": 6.178919792175293,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "DETECTED: RSA (Evidence: AsymmetricKeyPair struct, generate_auth_keys function, mod_exp function, sign_token function)",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: SHA-1 (Evidence: LegacyHashContext struct, init_legacy_hash function, process_hash_block function)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "DETECTED: Implementation-specific RSA vulnerabilities (Evidence: generate_auth_keys uses small, hardcoded primes and simplified key generation)"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit legacy RSA implementation and usage, as well as a custom SHA-1 hash function. The RSA implementation is especially weak due to small, hardcoded primes and simplified key generation, making it vulnerable to both classical and quantum attacks. No evidence of ECC, DSA, DH, ElGamal, Korean domestic algorithms, symmetric ciphers, or hybrid quantum-resistant systems."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "md5_sha1_weak_hash",
      "file_name": "md5_sha1_weak_hash.py",
      "response_time": 3.1545469760894775,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No RSA, DSA, ECDSA, or ECDH algorithms detected in the provided code.",
        "detected_algorithms": [],
        "recommendations": "No quantum-vulnerable public-key cryptography detected. However, the code uses legacy hash functions (MD5/SHA1-like), which are not quantum-safe or collision-resistant. Consider upgrading to SHA-2/3 or post-quantum hash functions.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "md5_sha1_weak_hash",
      "file_name": "md5_sha1_weak_hash.py",
      "response_time": 4.276599884033203,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: MD5 (Evidence: _compute_legacy_digest function, custom implementation of MD5 algorithm)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "DETECTED: MD5 (Evidence: _compute_legacy_digest function, custom implementation of MD5 algorithm)",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "DETECTED: MD5 (Evidence: _compute_legacy_digest function, custom implementation of MD5 algorithm)"
        },
        "confidence_score": 0.98,
        "summary": "Custom implementation of the MD5 hash function detected in _compute_legacy_digest, which is quantum-vulnerable and deprecated for secure applications. No evidence of RSA, ECC, DSA, ElGamal, Korean domestic algorithms, or symmetric ciphers such as AES/3DES/DES/RC4. No explicit use of legacy crypto libraries or deprecated cipher suites."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "medical_device_encryption",
      "file_name": "medical_device_encryption.rs",
      "response_time": 6.550948858261108,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. Only symmetric encryption, hashing, stream cipher, and key derivation are present.",
        "detected_algorithms": [],
        "recommendations": "No quantum-vulnerable asymmetric cryptography detected. If asymmetric cryptography is needed, use post-quantum algorithms such as CRYSTALS-Kyber or Dilithium.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 0.99,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "medical_device_encryption",
      "file_name": "medical_device_encryption.rs",
      "response_time": 4.280461072921753,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "military_communication_system",
      "file_name": "military_communication_system.c",
      "response_time": 3.391713857650757,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected in the provided code. The code implements a cryptographic hash function and key handling, but does not use non-quantum-resistant public key algorithms.",
        "detected_algorithms": [],
        "recommendations": "If public key cryptography is required, use post-quantum algorithms such as CRYSTALS-Kyber or CRYSTALS-Dilithium. Continue to avoid RSA, DSA, ECDSA, and ECDH.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "military_communication_system",
      "file_name": "military_communication_system.c",
      "response_time": 5.265589952468872,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "mobile_secure_messenger",
      "file_name": "mobile_secure_messenger.c",
      "response_time": 2.8625359535217285,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Found usage of ECDH/ECDSA-like key structures (public/private keys, curve parameters) in MobileKeyPair struct, which are not quantum-resistant.",
        "detected_algorithms": [
          "ECDH",
          "ECDSA"
        ],
        "recommendations": "Replace ECDH/ECDSA with post-quantum algorithms such as CRYSTALS-Kyber for key exchange and CRYSTALS-Dilithium for signatures.",
        "evidence": "typedef struct { uint8_t curve_params[32]; uint8_t private_key[32]; uint8_t public_key[64]; uint32_t domain_params[8]; } MobileKeyPair;",
        "confidence_score": 0.92,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "mobile_secure_messenger",
      "file_name": "mobile_secure_messenger.c",
      "response_time": 2.9276621341705322,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "network_infrastructure_monitor",
      "file_name": "network_infrastructure_monitor.cpp",
      "response_time": 3.344572067260742,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Detected simulated RSA 2048-bit key generation and public/private key operations, which are not quantum-resistant.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "Replace RSA with a post-quantum algorithm such as CRYSTALS-Kyber for key exchange and CRYSTALS-Dilithium for signatures.",
        "evidence": "Class LargeIntegerProcessor uses KEY_SIZE = 2048, PUBLIC_EXPONENT = 65537, and simulates key generation and modular exponentiation, which are characteristic of RSA.",
        "confidence_score": 0.93,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "network_infrastructure_monitor",
      "file_name": "network_infrastructure_monitor.cpp",
      "response_time": 3.3249127864837646,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "ntru_lattice_encryption",
      "file_name": "ntru_lattice_encryption.java",
      "response_time": 2.9726340770721436,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant algorithms detected. The code implements NTRU, which is considered post-quantum secure.",
        "detected_algorithms": [],
        "recommendations": "No changes needed. NTRU is a post-quantum cryptographic algorithm.",
        "evidence": "No usage of RSA, DSA, ECDSA, or ECDH found. Only NTRU lattice-based encryption is present.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "ntru_lattice_encryption",
      "file_name": "ntru_lattice_encryption.java",
      "response_time": 4.585061073303223,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "openssl_des_enc",
      "file_name": "openssl_des_enc.c",
      "response_time": 3.4762229919433594,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "The code implements DES, a legacy symmetric cipher that is not quantum-resistant. While DES is not a public-key algorithm like RSA or ECDSA, it is also not secure against quantum attacks due to Grover's algorithm, which can significantly reduce its effective key strength.",
        "detected_algorithms": [
          "DES"
        ],
        "recommendations": "Replace DES with a quantum-resistant symmetric cipher (e.g., use AES-256 or higher, and monitor for future PQC symmetric recommendations). For public-key operations, use NIST-approved post-quantum algorithms such as CRYSTALS-Kyber or CRYSTALS-Dilithium.",
        "evidence": "The file and macro names (e.g., D_ENCRYPT, LegacyBlockCipher, and DES-specific logic) indicate DES implementation.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "openssl_des_enc",
      "file_name": "openssl_des_enc.c",
      "response_time": 3.757398843765259,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "DETECTED: DES (Evidence: #include <openssl/legacy_cipher.h>, macro D_ENCRYPT, LegacyBlockCipherLONG, LegacyBlockCipherPTR, LegacyBlockCipherRISC1, LegacyBlockCipherRISC2, which are all associated with DES implementation in OpenSSL)",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "DETECTED: Legacy Cipher (Evidence: #include <openssl/legacy_cipher.h>)",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "DES symmetric cipher and legacy OpenSSL cipher library usage detected, both quantum-vulnerable and deprecated."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "quantum_resistant_messenger",
      "file_name": "quantum_resistant_messenger.py",
      "response_time": 2.832765817642212,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant cryptographic algorithms (RSA, DSA, ECDSA, ECDH) detected. The code uses lattice-based cryptography, which is considered quantum-resistant.",
        "detected_algorithms": [],
        "recommendations": "Continue using lattice-based cryptography for post-quantum security. Ensure all cryptographic primitives are implemented securely and consider using well-vetted libraries.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found. Only lattice-based schemes and symmetric primitives are present.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "quantum_resistant_messenger",
      "file_name": "quantum_resistant_messenger.py",
      "response_time": 3.4919590950012207,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: SHA-256 (Evidence: import hashlib, line 7)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "SHA-256 hash function detected via hashlib import; no explicit evidence of other quantum-vulnerable algorithms or legacy cryptographic primitives."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "rc4_stream_generator",
      "file_name": "rc4_stream_generator.c",
      "response_time": 3.9915218353271484,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements RC4 and Spritz stream ciphers, which are not asymmetric algorithms and are not directly vulnerable to quantum attacks in the same way as public-key algorithms.",
        "detected_algorithms": [],
        "recommendations": "No quantum-vulnerable public-key cryptography detected. However, RC4 is considered insecure for other reasons and should be replaced with a modern, secure cipher such as AES-GCM or a PQC-approved symmetric cipher if available.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "rc4_stream_generator",
      "file_name": "rc4_stream_generator.c",
      "response_time": 2.4371867179870605,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "rsa_gen",
      "file_name": "rsa_gen.c",
      "response_time": 2.8432371616363525,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Detected usage of RSA public key generation functions, which are not quantum-resistant.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "Replace RSA with a post-quantum cryptographic algorithm such as CRYSTALS-Kyber for key exchange and CRYSTALS-Dilithium for signatures.",
        "evidence": "Functions like PUBKEY_generate_key_ex and references to PKCS1 indicate RSA key generation; OpenSSL's default public key method is typically RSA.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "rsa_gen",
      "file_name": "rsa_gen.c",
      "response_time": 6.129718065261841,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "DETECTED: RSA (Evidence: PUBKEY_PKCS1_OpenSSL() call in PUBKEY_get_default_method, ossl_pubkey_generate_key_int function, BN_generate_prime_ex for key generation, explicit handling of RSA key components n, e, d, p, q, dmp1, dmq1, iqmp)",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "RSA key generation and usage detected via explicit function calls and key component handling. No evidence of other quantum-vulnerable or legacy algorithms in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "rsa_modular_exponentiation",
      "file_name": "rsa_modular_exponentiation.py",
      "response_time": 2.496316909790039,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Custom implementation of RSA key generation and modular exponentiation detected. RSA is not quantum-resistant.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "Replace RSA with a post-quantum cryptography algorithm such as CRYSTALS-Kyber for key exchange and CRYSTALS-Dilithium for signatures.",
        "evidence": "Methods _generate_keypair, _generate_prime, and use of modular exponentiation for RSA key generation and operations.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "rsa_modular_exponentiation",
      "file_name": "rsa_modular_exponentiation.py",
      "response_time": 7.2647058963775635,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 4,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "DETECTED: RSA (Evidence: _generate_keypair method explicitly implements RSA key generation using two primes, public exponent e=65537, and modular inverse for private exponent; secure_encrypt and create_signature methods use textbook RSA encryption and signing)",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "DETECTED: SHA-1 (Evidence: _compute_digest method implements a legacy 160-bit hash function with initial values and structure matching SHA-1 specification)",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "DETECTED: PKCS#1 v1.5 (Evidence: _apply_basic_padding method applies padding structure b'\\x00\\x02' || random nonzero padding || b'\\x00' || message, matching PKCS#1 v1.5 encryption padding)",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: Insecure random number generator (Evidence: os.urandom used directly for prime generation and padding in _generate_prime, _random_odd_number, _random_in_range, and _apply_basic_padding methods without additional entropy management or cryptographic DRBG)",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "DETECTED: Indirect implementation of SHA-1 (Evidence: _compute_digest method manually implements SHA-1 logic rather than using a standard library)",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "DETECTED: Textbook RSA encryption/signature (Evidence: secure_encrypt and create_signature methods use textbook RSA without OAEP or PSS, which is vulnerable to chosen ciphertext and existential forgery attacks)"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit textbook RSA implementation with PKCS#1 v1.5 padding, manual SHA-1 hash function, and insecure random number usage. No evidence of ECC, DSA, ElGamal, Korean domestic algorithms, or hybrid quantum-resistant cryptography."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "rsa_public_key_system",
      "file_name": "rsa_public_key_system.java",
      "response_time": 5.021030902862549,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "RSA key generation and usage detected, which is not quantum-resistant.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "Replace RSA with a post-quantum cryptography algorithm such as CRYSTALS-Kyber for key exchange and digital signatures.",
        "evidence": "Custom RSA implementation with key generation (generateKeyPair), prime generation, and exponent calculations.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "rsa_public_key_system",
      "file_name": "rsa_public_key_system.java",
      "response_time": 3.925891160964966,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "DETECTED: RSA (Evidence: Manual implementation of RSA key generation, encryption, and decryption in PublicKeyHandlerSystem class: generateKeyPair(), encrypt(), decrypt())",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "DETECTED: RSA (Evidence: Manual implementation of RSA key generation, prime generation, and encryption/decryption in PublicKeyHandlerSystem class, which may be susceptible to implementation flaws)"
        },
        "confidence_score": 0.98,
        "summary": "Manual RSA implementation detected, which is quantum-vulnerable and may introduce implementation-specific weaknesses. No evidence of other cryptographic algorithms or primitives."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "salsa20_stream_cipher",
      "file_name": "salsa20_stream_cipher.c",
      "response_time": 2.8558237552642822,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant (public-key) cryptographic algorithms detected. The code implements the Salsa20 stream cipher, which is a symmetric algorithm and not directly vulnerable to quantum attacks in the same way as RSA, DSA, ECDSA, or ECDH.",
        "detected_algorithms": [
          "Salsa20"
        ],
        "recommendations": "No immediate action required regarding quantum resistance for symmetric ciphers. For public-key operations, use post-quantum algorithms such as CRYSTALS-Kyber or Dilithium.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found. Only Salsa20 stream cipher implementation detected.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "salsa20_stream_cipher",
      "file_name": "salsa20_stream_cipher.c",
      "response_time": 2.5825092792510986,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "secure_messaging_protocol",
      "file_name": "secure_messaging_protocol.rb",
      "response_time": 1.937425136566162,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "Found RSA 2048-bit key generation and encryption/decryption operations implemented in LargeIntegerArithmetic class.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "Replace RSA with a post-quantum algorithm such as CRYSTALS-Kyber for key exchange and encryption.",
        "evidence": "Methods generate_keypair, encrypt_with_public_key, and decrypt_with_private_key implement RSA cryptography using large primes and modular exponentiation.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "secure_messaging_protocol",
      "file_name": "secure_messaging_protocol.rb",
      "response_time": 5.495269060134888,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "DETECTED: RSA (Evidence: Custom RSA key generation, encryption, decryption, signing, and verification in LargeIntegerArithmetic class methods: generate_keypair, encrypt_with_public_key, decrypt_with_private_key, sign_message, verify_signature)",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "DETECTED: PKCS#1 v1.5 (Evidence: apply_signature_padding called in sign_message and verify_signature methods)",
          "insecure_random_number_generators_and_key_derivation_functions": "DETECTED: SecureRandom (Evidence: SecureRandom.random_number used in generate_large_prime and miller_rabin_test methods)",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "DETECTED: Custom RSA implementation (Evidence: Manual implementation of RSA key generation, encryption, decryption, and signature in LargeIntegerArithmetic class, which may be prone to side-channel or padding oracle attacks if not carefully implemented)"
        },
        "confidence_score": 0.98,
        "summary": "Detected custom RSA implementation with PKCS#1 v1.5 padding and use of SecureRandom for prime generation. No evidence of ECC, DSA, ElGamal, Korean domestic algorithms, or symmetric ciphers. Manual cryptographic implementation may introduce additional vulnerabilities."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "secure_video_streaming",
      "file_name": "secure_video_streaming.c",
      "response_time": 3.5526928901672363,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a Salsa20-like stream cipher, which is a symmetric algorithm and not directly vulnerable to quantum attacks in the same way as asymmetric algorithms.",
        "detected_algorithms": [],
        "recommendations": "No non-quantum-resistant asymmetric cryptography detected. For future-proofing, consider hybrid encryption schemes combining symmetric ciphers with post-quantum key exchange if asymmetric cryptography is added.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "secure_video_streaming",
      "file_name": "secure_video_streaming.c",
      "response_time": 2.9406840801239014,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "seed_aes_hybrid_banking",
      "file_name": "seed_aes_hybrid_banking.py",
      "response_time": 3.3910470008850098,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant (public-key) cryptographic algorithms such as RSA, DSA, ECDSA, or ECDH detected. The code implements a symmetric block cipher (SEED), which is not directly vulnerable to quantum attacks in the same way as public-key algorithms.",
        "detected_algorithms": [
          "SEED (symmetric block cipher)"
        ],
        "recommendations": "For symmetric encryption, increase key sizes to at least 256 bits if possible to mitigate Grover's algorithm. No immediate PQC replacement is required for SEED, but consider AES-256 for broader international support.",
        "evidence": "Custom implementation of SEED-like block cipher structure; no RSA, DSA, ECDSA, or ECDH usage found.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "seed_aes_hybrid_banking",
      "file_name": "seed_aes_hybrid_banking.py",
      "response_time": 4.082224130630493,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "seed_stream_cipher",
      "file_name": "seed_stream_cipher.py",
      "response_time": 2.5503170490264893,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements a custom stream cipher and does not import or use any standard non-quantum-resistant public key algorithms.",
        "detected_algorithms": [],
        "recommendations": "No action required regarding quantum vulnerability. For cryptographic safety, consider using well-vetted, standardized algorithms.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "seed_stream_cipher",
      "file_name": "seed_stream_cipher.py",
      "response_time": 2.920684814453125,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "serpent_substitution_network",
      "file_name": "serpent_substitution_network.c",
      "response_time": 3.205709218978882,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant (RSA, DSA, ECDSA, ECDH) cryptographic algorithms detected. The code implements the Serpent block cipher, which is a symmetric algorithm and not directly vulnerable to quantum attacks in the same way as public-key algorithms.",
        "detected_algorithms": [],
        "recommendations": "No changes required regarding quantum resistance for this code. For public-key operations elsewhere, consider post-quantum algorithms.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found. Only symmetric cipher logic (Serpent) present.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "serpent_substitution_network",
      "file_name": "serpent_substitution_network.c",
      "response_time": 2.613670825958252,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "sha1_rsa_legacy_documents",
      "file_name": "sha1_rsa_legacy_documents.py",
      "response_time": 2.8901848793029785,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected in the provided code. The code implements a custom hash function and does not perform any asymmetric cryptographic operations.",
        "detected_algorithms": [],
        "recommendations": "No quantum-vulnerable asymmetric cryptography detected. If digital signatures or encryption are required, use post-quantum algorithms such as CRYSTALS-Kyber or CRYSTALS-Dilithium.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "sha1_rsa_legacy_documents",
      "file_name": "sha1_rsa_legacy_documents.py",
      "response_time": 3.314525842666626,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable or legacy cryptographic algorithms or libraries detected in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "skipjack_government_cipher",
      "file_name": "skipjack_government_cipher.c",
      "response_time": 2.954939842224121,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements the Skipjack block cipher, which is a symmetric algorithm and not directly vulnerable to quantum attacks in the same way as public-key algorithms.",
        "detected_algorithms": [],
        "recommendations": "No quantum-vulnerable public-key cryptography detected. For future-proofing, consider using symmetric algorithms with larger key sizes and quantum-resistant public-key algorithms where applicable.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "skipjack_government_cipher",
      "file_name": "skipjack_government_cipher.c",
      "response_time": 2.444441080093384,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "smart_card_security",
      "file_name": "smart_card_security.c",
      "response_time": 5.403618097305298,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "The code implements a TEA-like block cipher for authentication and encryption, which is a symmetric algorithm. While symmetric ciphers are generally more resistant to quantum attacks than asymmetric algorithms, TEA is not considered quantum-resistant due to its small key size (128 bits) and known cryptanalytic weaknesses. No RSA, DSA, ECDSA, or ECDH usage was detected.",
        "detected_algorithms": [
          "TEA-like cipher (symmetric)"
        ],
        "recommendations": "Replace TEA-like cipher with a modern, quantum-resistant symmetric cipher (e.g., AES-256) and consider increasing key sizes. For asymmetric operations, use post-quantum algorithms such as CRYSTALS-Kyber or CRYSTALS-Dilithium if needed.",
        "evidence": "Function 'tea_encrypt_block' implements a TEA-like cipher with 128-bit keys, which is not quantum-resistant.",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "smart_card_security",
      "file_name": "smart_card_security.c",
      "response_time": 3.332669973373413,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations was detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "tiger_hash_function",
      "file_name": "tiger_hash_function.c",
      "response_time": 2.92604923248291,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements the Tiger hash function, which is a cryptographic hash and not a public-key algorithm vulnerable to quantum attacks.",
        "detected_algorithms": [],
        "recommendations": "No quantum-vulnerable public-key cryptography detected. If digital signatures or encryption are needed, use post-quantum algorithms such as CRYSTALS-Kyber or Dilithium.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found in the provided code.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "tiger_hash_function",
      "file_name": "tiger_hash_function.c",
      "response_time": 3.211648941040039,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or implementations detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "twofish_advanced_encryption",
      "file_name": "twofish_advanced_encryption.c",
      "response_time": 4.456923007965088,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No non-quantum-resistant (e.g., RSA, DSA, ECDSA, ECDH) cryptographic algorithms detected. The code implements Twofish, a symmetric cipher, which is not known to be vulnerable to quantum attacks in the same way as asymmetric algorithms.",
        "detected_algorithms": [],
        "recommendations": "No changes required regarding quantum resistance for symmetric encryption. For key exchange or signatures, use post-quantum algorithms such as CRYSTALS-Kyber or Dilithium.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found. Only Twofish symmetric cipher implementation present.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "twofish_advanced_encryption",
      "file_name": "twofish_advanced_encryption.c",
      "response_time": 3.203731060028076,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "whirlpool_hash_digest",
      "file_name": "whirlpool_hash_digest.c",
      "response_time": 3.1374900341033936,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "No usage of RSA, DSA, ECDSA, or ECDH detected. The code implements the Whirlpool hash function, which is not a public-key algorithm and is not directly vulnerable to quantum attacks.",
        "detected_algorithms": [],
        "recommendations": "No changes needed regarding quantum resistance for this code. If digital signatures or encryption are added, use post-quantum algorithms.",
        "evidence": "No imports or function calls related to RSA, DSA, ECDSA, or ECDH found. Only hash function logic present.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "whirlpool_hash_digest",
      "file_name": "whirlpool_hash_digest.c",
      "response_time": 3.1912331581115723,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "source_code",
      "test_id": "wireless_network_encryption",
      "file_name": "wireless_network_encryption.c",
      "response_time": 3.3405158519744873,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "The code implements WEP-style encryption using RC4, which is not quantum-resistant and is also considered insecure against classical attacks.",
        "detected_algorithms": [
          "RC4"
        ],
        "recommendations": "Replace RC4 with a quantum-resistant authenticated encryption algorithm such as those based on NIST PQC finalists (e.g., CRYSTALS-Kyber for key exchange and AES-GCM for symmetric encryption with post-quantum key establishment).",
        "evidence": "Custom implementation of RC4 stream cipher in functions init_wireless_cipher and generate_keystream_byte.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "source_code",
      "test_id": "wireless_network_encryption",
      "file_name": "wireless_network_encryption.c",
      "response_time": 2.9624688625335693,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Source Code Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "quantum_vulnerable_rsa_implementations_and_usage_patterns": "NOT DETECTED",
          "elliptic_curve_cryptography_ecc_ecdsa_ecdh_implementations": "NOT DETECTED",
          "discrete_logarithm_based_algorithms_dsa_dh_elgamal": "NOT DETECTED",
          "korean_domestic_algorithms_seed_aria_hight_lea_kcdsa_ec_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_ciphers_vulnerable_to_grover's_algorithm_aes_128_3des_des_rc4": "NOT DETECTED",
          "weak_hash_functions_md5_sha_1_sha_256_with_reduced_security": "NOT DETECTED",
          "vulnerable_padding_schemes_pkcs_1_v1_5_weak_oaep": "NOT DETECTED",
          "insecure_random_number_generators_and_key_derivation_functions": "NOT DETECTED",
          "obfuscated_or_indirect_implementations_of_vulnerable_algorithms": "NOT DETECTED",
          "hybrid_systems_mixing_quantum_vulnerable_and_quantum_resistant_algorithms": "NOT DETECTED",
          "legacy_cryptographic_libraries_and_deprecated_cipher_suites": "NOT DETECTED",
          "implementation_specific_vulnerabilities_in_quantum_vulnerable_algorithms": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or related vulnerabilities detected in the provided source code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "adaptive_multi_tenant_crypto_orchestrator",
      "file_name": "adaptive_multi_tenant_crypto_orchestrator.s",
      "response_time": 7.5524022579193115,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 0,
      "false_negatives": 7,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'modular_4096_handler', 'modular_2048_handler', 'curve_p256_handler'와 같은 명칭이 발견되었습니다. 'modular_4096_handler' 및 'modular_2048_handler'는 각각 RSA 4096비트, RSA 2048비트와 같은 모듈러 산술 기반(즉, RSA류) 알고리즘을, 'curve_p256_handler'는 NIST P-256 타원곡선(ECDSA/ECDH) 알고리즘을 지칭할 가능성이 매우 높습니다. 이는 모두 비양자내성(Non-PQC) 암호에 해당합니다. 또한, 'standard_256_gcm_handler', 'standard_128_cbc_handler', 'stream_alg20_handler' 등은 대칭키 암호(GCM, CBC, 스트림 알고리즘)로, PQC와 직접적 관련은 없으나, 공개키 교환 및 서명에 비양자내성 알고리즘이 사용되지 않으므로 전체적으로 PQC 미지원 상태로 판단됩니다.",
        "detected_algorithms": [
          "RSA",
          "ECDSA"
        ],
        "recommendations": "공개키 암호화 및 서명에 대해 Kyber, Dilithium, Falcon 등 NIST PQC 표준 알고리즘으로의 전환을 권장합니다. 기존 RSA, ECDSA 기반 알고리즘은 양자컴퓨터 환경에서 안전하지 않으므로, 신규 개발 및 유지보수 시 PQC 알고리즘 도입을 적극 검토해야 합니다.",
        "evidence": "modular_4096_handler, modular_2048_handler, curve_p256_handler 등 암호 알고리즘 핸들러 명칭이 바이너리 내에 명시적으로 존재함.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "adaptive_multi_tenant_crypto_orchestrator",
      "file_name": "adaptive_multi_tenant_crypto_orchestrator.s",
      "response_time": 5.958126068115234,
      "json_valid": true,
      "true_positives": 3,
      "false_positives": 1,
      "false_negatives": 6,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "DETECTED: RSA modular exponentiation (Evidence: modular_4096_handler and modular_2048_handler function pointers in tenant_configs, used as primary_algorithm handlers, called via call *%rax in authenticate_tenant)",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "DETECTED: Elliptic Curve (Evidence: curve_p256_handler function pointer in tenant_configs, used as primary_algorithm handler, called via call *%rax in authenticate_tenant)",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "DETECTED: AES-128 (Evidence: standard_128_cbc_handler function pointer in tenant_configs, used as symmetric_algorithm handler for Tenant C)",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "DETECTED: Big integer/modular arithmetic (Evidence: modular_4096_handler and modular_2048_handler function pointers in tenant_configs, used as primary_algorithm handlers, called via call *%rax in authenticate_tenant)",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.85,
        "summary": "Detected explicit use of RSA modular exponentiation (modular_4096_handler, modular_2048_handler), elliptic curve cryptography (curve_p256_handler), and AES-128 (standard_128_cbc_handler) as cryptographic primitives, all of which are vulnerable to quantum attacks. No evidence of DSA/DH/ElGamal, Korean algorithms, or vulnerable hash functions."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "advanced_block_standard_operations",
      "file_name": "advanced_block_standard_operations.s",
      "response_time": 6.066955089569092,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에는 RSA, DSA, ECDSA 등 비양자내성 공개키 암호 알고리즘의 시그니처, 상수, 또는 관련 문자열이 발견되지 않았습니다. 주요 함수(sub_401000 등)는 16바이트 블록 단위의 데이터 처리, 바이트 치환, 회전, XOR 연산 등 대칭키 블록 암호(예: AES)에서 흔히 볼 수 있는 연산 패턴을 보입니다. data_402000에 포함된 상수는 AES S-box와 일치합니다. 공개키 기반 알고리즘의 흔적은 없습니다.",
        "detected_algorithms": [
          "AES (추정)"
        ],
        "recommendations": "현재 바이너리는 대칭키 블록 암호(AES)만을 사용하는 것으로 보입니다. 양자내성 공개키 암호(PQC)로의 전환은 공개키 교환, 서명 등 공개키 기반 기능이 추가될 때 필요합니다. 만약 향후 공개키 암호가 도입된다면, PQC 알고리즘(Kyber, Dilithium 등) 사용을 권장합니다.",
        "evidence": "data_402000의 S-box 상수, 16바이트 단위 처리, XOR/치환/회전 연산 등 AES 구현 패턴. RSA, DSA, ECDSA 관련 문자열 및 상수 미발견.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "advanced_block_standard_operations",
      "file_name": "advanced_block_standard_operations.s",
      "response_time": 4.72009015083313,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "aes_key_expansion_module",
      "file_name": "aes_key_expansion_module.s",
      "response_time": 6.61784815788269,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 FIPS 197 준수, 128/192/256비트 키, 'round key', 'SubBytes', 'RotWord' 등 AES(Advanced Encryption Standard) 관련 명확한 구현 패턴이 다수 발견되었습니다. AES는 대칭키 블록 암호로, Grover 알고리즘 등 양자컴퓨터 공격에 의해 키 길이의 절반 수준으로 보안성이 저하될 수 있습니다. 이는 비양자내성암호(Non-PQC)로 분류되며, 장기적으로 양자내성 대칭키 알고리즘(PQC)으로의 전환이 필요합니다.",
        "detected_algorithms": [
          "AES"
        ],
        "recommendations": "장기적으로 양자내성 대칭키 알고리즘(예: AES-256 이상, 혹은 PQC 대칭키 후보)으로의 전환을 검토하세요. 키 길이를 충분히 길게(256비트 이상) 설정하고, 양자내성 암호화 표준이 확정되는 대로 적용을 권장합니다.",
        "evidence": "FIPS 197, 128/192/256-bit keys, round key, SubBytes, RotWord, key expansion 등 AES 고유 용어 및 구조가 바이너리 내에 반복적으로 등장함.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "aes_key_expansion_module",
      "file_name": "aes_key_expansion_module.s",
      "response_time": 2.5683069229125977,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "aria_encryption_engine",
      "file_name": "aria_encryption_engine.s",
      "response_time": 9.966626167297363,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 확인된 암호화 알고리즘은 128/192/256비트 키를 사용하는 128비트 블록 암호로, 'Domestic standard', 'transform_encrypt_block', 'rounds', 'substitution', 'diffusion', 'round key' 등 ARIA 또는 유사한 대칭키 블록 암호의 구현으로 보입니다. 해당 알고리즘은 Grover 알고리즘 등 양자컴퓨터의 공격에 대해 키 길이가 절반으로 감소하는 취약점이 존재하여, 비양자내성(Non-PQC)으로 분류됩니다. RSA, DSA, ECDSA 등 공개키 기반 알고리즘은 발견되지 않았으나, 대칭키 암호 역시 양자내성 기준에서는 취약할 수 있습니다.",
        "detected_algorithms": [
          "ARIA (추정, 128/192/256-bit block cipher)"
        ],
        "recommendations": "대칭키 암호의 경우, 양자컴퓨터 환경에서 안전성을 높이기 위해 최소 256비트 이상의 키 사용을 권장합니다. 또한, 장기적으로는 PQC(양자내성암호) 알고리즘 도입을 검토해야 하며, 공개키 암호가 필요한 경우 NIST PQC 표준 알고리즘(Kyber, Dilithium 등)으로의 전환을 권장합니다.",
        "evidence": "# 128-bit block cipher with 128/192/256-bit keys\n# Post_Classical-vulnerable to Grover's algorithm (effective key length halved)\ntransform_encrypt_block:\nsubstitution, diffusion, round key, rounds_12, rounds_14, rounds_16 등 ARIA 구조와 유사한 용어 및 구현 흐름",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "aria_encryption_engine",
      "file_name": "aria_encryption_engine.s",
      "response_time": 2.7916409969329834,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "automotive_ecu_cryptographic_unit",
      "file_name": "automotive_ecu_cryptographic_unit.s",
      "response_time": 5.812995910644531,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리 내에는 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 상수, 또는 관련 문자열이 발견되지 않았습니다. 또한 well-known 암호화 라이브러리(예: OpenSSL, libcrypto 등) 관련 문자열도 존재하지 않습니다. 코드 내에서 사용된 상수 및 연산 패턴은 맞춤형 블록 암호 또는 단순한 데이터 처리 루틴으로 보이며, 표준 비양자내성암호 알고리즘의 특징적인 시그니처와 일치하지 않습니다.",
        "detected_algorithms": [],
        "recommendations": "현재로서는 비양자내성암호 사용 증거가 없으나, 맞춤형 암호화 구현의 경우 보안성 검증이 필요합니다. 향후 PQC(양자내성암호) 표준 알고리즘(NIST 선정 Kyber, Dilithium 등) 도입을 권장합니다.",
        "evidence": "바이너리 내에 RSA, DSA, ECDSA, ECC, DH, PKCS, ASN.1, modulus, exponent, curve 등 관련 문자열 및 시그니처가 존재하지 않음. 주요 함수명 및 상수는 맞춤형 암호화 또는 데이터 처리 루틴에 해당.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "automotive_ecu_cryptographic_unit",
      "file_name": "automotive_ecu_cryptographic_unit.s",
      "response_time": 2.8278520107269287,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "banking_transaction_processor",
      "file_name": "banking_transaction_processor.s",
      "response_time": 6.538439750671387,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에서 RSA, DSA, ECDSA 등 비양자내성 공개키 암호 알고리즘의 시그니처나 관련 문자열, 상수, 라이브러리 호출이 발견되지 않았습니다. 주요 함수들은 block_key_schedule, block_encrypt_block, banking_hmac 등 블록 암호 및 HMAC 관련 함수로 보이며, 이는 대칭키 기반 암호화 및 해시 기반 메시지 인증 코드(HMAC)로 추정됩니다. 또한, feistel_function 등에서 피스텔 구조의 대칭키 암호 구현 흔적이 보입니다.",
        "detected_algorithms": [],
        "recommendations": "현재 공개키 기반 비양자내성암호(PQC)로의 전환 필요성은 낮으나, 향후 공개키 암호가 도입될 경우 PQC 알고리즘(예: Kyber, Dilithium 등) 사용을 권장합니다. 대칭키 암호의 경우 충분한 키 길이(예: AES-256)와 안전한 키 관리가 중요합니다.",
        "evidence": "block_key_schedule, block_encrypt_block, banking_hmac, feistel_function 등 대칭키 암호 및 HMAC 관련 함수만 존재하며, RSA, DSA, ECDSA, ECC 등 비양자내성 공개키 암호 관련 문자열, 상수, 라이브러리 호출이 없음.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "banking_transaction_processor",
      "file_name": "banking_transaction_processor.s",
      "response_time": 2.977966070175171,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "biometric_authentication_engine",
      "file_name": "biometric_authentication_engine.s",
      "response_time": 7.14630389213562,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "바이너리 내에서 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 관련 상수, 또는 암호화 라이브러리 문자열이 발견되지 않았습니다. 함수명 및 상수로 미루어볼 때, 자체 구현된 대칭키 기반의 블록 암호 또는 XOR 연산 등 단순한 암호화 방식이 사용된 것으로 보입니다.",
        "detected_algorithms": [],
        "recommendations": "현재 바이너리에서는 비양자내성 공개키 암호(RSA, ECDSA 등)가 탐지되지 않았으나, 자체 구현된 암호화 방식은 안전성이 검증되지 않았을 수 있습니다. 양자내성(PQC) 알고리즘 도입 전, 표준화된 대칭키 암호(AES 등)와 인증된 암호화 라이브러리 사용을 권장합니다.",
        "evidence": "암호화 라이브러리, RSA/DSA/ECDSA 관련 문자열 및 시그니처 부재. 함수명 'biometric_key_extraction', 'domesticn_biometric_cipher', 'template_protection' 등에서 표준 비양자내성암호 사용 흔적 없음. 상수 및 연산 패턴이 공개키 암호와 일치하지 않음.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "biometric_authentication_engine",
      "file_name": "biometric_authentication_engine.s",
      "response_time": 2.5309560298919678,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "blake2b_hash_engine",
      "file_name": "blake2b_hash_engine.s",
      "response_time": 7.889030933380127,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에는 BLAKE2b 해시 함수 구현 코드만 존재하며, RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 상수, 라이브러리 문자열이 발견되지 않았습니다. BLAKE2b는 해시 함수로, 디지털 서명이나 키 교환 등 비양자내성암호로 분류되는 공개키 암호화 알고리즘이 아닙니다.",
        "detected_algorithms": [
          "BLAKE2b"
        ],
        "recommendations": "현재 바이너리는 비양자내성 공개키 암호화 알고리즘을 사용하지 않으므로 PQC 전환이 필요하지 않습니다. 단, 향후 공개키 암호화 기능이 추가될 경우 PQC 알고리즘(예: CRYSTALS-Kyber, Dilithium 등) 도입을 고려하십시오.",
        "evidence": "초기화 벡터(IV) 및 라운드 상수, BLAKE2b 해시 함수 관련 상수(예: 0x6a09e667f3bcc908 등), 'compress_block', 'state_vector', 'sigma_table' 등 해시 함수 내부 구조에 해당하는 문자열만 존재. RSA, DSA, ECDSA, DH, ECC 등 비양자내성암호 관련 문자열, 상수, 함수 호출 미발견.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "blake2b_hash_engine",
      "file_name": "blake2b_hash_engine.s",
      "response_time": 2.9981958866119385,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "block_cipher_operations",
      "file_name": "block_cipher_operations.s",
      "response_time": 10.292224168777466,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에는 RSA, DSA, ECDSA 등 비양자내성(Non-PQC) 공개키 암호 알고리즘의 시그니처, 상수, 또는 관련 문자열이 발견되지 않았습니다. 주요 연산은 16바이트 블록 단위의 바이트 치환, 회전, XOR 등으로 구성되어 있으며, 이는 대칭키 블록 암호(예: AES) 구현에 해당합니다. data_402000에 포함된 S-box 상수는 AES의 S-box와 일치합니다.",
        "detected_algorithms": [
          "AES (추정)"
        ],
        "recommendations": "본 바이너리는 공개키 기반 비양자내성 암호를 사용하지 않으므로, PQC 전환과 직접적인 관련은 없습니다. 다만, 향후 공개키 암호가 필요한 경우 PQC(양자내성 공개키 암호) 알고리즘 도입을 고려하십시오.",
        "evidence": "data_402000 S-box 상수, 16바이트 블록 처리, 바이트 치환 및 XOR 연산 등 AES와 유사한 구조. 공개키 암호 관련 문자열 및 시그니처(RSA, DSA, ECDSA 등) 미발견.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "block_cipher_operations",
      "file_name": "block_cipher_operations.s",
      "response_time": 2.9330968856811523,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "blockchain_consensus_validator",
      "file_name": "blockchain_consensus_validator.s",
      "response_time": 5.9501142501831055,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'consensus_signature_verification' 함수가 존재하며, 해당 함수 내부에서 0xbebaedac, 0xefbeadde와 같은 상수 및 곱셈(mulq) 연산이 사용되고 있습니다. 이는 전통적인 RSA, DSA, ECDSA 등 비양자내성 서명 알고리즘에서 흔히 사용되는 모듈러 연산 및 상수 패턴과 유사합니다. 또한, 별도의 PQC(양자내성암호) 관련 알고리즘이나 라이브러리 문자열이 발견되지 않았습니다.",
        "detected_algorithms": [
          "RSA(추정)",
          "ECDSA(추정)"
        ],
        "recommendations": "블록체인 합의 검증 및 서명 검증 로직에 대해 양자내성암호(PQC) 기반의 서명 알고리즘(예: Dilithium, Falcon, SPHINCS+)으로의 전환을 권장합니다. 기존 RSA, ECDSA 등은 양자컴퓨터 환경에서 안전하지 않으므로, PQC 표준 알고리즘 도입을 검토하십시오.",
        "evidence": "함수명 'consensus_signature_verification', 상수 0xbebaedac, 0xefbeadde, 곱셈(mulq) 연산, 별도의 PQC 관련 문자열 부재",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "blockchain_consensus_validator",
      "file_name": "blockchain_consensus_validator.s",
      "response_time": 2.4733598232269287,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "chacha20_stream_processor",
      "file_name": "chacha20_stream_processor.s",
      "response_time": 4.757128953933716,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에서 발견된 문자열과 코드 패턴은 ChaCha20 스트림 암호(대칭키 기반) 구현에 해당합니다. RSA, DSA, ECDSA 등 비양자내성 공개키 암호 알고리즘의 시그니처, 상수, 함수 호출, 라이브러리 문자열은 전혀 발견되지 않았습니다.",
        "detected_algorithms": [
          "ChaCha20"
        ],
        "recommendations": "본 바이너리는 공개키 기반 비양자내성암호(PQC 미지원) 취약점과는 무관합니다. 다만, 키 교환이나 서명 등 비대칭 암호가 필요한 경우 별도의 PQC 알고리즘 도입을 검토하십시오.",
        "evidence": "\"expand 32-byte k\" 상수, 4x4 상태 행렬, 20 라운드(10 더블 라운드), quarter_round 함수 등 ChaCha20 시그니처가 명확히 확인됨. RSA/DSA/ECDSA 관련 문자열, 상수, 함수 호출 없음.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "chacha20_stream_processor",
      "file_name": "chacha20_stream_processor.s",
      "response_time": 2.3888041973114014,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "cloud_storage_encryption_processor",
      "file_name": "cloud_storage_encryption_processor.s",
      "response_time": 8.034494161605835,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 RSA, DSA, ECDSA 등 명시적 비양자내성암호 알고리즘 시그니처는 발견되지 않았으나, 전통적 블록 암호(예: AES, 자체 FastBlockCipher 등) 및 키 파생 함수가 사용된 정황이 뚜렷합니다. 양자내성(PQC) 알고리즘이나 라이브러리의 흔적은 전혀 없으며, 암호화 연산이 모두 고전적 방식으로 구현되어 있습니다. 특히, 'cloud_key_derivation', 'data_transformation_layer', 'domesticn_cloud_cipher', 'storage_integrity_engine' 등 함수명과 내부 xor, movq, 상수 패턴은 고전 대칭키 암호(블록/스트림) 및 키 파생 함수의 전형적 구조입니다.",
        "detected_algorithms": [
          "Custom Block Cipher",
          "Key Derivation Function (KDF)"
        ],
        "recommendations": "양자내성 암호(PQC) 알고리즘(예: Kyber, Dilithium, Falcon 등)으로 전환하거나, NIST PQC 표준을 지원하는 라이브러리 도입을 권장합니다. 특히, 키 교환 및 서명에 있어 PQC 적용이 시급합니다.",
        "evidence": "함수명(cloud_key_derivation, data_transformation_layer, domesticn_cloud_cipher, storage_integrity_engine), movq/xor 기반 키 파생, 고정 상수 사용, FastBlockCipherveq 등 고전 암호 구조. PQC 관련 문자열, 시그니처, 라이브러리 미발견.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "cloud_storage_encryption_processor",
      "file_name": "cloud_storage_encryption_processor.s",
      "response_time": 3.753032922744751,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "crypto_trading_platform_engine",
      "file_name": "crypto_trading_platform_engine.s",
      "response_time": 7.074894666671753,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'transaction_signature', 'wallet_key_derivation', 'FastBlockCipherveq' 등 암호화 관련 함수명이 발견되었으나, PQC(양자내성암호)로 분류되는 알고리즘의 명확한 흔적은 없고, 전통적인 블록 암호 및 서명 방식(RSA, ECDSA 등)에서 흔히 사용되는 함수명과 패턴이 다수 존재합니다. 특히 'transaction_signature' 함수명은 전통적 디지털 서명(RSA, ECDSA 등) 구현에서 자주 사용됩니다. 또한, 암호화 라이브러리나 PQC 관련 문자열은 발견되지 않았습니다.",
        "detected_algorithms": [
          "(추정) ECDSA",
          "(추정) 블록 암호"
        ],
        "recommendations": "양자컴퓨터 공격에 대비하여 PQC(양자내성암호) 알고리즘(예: Dilithium, Kyber 등)으로 전환을 권장합니다. 특히 디지털 서명 및 키 파생 함수에 대해 PQC 기반 대체 알고리즘 적용을 검토하세요.",
        "evidence": "발견된 함수명: 'transaction_signature', 'wallet_key_derivation', 'FastBlockCipherveq'. 'transaction_signature'는 전통적 서명 알고리즘에서 자주 사용되는 명칭입니다. PQC 관련 문자열이나 알고리즘 시그니처는 미발견.",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "crypto_trading_platform_engine",
      "file_name": "crypto_trading_platform_engine.s",
      "response_time": 3.3759801387786865,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "cryptographic_wallet_manager",
      "file_name": "cryptographic_wallet_manager.s",
      "response_time": 5.515655040740967,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'secp256k1_point_mul', 'curve_sig_sign' 함수 호출 및 secp256k1 연산 관련 코드가 확인되었습니다. 이는 비양자내성 타원곡선 암호(ECDSA, secp256k1) 사용을 명확히 시사합니다. secp256k1은 양자컴퓨터에 취약한 ECDSA 계열 알고리즘입니다.",
        "detected_algorithms": [
          "ECDSA (secp256k1)"
        ],
        "recommendations": "양자내성(PQC) 서명 알고리즘(예: Dilithium, Falcon, SPHINCS+)으로의 전환을 권장합니다. 기존 secp256k1 기반 서명은 양자컴퓨터 등장 시 안전하지 않습니다.",
        "evidence": "함수명 'secp256k1_point_mul', 'curve_sig_sign' 및 관련 곡선 연산(점 곱셈, point_double 등) 명시적 존재. secp256k1은 비트코인 등에서 사용하는 대표적 비양자내성 타원곡선입니다.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "cryptographic_wallet_manager",
      "file_name": "cryptographic_wallet_manager.s",
      "response_time": 4.335313081741333,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "DETECTED: secp256k1 Elliptic Curve Scalar Multiplication (Evidence: secp256k1_point_mul at 0x401090, point_double at 0x401120)",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Explicit evidence of secp256k1 elliptic curve scalar multiplication detected (secp256k1_point_mul, point_double). No explicit evidence of RSA, DSA, DH, ElGamal, Korean algorithms, symmetric ciphers, or hash functions vulnerable to quantum attacks."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "diffie_hellman_key_exchange",
      "file_name": "diffie_hellman_key_exchange.s",
      "response_time": 5.127717733383179,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 'Discrete Logarithm Key Exchange', 'Modular arithmetic', '2048-bit prime', 'RFC 3526 Group 14', 'g^a mod p', 'g^b mod p' 등의 문자열이 발견되었습니다. 이는 Diffie-Hellman(DH) 키 교환 프로토콜의 전형적인 구현 패턴으로, DH는 양자컴퓨터에 취약한 비양자내성암호(Non-PQC)입니다. 특히 RFC 3526 Group 14(2048-bit MODP 그룹)는 전통적인 DH 파라미터로, 양자컴퓨터의 Shor 알고리즘에 의해 쉽게 깨질 수 있습니다.",
        "detected_algorithms": [
          "Diffie-Hellman (DH)"
        ],
        "recommendations": "양자내성(PQC) 키 교환 알고리즘(예: Kyber, NewHope 등)으로 전환을 권장합니다. 기존 DH 기반 키 교환은 양자컴퓨터 환경에서 안전하지 않으므로, NIST PQC 표준에 따라 교체해야 합니다.",
        "evidence": "# Discrete Logarithm Key Exchange Implementation\n# Modular arithmetic based key agreement protocol\n# Using 2048-bit prime for strong security (pre-post_classical)\n# RFC 3526 Group 14 parameters\n# Alice: A = g^a mod p\n# Bob: B = g^b mod p",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "diffie_hellman_key_exchange",
      "file_name": "diffie_hellman_key_exchange.s",
      "response_time": 5.158776044845581,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "DETECTED: Discrete Logarithm Key Exchange (Evidence: compute_public_keys calls fast_modular_exponentiation for g^a mod p and g^b mod p; protocol uses 2048-bit safe prime and generator, consistent with DH/ElGamal/DSA-style key exchange)",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "DETECTED: Modular arithmetic operations (Evidence: fast_modular_exponentiation function implements repeated modular multiplication and division for large integers)",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit implementation of a discrete logarithm-based key exchange protocol (likely Diffie-Hellman or ElGamal) using modular exponentiation over a 2048-bit safe prime. No evidence of RSA, elliptic curve, symmetric ciphers, hash functions, or Korean algorithms. Modular arithmetic for large integers is present."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "digital_signature_processor",
      "file_name": "digital_signature_processor.s",
      "response_time": 6.091612100601196,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'modular_exponentiation' 함수 호출 및 관련 상수 사용이 확인되었습니다. 이는 RSA, DSA, ECDSA 등 비양자내성(Non-PQC) 공개키 암호 알고리즘에서 핵심적으로 사용되는 연산입니다. 또한 'sig_alg_key_generation', 'sig_alg_sign_hash', 'sig_alg_verify_signature' 등 전통적 디지털 서명 알고리즘 구현에서 흔히 쓰이는 함수명이 존재합니다. PQC(양자내성암호) 알고리즘에서는 modular exponentiation을 사용하지 않습니다.",
        "detected_algorithms": [
          "RSA",
          "DSA",
          "ECDSA (가능성 높음)"
        ],
        "recommendations": "양자내성 디지털 서명 알고리즘(예: CRYSTALS-DILITHIUM, FALCON, SPHINCS+)으로 전환을 권장합니다. 기존 RSA/DSA/ECDSA 기반 서명 로직을 PQC 알고리즘으로 대체하고, 관련 라이브러리 및 키 관리 체계도 함께 점검하십시오.",
        "evidence": "함수명: modular_exponentiation, sig_alg_key_generation, sig_alg_sign_hash, sig_alg_verify_signature; 상수 및 연산 패턴: movq, callq, modular exponentiation 관련 레지스터 조작",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "digital_signature_processor",
      "file_name": "digital_signature_processor.s",
      "response_time": 3.821354866027832,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "DETECTED: RSA modular exponentiation (Evidence: modular_exponentiation function at 0x401130, called from sig_alg_key_generation at 0x4010d0)",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "DETECTED: Big integer modular arithmetic (Evidence: modular_exponentiation function at 0x401130 performing imul, divq, and modular reduction)",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "RSA modular exponentiation and big integer modular arithmetic are explicitly implemented in the binary, indicating the presence of quantum-vulnerable RSA cryptography. No evidence of other vulnerable algorithms or cryptographic library/API usage was detected."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "distributed_blockchain_consensus_engine",
      "file_name": "distributed_blockchain_consensus_engine.s",
      "response_time": 10.077270984649658,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 1,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에 'aggregate_validator_signatures', 'verify_validator_identities', 'multi-signature aggregation', 'validator credentials' 등 암호화 서명 및 신원 검증 관련 함수 호출이 다수 존재합니다. 특히 'multi-signature aggregation'은 RSA, ECDSA, DSA 등 비양자내성 서명 알고리즘에서 흔히 사용되는 용어입니다. 또한 'Combines multiple post_classical-vulnerable algorithms'라는 주석에서 양자내성 이전의 알고리즘(RSA, ECDSA 등) 사용을 명시적으로 언급하고 있습니다.",
        "detected_algorithms": [
          "RSA",
          "ECDSA",
          "DSA (가능성 높음)"
        ],
        "recommendations": "양자내성 서명(PQC) 알고리즘(예: Dilithium, Falcon, SPHINCS+)으로 전환을 권장합니다. 기존 RSA, ECDSA, DSA 기반 서명 및 신원 검증 로직을 PQC 알고리즘으로 대체해야 합니다.",
        "evidence": "'aggregate_validator_signatures', 'verify_validator_identities', 'multi-signature aggregation', 'validator credentials', 'Combines multiple post_classical-vulnerable algorithms' 등 암호화 서명 및 신원 검증 관련 함수 및 주석 다수 발견",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "distributed_blockchain_consensus_engine",
      "file_name": "distributed_blockchain_consensus_engine.s",
      "response_time": 4.4695210456848145,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 1,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "DETECTED: BLS signature system (Evidence: call to initialize_bls_signature_system in initialize_consensus_mechanisms)",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "DETECTED: Modular arithmetic (Evidence: call to initialize_vdf_modular_system in initialize_consensus_mechanisms)",
          "cryptographic_library_calls_and_api_signatures": "DETECTED: BLS signature system (Evidence: call to initialize_bls_signature_system in initialize_consensus_mechanisms)",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.7,
        "summary": "Detected explicit initialization of a BLS signature system (which uses elliptic curve pairings and is post-quantum vulnerable) and modular arithmetic for VDFs, both via direct function calls. No explicit evidence of RSA, DSA, DH, ElGamal, symmetric ciphers, hash functions, or Korean algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "dsa_signature_verification",
      "file_name": "dsa_signature_verification.s",
      "response_time": 7.352684020996094,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'NIST FIPS 186-4', 'discrete logarithm problem', '2048-bit prime p', '256-bit prime order q', 'g^x mod p', 'signature component r', 'signature component s', 'modular_inverse', 'g^u1 * y^u2 mod p', 등 DSA(디지털 서명 알고리즘) 관련 명확한 시그니처와 상수, 연산 패턴이 다수 발견되었습니다. DSA는 이산 로그 문제에 기반한 비양자내성(Non-PQC) 서명 알고리즘으로, 양자컴퓨터 환경에서 안전하지 않습니다.",
        "detected_algorithms": [
          "DSA"
        ],
        "recommendations": "본 바이너리는 DSA(비양자내성) 서명 알고리즘을 사용하므로, 양자내성(PQC) 서명 알고리즘(예: CRYSTALS-DILITHIUM, FALCON 등)으로의 전환을 강력히 권장합니다. 또한, 관련 라이브러리와 키 관리 체계도 PQC에 맞게 재설계해야 합니다.",
        "evidence": "# NIST FIPS 186-4 compliant implementation\n# Post_Classical-vulnerable due to discrete logarithm problem\n# Using FIPS 186-4 recommended 2048-bit prime p\n# Load 256-bit prime order q\n# y = g^x mod p where x is private key\n# Compute w = s^(-1) mod q\n# Compute v = ((g^u1 * y^u2) mod p) mod q",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "dsa_signature_verification",
      "file_name": "dsa_signature_verification.s",
      "response_time": 4.740824937820435,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "DETECTED: DSA (Evidence: compute_signature_verification and compute_verification_value functions implement DSA signature verification as per FIPS 186-4, using modular exponentiation, modular inverse, and domain parameters p, q, g)",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "DETECTED: Modular arithmetic operations (Evidence: fast_modular_exponentiation, modular_inverse, and use of mulq/divq for modular multiplication and division in compute_signature_verification and compute_verification_value)",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "DETECTED: Fast modular exponentiation (Evidence: fast_modular_exponentiation function implements square-and-multiply modular exponentiation, commonly used in DSA/DH/ElGamal)",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit implementation of DSA signature verification (FIPS 186-4) using modular exponentiation and modular arithmetic, which is vulnerable to quantum attacks due to reliance on the discrete logarithm problem. No evidence of RSA, ECC, symmetric ciphers, hash functions, or Korean algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "elliptic_curve_point_operations",
      "file_name": "elliptic_curve_point_operations.s",
      "response_time": 11.688268184661865,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내 .data 섹션에 포함된 상수(예: 0x6b17d1f2e12c4247, 0xf8bce6e563a440f2 등)는 NIST P-256(Elliptic Curve) 곡선의 표준 계수와 일치합니다. 이는 ECDSA 또는 ECDH 등 비양자내성 타원곡선암호(ECC) 알고리즘이 구현되어 있음을 강하게 시사합니다. 또한, 함수명(sub_401000 등)과 연산 흐름에서 점 연산(point operation) 및 곱셈, 시프트 등 ECC 관련 연산 패턴이 확인됩니다.",
        "detected_algorithms": [
          "ECDSA",
          "ECC"
        ],
        "recommendations": "양자컴퓨터 공격에 대비해 PQC(Post-Quantum Cryptography) 알고리즘(예: CRYSTALS-DILITHIUM, FALCON, SPHINCS+)로 전환을 권장합니다. ECC 기반 알고리즘은 양자컴퓨터 환경에서 안전하지 않습니다.",
        "evidence": ".data 섹션의 0x6b17d1f2e12c4247, 0xf8bce6e563a440f2, 0x77037d812deb33a0, 0xf4a13945d898c296 등은 NIST P-256 곡선의 G점(x, y 좌표) 및 계수와 일치하며, 이는 ECC(ECDSA/ECDH) 구현의 명확한 증거입니다.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "elliptic_curve_point_operations",
      "file_name": "elliptic_curve_point_operations.s",
      "response_time": 2.959930896759033,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "elliptic_curve_scalar_multiplication",
      "file_name": "elliptic_curve_scalar_multiplication.s",
      "response_time": 6.677913188934326,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 'ec_scalar_multiplication', 'elliptic_point_double', 'elliptic_point_add' 등 타원 곡선(elliptic curve) 연산 관련 함수와 'scalar point multiplication', 'curve parameters' 등의 문자열이 발견되었습니다. 이는 ECDSA, ECDH 등 비양자내성 타원 곡선 기반 암호화 알고리즘의 핵심 연산입니다. 양자컴퓨터 환경에서는 Shor 알고리즘 등으로 인해 타원 곡선 기반 암호화가 안전하지 않으므로, PQC(양자내성암호)로의 전환이 필요합니다.",
        "detected_algorithms": [
          "ECDSA",
          "ECDH (추정)"
        ],
        "recommendations": "타원 곡선 기반 알고리즘(ECDSA, ECDH 등) 대신 NIST PQC 표준(예: CRYSTALS-Kyber, Dilithium 등)으로 전환을 권장합니다. 코드 및 라이브러리에서 ECC 관련 구현을 제거하고, PQC 알고리즘을 적용하세요.",
        "evidence": "ec_scalar_multiplication, elliptic_point_double, elliptic_point_add, 'Performs k*P on Geometric Curve', 'curve parameters', 'Signature algorithm implementation' 등 ECC 관련 함수 및 설명 문자열",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "elliptic_curve_scalar_multiplication",
      "file_name": "elliptic_curve_scalar_multiplication.s",
      "response_time": 4.679988145828247,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "DETECTED: Elliptic Curve Scalar Multiplication (Evidence: ec_scalar_multiplication, elliptic_point_double, elliptic_point_add functions)",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Elliptic curve scalar multiplication and point operations are explicitly implemented, which are quantum-vulnerable if used with classical curves. No evidence of other vulnerable cryptographic algorithms or library calls."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "elliptic_mathematical_operations",
      "file_name": "elliptic_mathematical_operations.s",
      "response_time": 7.764002084732056,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 곱셈(mul), 나눗셈(div), 모듈러 연산, 시프트(shr), 반복(loop) 구조와 함께, data_402000, data_402020 등에서 0xffffffffffffffff, 0xffffffff00000001 등 ECDSA/Elliptic Curve 관련 상수(특히 secp256r1/p-256 계열로 추정되는 프라임 필드 상수)가 발견되었습니다. 이는 타원곡선 기반 암호(예: ECDSA, ECDH) 구현의 전형적인 패턴입니다. 또한, 함수명(sub_401000 등)과 연산 흐름이 타원곡선 스칼라 곱셈 및 모듈러 연산과 일치합니다. PQC(양자내성암호)가 아닌, 기존 ECC 기반 암호가 사용되고 있음을 강하게 시사합니다.",
        "detected_algorithms": [
          "ECDSA",
          "Elliptic Curve Cryptography"
        ],
        "recommendations": "양자컴퓨터 공격에 대비하여 PQC(양자내성암호) 알고리즘(예: CRYSTALS-DILITHIUM, FALCON, SPHINCS+)로 전환을 권장합니다. ECC/ECDSA는 양자컴퓨터 환경에서 안전하지 않습니다.",
        "evidence": "data_402000, data_402020에 포함된 0xffffffffffffffff, 0xffffffff00000001 등 secp256r1 계열 상수, 모듈러 연산 및 곱셈/시프트 반복 구조, 타원곡선 연산 패턴",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "elliptic_mathematical_operations",
      "file_name": "elliptic_mathematical_operations.s",
      "response_time": 2.703029155731201,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "ellipticsignature_securehashalgo1_operations",
      "file_name": "ellipticsignature_securehashalgo1_operations.s",
      "response_time": 6.025751829147339,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내 .data 섹션에 포함된 상수(예: 0x6b17d1f2e12c4247, 0xf8bce6e563a440f2 등)는 NIST P-256(Elliptic Curve) 곡선의 표준 파라미터와 일치하며, 이는 ECDSA 또는 ECDH 등 비양자내성 타원곡선 암호(Non-PQC) 사용을 강하게 시사합니다. 또한, 함수명 및 연산 패턴에서 타원곡선 연산 및 해시(SHA-1) 관련 상수(0x67452301 등)도 확인되어, 비양자내성 암호화 알고리즘이 실제로 구현되어 있음을 알 수 있습니다.",
        "detected_algorithms": [
          "ECDSA",
          "SHA-1"
        ],
        "recommendations": "양자내성(PQC) 알고리즘(예: CRYSTALS-DILITHIUM, FALCON 등)으로 전환을 권장합니다. 또한, SHA-1 해시 함수는 충돌 취약점이 있으므로 SHA-2 또는 SHA-3 계열로 업그레이드하는 것이 바람직합니다.",
        "evidence": "data_402000, data_402020에 저장된 0x6b17d1f2e12c4247, 0xf8bce6e563a440f2 등은 NIST P-256 타원곡선의 G점 좌표이며, 0x67452301, 0xEFCDAB89 등은 SHA-1 초기값 상수입니다.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "ellipticsignature_securehashalgo1_operations",
      "file_name": "ellipticsignature_securehashalgo1_operations.s",
      "response_time": 4.027997255325317,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "DETECTED: SHA-1 (Evidence: Initialization constants in sub_401400: 0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0; round constants in sub_401500: 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6)",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "SHA-1 hash function implementation detected via explicit initialization and round constants. No other explicit evidence of vulnerable cryptographic algorithms or library usage found."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "embedded_authentication_processor",
      "file_name": "embedded_authentication_processor.s",
      "response_time": 7.2105772495269775,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에는 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 상수, 또는 관련 문자열이 발견되지 않았습니다. 주요 함수명(lightweight_key_schedule, feistel_round_function, domesticn_lightweight_transform, compact_digest_computation)과 코드 패턴은 경량 블록 암호 또는 해시 함수류의 자체 구현 혹은 경량 대칭키 암호 구조(Feistel network 등)로 보입니다. 공개키 기반 비양자내성암호의 흔적은 없습니다.",
        "detected_algorithms": [],
        "recommendations": "현재 바이너리에서는 비양자내성 공개키 암호(RSA, DSA, ECDSA 등) 사용이 탐지되지 않았으나, 대칭키 암호 및 해시 함수의 경우에도 PQC(양자내성암호) 알고리즘 적용을 검토하는 것이 바람직합니다. 향후 공개키 기반 인증 또는 키 교환이 추가될 경우 PQC 알고리즘(NTRU, Kyber, Dilithium 등) 도입을 권장합니다.",
        "evidence": "발견된 함수명 및 코드 패턴: lightweight_key_schedule, feistel_round_function, domesticn_lightweight_transform, compact_digest_computation. RSA/DSA/ECDSA 관련 문자열, 상수, 라이브러리 시그니처 미탐지.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "embedded_authentication_processor",
      "file_name": "embedded_authentication_processor.s",
      "response_time": 2.497354030609131,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "embedded_iot_security_processor",
      "file_name": "embedded_iot_security_processor.s",
      "response_time": 5.63388204574585,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 3,
      "false_negatives": 4,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'curve_based_channel', 'standard algorithms', 'block transformation implementation' 등 전통적인 비양자내성암호(Non-PQC) 사용을 암시하는 문자열이 발견되었습니다. 특히 'curve_based_channel'은 ECDSA/ECDH 등 타원곡선 기반 알고리즘 사용 가능성을 시사하며, 'standard algorithms'는 RSA, DSA, ECDSA 등 기존 암호화 알고리즘을 의미할 수 있습니다. 또한, 키 사이즈가 128비트로 설정되어 있어 양자내성암호에 비해 취약할 수 있습니다.",
        "detected_algorithms": [
          "ECDSA (추정)",
          "RSA (가능성)",
          "Block Cipher (일반적)"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: Kyber, Dilithium, Falcon 등)으로의 전환을 권장합니다. 특히, 타원곡선 기반 알고리즘(ECDSA/ECDH) 및 RSA 등은 양자컴퓨터에 취약하므로, 보안 요구사항에 따라 PQC 알고리즘을 적용해야 합니다.",
        "evidence": "'curve_based_channel', 'standard algorithms', 'block transformation implementation', 키 사이즈 128비트 설정 등",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "embedded_iot_security_processor",
      "file_name": "embedded_iot_security_processor.s",
      "response_time": 5.416553974151611,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "DETECTED: NIST P-192 Elliptic Curve (Evidence: initialize_p192_curve_parameters, setup_curve_based_channel, generate_iot_curve_keypair, perform_iot_CurveExchangeexchange)",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "DETECTED: Key Storage (Evidence: device_private_key(%rip), device_public_key(%rip), digest_algred_secret(%rip))",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.85,
        "summary": "Detected explicit use of NIST P-192 elliptic curve operations for secure channel establishment, which is post-quantum vulnerable. Key storage variables for private/public keys and shared secrets are also present. No evidence of RSA, DSA, DH, ElGamal, Korean domestic algorithms, or vulnerable symmetric/hash algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "enterprise_data_protection_engine",
      "file_name": "enterprise_data_protection_engine.s",
      "response_time": 9.495532035827637,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'large_modular_computation', 'inverse_transform_calculation', 'domesticn_feistel_round', 'substitution_box_transform', 'digest_computation_engine' 등 암호 연산 관련 함수명이 다수 발견되었습니다. 특히 'large_modular_computation' 및 0x10000ffff, 0xefcdab89, 0x98badcfe, 0x10325476 등 상수는 RSA, DSA, ECDSA 등 비양자내성 공개키 암호에서 사용되는 대수적 연산(모듈러 연산, 역원 계산 등)과 유사한 패턴입니다. 또한, Feistel 구조와 S-Box 변환 등은 전통적 블록 암호(예: DES, AES)에서 사용되는 구조로, 양자내성 암호(PQC)와는 무관합니다. PQC 관련 알고리즘(예: lattice, code-based, multivariate 등)이나 관련 문자열, 함수명, 상수는 발견되지 않았습니다.",
        "detected_algorithms": [
          "RSA (의심)",
          "전통적 블록 암호 (Feistel, S-Box)",
          "Digest (해시)"
        ],
        "recommendations": "본 바이너리는 전통적(비양자내성) 암호 알고리즘을 사용하는 것으로 보입니다. 양자 컴퓨팅 환경에서 안전성을 확보하려면 NIST PQC 표준(예: Kyber, Dilithium, Falcon 등) 기반 알고리즘으로 전환을 권장합니다. 공개키 암호화 및 서명, 대칭키 암호화, 해시 함수 등 모든 암호 모듈에 대해 PQC 적용 여부를 점검하십시오.",
        "evidence": "함수명: large_modular_computation, inverse_transform_calculation, domesticn_feistel_round, substitution_box_transform, digest_computation_engine; 상수: 0x10000ffff, 0xefcdab89, 0x98badcfe, 0x10325476; 구조: Feistel, S-Box, Digest",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "enterprise_data_protection_engine",
      "file_name": "enterprise_data_protection_engine.s",
      "response_time": 2.90221905708313,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "feistel_network_operations",
      "file_name": "feistel_network_operations.s",
      "response_time": 4.761209964752197,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에는 RSA, DSA, ECDSA 등 비양자내성 공개키 암호 알고리즘의 시그니처나 관련 상수가 발견되지 않았습니다. 주요 연산은 Feistel 네트워크 기반의 대칭키 블록 암호 구조(예: DES, Blowfish 등)로 보이며, 공개키 암호화 또는 디지털 서명 관련 코드 패턴은 존재하지 않습니다.",
        "detected_algorithms": [],
        "recommendations": "현재 바이너리는 대칭키 기반 구조만을 사용하고 있어 PQC(양자내성암호)로의 전환 필요성은 낮습니다. 단, 향후 공개키 암호화 또는 서명 기능이 추가될 경우 PQC 알고리즘(Kyber, Dilithium 등) 도입을 권장합니다.",
        "evidence": "Feistel 네트워크 구조, S-box 테이블 접근, k_cipher_4 등 대칭키 암호화 관련 패턴만 존재. RSA, ECDSA, DSA, 공개키 상수(예: 0x10001, P, Q, G 등) 및 관련 라이브러리 문자열 미발견.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "feistel_network_operations",
      "file_name": "feistel_network_operations.s",
      "response_time": 3.492898941040039,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "financial_cryptographic_accelerator",
      "file_name": "financial_cryptographic_accelerator.s",
      "response_time": 7.822979211807251,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'large_prime_verification', 'modular_exponentiation_unit'와 같은 함수명이 확인되며, 이는 큰 소수의 검증 및 모듈러 지수 연산을 수행하는 전형적인 RSA, DSA, 또는 Diffie-Hellman과 같은 비양자내성 공개키 암호 알고리즘의 핵심 연산입니다. 또한, 'transaction_digest_generator' 등 해시/서명 관련 함수도 존재하나, PQC(양자내성암호) 관련 알고리즘이나 라이브러리의 흔적은 발견되지 않았습니다.",
        "detected_algorithms": [
          "RSA",
          "DSA (가능성)",
          "Diffie-Hellman (가능성)"
        ],
        "recommendations": "양자 컴퓨팅 환경에서 안전한 암호화 체계를 위해 Kyber, Dilithium, Falcon 등 NIST 표준 PQC 알고리즘으로의 전환을 권장합니다. 기존 RSA/DSA/디피-헬만 기반 모듈은 단계적으로 PQC로 대체해야 합니다.",
        "evidence": "함수명: 'large_prime_verification', 'modular_exponentiation_unit' (모두 RSA/DSA/DH에서 핵심적으로 사용되는 연산). 바이너리 내에서 큰 소수 상수 및 모듈러 연산 패턴 확인.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "financial_cryptographic_accelerator",
      "file_name": "financial_cryptographic_accelerator.s",
      "response_time": 5.311671018600464,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "DETECTED: RSA modular exponentiation (Evidence: modular_exponentiation_unit at 0x401210 implements repeated squaring and multiplication, classic for RSA modular exponentiation)",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "DETECTED: Big integer arithmetic (Evidence: modular_exponentiation_unit at 0x401210 and large_prime_verification at 0x4011e0 perform arithmetic on 64-bit values, typical for big integer/modular operations)",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "RSA modular exponentiation and big integer arithmetic are explicitly implemented in the binary (modular_exponentiation_unit and large_prime_verification). No explicit evidence of other vulnerable algorithms or cryptographic library/API usage."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "government_classified_system_processor",
      "file_name": "government_classified_system_processor.s",
      "response_time": 7.78463888168335,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 RSA, ECDSA, DSA 등 명시적인 비양자내성암호 알고리즘 시그니처나 라이브러리 문자열은 직접적으로 발견되지 않았으나, 함수명(classified_key_generation, document_protection_layer, domesticn_government_cipher) 및 암호화 관련 상수 패턴(예: 0xbebaedac, 0xefbeadde, 0xfeedfeeed 등)과 FastBlockCipherveq 등 암호화 연산을 암시하는 문자열이 존재합니다. 이는 전통적인 블록 암호 또는 비양자내성 공개키 기반 암호(예: RSA, ECDSA 등) 사용 가능성을 시사합니다. 또한, PQC(양자내성암호) 관련 알고리즘이나 라이브러리, 시그니처는 전혀 발견되지 않았습니다.",
        "detected_algorithms": [],
        "recommendations": "현재 바이너리는 암호화 연산을 수행하나, PQC(양자내성암호) 사용 증거가 없으므로, 양자컴퓨터 공격에 대비해 Kyber, Dilithium 등 NIST 표준 PQC 알고리즘으로 전환을 권장합니다. 기존 블록 암호도 PQC 안전성을 검토해야 합니다.",
        "evidence": "함수명(classified_key_generation, document_protection_layer, domesticn_government_cipher), 암호화 관련 상수(0xbebaedac, 0xefbeadde, 0xfeedfeeed), FastBlockCipherveq 등 암호화 연산을 암시하는 문자열",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "government_classified_system_processor",
      "file_name": "government_classified_system_processor.s",
      "response_time": 2.945591688156128,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "hash_digest_operations",
      "file_name": "hash_digest_operations.s",
      "response_time": 5.833248853683472,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에서는 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처나 관련 문자열이 발견되지 않았습니다. 주요 상수(0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0)와 연산 패턴으로 볼 때, 이는 MD5, SHA-1 등 해시 함수 구현에 해당합니다. 해시 함수는 자체적으로 비밀키 기반 암호화가 아니므로 PQC(양자내성암호)와 직접적인 관련이 없습니다.",
        "detected_algorithms": [
          "MD5",
          "SHA-1"
        ],
        "recommendations": "해시 함수만 사용 중이므로 PQC 전환이 직접적으로 필요하지 않습니다. 다만, MD5와 SHA-1은 충돌 취약점이 있으므로 SHA-2 또는 SHA-3 계열로의 업그레이드를 권장합니다.",
        "evidence": "0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 등은 MD5/SHA-1 초기값이며, RSA/DSA/ECDSA 관련 시그니처나 라이브러리 문자열은 없음.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "hash_digest_operations",
      "file_name": "hash_digest_operations.s",
      "response_time": 6.212906122207642,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "DETECTED: MD5 (Evidence: Initialization constants 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476 in sub_401000 and sub_401100); DETECTED: SHA-1 (Evidence: Initialization constants 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 in sub_401300 and sub_401390)",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit implementation of MD5 and SHA-1 cryptographic hash functions based on their unique initialization constants and processing structure. No evidence of RSA, ECC, DSA, DH, ElGamal, symmetric ciphers, Korean algorithms, or cryptographic library/API usage."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "hight_lightweight_cipher",
      "file_name": "hight_lightweight_cipher.s",
      "response_time": 6.180022716522217,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 사용된 'LIGHTWEIGHT_BLOCK' 암호는 64비트 블록 크기, 128비트 키, 32라운드 구조를 가지며, 주석에 'Post_Classical-vulnerable to Grover's algorithm (64-bit effective security)'라고 명시되어 있습니다. 이는 양자컴퓨터의 Grover 알고리즘에 취약하여, 양자내성(PQC) 암호가 아님을 의미합니다. 또한 RSA, DSA, ECDSA 등 전통적 공개키 암호는 발견되지 않았으나, 대칭키 기반의 비양자내성 블록 암호가 사용되고 있습니다.",
        "detected_algorithms": [
          "Custom Lightweight Block Cipher (비양자내성)"
        ],
        "recommendations": "양자내성 대칭키 암호(예: 256비트 이상 키 크기의 AES) 또는 PQC 표준 알고리즘(예: Kyber, Dilithium 등)으로 전환을 권장합니다. 128비트 키 및 64비트 블록 크기는 양자 환경에서 충분한 보안을 제공하지 않습니다.",
        "evidence": "# LIGHTWEIGHT_BLOCK Lightweight Block Cipher Implementation\n# Post_Classical-vulnerable to Grover's algorithm (64-bit effective security)\nmovq $64, %rax                  # Block size in bits\nmovq $128, %rbx                 # Key size in bits\nmovq $32, %rcx                  # Number of rounds",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "hight_lightweight_cipher",
      "file_name": "hight_lightweight_cipher.s",
      "response_time": 3.114285945892334,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of standard cryptographic algorithms, libraries, or API calls vulnerable to quantum attacks was detected in the provided assembly code. The code appears to implement a custom lightweight block cipher, but without explicit references to known vulnerable algorithms or libraries."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "hybrid_banking_security_system",
      "file_name": "hybrid_banking_security_system.s",
      "response_time": 6.451463937759399,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내 함수명 및 주석에서 'asymmetric verification', 'client certificate', 'modular arithmetic', 'attestation', 'FastBlockCipher', 'certificate size: 256' 등의 키워드가 반복적으로 등장합니다. 이는 RSA, ECDSA 등 비양자내성 공개키 기반 인증 및 서명 알고리즘의 전형적인 구현 패턴입니다. 특히 'modular arithmetic'과 'certificate size: 256'은 2048비트 RSA 또는 256비트 ECDSA 키 길이와 일치합니다. 또한, 'authenticate_client_identity', 'create_transaction_attestation' 등은 전통적 공개키 기반 인증 및 서명 절차를 암시합니다. PQC(양자내성암호) 관련 알고리즘이나 라이브러리, 시그니처는 발견되지 않았습니다.",
        "detected_algorithms": [
          "RSA",
          "ECDSA"
        ],
        "recommendations": "양자 컴퓨팅에 안전한 PQC(양자내성암호) 기반 인증 및 서명 알고리즘(예: CRYSTALS-Dilithium, Falcon, Kyber 등)으로 전환을 권장합니다. 하이브리드 모드(전통+PQC) 적용도 고려하십시오.",
        "evidence": "주요 함수명: authenticate_client_identity, create_transaction_attestation, modular arithmetic, certificate size: 256, asymmetric verification, client certificate, FastBlockCipher. 이는 RSA/ECDSA 기반 인증 및 서명 구현의 전형적 패턴입니다.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "hybrid_banking_security_system",
      "file_name": "hybrid_banking_security_system.s",
      "response_time": 2.855660915374756,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "DETECTED: RSA (Evidence: perform_modular_exponentiation call in authenticate_client_identity function)",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "DETECTED: Modular arithmetic (Evidence: perform_modular_exponentiation call in authenticate_client_identity function)",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.85,
        "summary": "RSA modular exponentiation and modular arithmetic operations are explicitly detected via the perform_modular_exponentiation call in the authenticate_client_identity function. No explicit evidence of other vulnerable cryptographic algorithms or library usage is present in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "industrial_control_security",
      "file_name": "industrial_control_security.s",
      "response_time": 5.519680976867676,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리 내에서는 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 상수, 라이브러리 문자열이 발견되지 않았습니다. 주요 함수명(fast_cipher_key_schedule, fast_cipher_encrypt_block, scada_protocol_auth) 및 코드 패턴은 맞춤형 대칭키 기반 블록 암호 또는 인증 로직으로 보이며, 공개키 기반 비양자내성암호 사용 흔적은 없습니다.",
        "detected_algorithms": [],
        "recommendations": "현재 바이너리에서는 비양자내성 공개키 암호 사용이 탐지되지 않았으나, 맞춤형 대칭키 암호의 안전성 검토와 함께 향후 PQC 표준 알고리즘 도입을 고려하시기 바랍니다.",
        "evidence": "RSA, DSA, ECDSA, DH, ECC, PKCS, ASN.1 등 관련 문자열 및 상수 미발견. 함수명과 코드 흐름상 공개키 암호화 연산(지수승, 모듈러 연산 등) 미탐지.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "industrial_control_security",
      "file_name": "industrial_control_security.s",
      "response_time": 2.7442688941955566,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "industrial_security_coprocessor",
      "file_name": "industrial_security_coprocessor.s",
      "response_time": 5.20223593711853,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리 내에는 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 관련 상수, 또는 암호화 라이브러리 문자열이 직접적으로 발견되지 않았습니다. 함수명 및 상수 패턴으로 미루어볼 때, 자체 구현된 블록 암호 및 해시/키 파생 함수가 사용된 것으로 보이나, 전통적인 공개키 기반 비양자내성암호의 흔적은 없습니다.",
        "detected_algorithms": [],
        "recommendations": "양자내성암호(PQC)로의 전환을 고려할 때, 현재 바이너리에서 사용된 맞춤형 또는 자체 암호화 구현의 안전성 검토가 필요합니다. 표준화된 PQC 알고리즘(NIST 선정)을 적용하는 것이 권장됩니다.",
        "evidence": "industrial_key_derivation, block_transformation_unit, control_system_digest 등 함수명과 상수값이 있으나, RSA/DSA/ECDSA 등 전통적 비양자내성암호의 시그니처나 라이브러리 문자열은 없음.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "industrial_security_coprocessor",
      "file_name": "industrial_security_coprocessor.s",
      "response_time": 2.5019967555999756,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "kcdsa_signature_generator",
      "file_name": "kcdsa_signature_generator.s",
      "response_time": 5.662779092788696,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내 'discrete logarithm problem', 'domain parameters (p, q, g)', 'ephemeral key k', 'signature components r, s', 'public key y = g^x mod p' 등의 문자열과 함수명(예: compute_signature_r_component, compute_signature_s_component)로 미루어 보아, 이 바이너리는 KCDSA(국산 DSA 계열) 또는 DSA류(Discrete Logarithm 기반) 서명 알고리즘을 구현하고 있습니다. 이는 양자컴퓨터에 취약한 비양자내성암호(Non-PQC)입니다.",
        "detected_algorithms": [
          "KCDSA",
          "DSA"
        ],
        "recommendations": "양자내성 서명(PQC) 알고리즘(예: CRYSTALS-DILITHIUM, FALCON, SPHINCS+)으로 전환을 권장합니다. 기존 DSA/KCDSA 기반 서명은 장기적으로 안전하지 않습니다.",
        "evidence": "# Post_Classical-vulnerable due to discrete logarithm problem, domain parameters (p, q, g), ephemeral key k, public key y = g^x mod p, signature components r, s, 함수명: compute_signature_r_component, compute_signature_s_component",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "kcdsa_signature_generator",
      "file_name": "kcdsa_signature_generator.s",
      "response_time": 4.576770067214966,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "DETECTED: DSA/DH/ElGamal (Evidence: compute_signature_r_component, compute_signature_s_component, domain parameters p, q, g, and public key y = g^x mod p in load_kcsig_alg_domain_parameters)",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit evidence of discrete logarithm-based signature algorithm (DSA/DH/ElGamal) due to use of domain parameters (p, q, g), ephemeral key generation, and signature components (r, s). No evidence of RSA, elliptic curve, symmetric ciphers, hash functions, or Korean domestic algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "keyexchange_protocol_operations",
      "file_name": "keyexchange_protocol_operations.s",
      "response_time": 4.8200061321258545,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'mul', 'div' 명령어와 함께 큰 정수 상수(0x7fffffffffffffff, 0x8000000000000000 등)를 사용하는 반복 구조가 확인되었습니다. 이는 RSA 또는 DSA와 같은 고전적인 공개키 암호 알고리즘에서 흔히 사용되는 모듈러 연산 패턴입니다. 또한, 'k_cipher_4'와 같은 암호화 관련 함수 호출이 존재하나, PQC(양자내성암호) 관련 알고리즘이나 라이브러리의 흔적은 발견되지 않았습니다.",
        "detected_algorithms": [
          "RSA(추정)",
          "DSA(추정)"
        ],
        "recommendations": "양자 컴퓨터에 안전한 키 교환 및 서명 알고리즘(예: Kyber, Dilithium 등 PQC 표준)으로 전환을 권장합니다. 기존 RSA/DSA 기반 키 교환은 양자 공격에 취약합니다.",
        "evidence": "반복적인 'mul', 'div' 명령어와 대형 상수(0x7fffffffffffffff, 0x8000000000000000) 사용, 'k_cipher_4' 함수 호출",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "keyexchange_protocol_operations",
      "file_name": "keyexchange_protocol_operations.s",
      "response_time": 3.22973370552063,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "korean_authentication_gateway",
      "file_name": "korean_authentication_gateway.asm",
      "response_time": 7.181882858276367,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "바이너리 내에서 RSA, DSA, ECDSA 등 비양자내성(public-key) 암호 알고리즘의 시그니처, 상수, 함수명, 또는 관련 문자열이 발견되지 않았습니다. 주요 암호화 구성요소로는 HIGHT-like 경량 블록 암호(lightweight_cipher_64bit)와 LSH-like 해시 함수(compute_secure_hash)가 사용되고 있습니다. 이들은 대칭키 기반 및 해시 기반 구조로, 현재 알려진 비양자내성(public-key) 취약점과 직접적으로 연관되지 않습니다.",
        "detected_algorithms": [
          "HIGHT-like Block Cipher",
          "LSH-like Hash Function"
        ],
        "recommendations": "현재 구조는 공개키 기반 비양자내성암호(PQC) 취약점과 직접적으로 연관되지 않으나, 향후 공개키 기반 인증 또는 키 교환이 필요한 경우 PQC 알고리즘(예: Kyber, Dilithium 등) 도입을 권장합니다. 해시 및 대칭키 알고리즘의 안전성도 최신 표준을 참고하여 주기적으로 검토하세요.",
        "evidence": "발견된 함수명: lightweight_cipher_64bit, compute_secure_hash, verify_signature. 상수: 0x5A827999 (SHA-1/LSH 계열에서 사용). 공개키 암호(RSA, DSA, ECDSA 등) 관련 문자열, 상수, 함수명 미발견.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "korean_authentication_gateway",
      "file_name": "korean_authentication_gateway.asm",
      "response_time": 3.2478110790252686,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "korean_banking_crypto_lib",
      "file_name": "korean_banking_crypto_lib.asm",
      "response_time": 6.967680215835571,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에는 RSA, DSA, ECDSA 등 비양자내성 공개키 암호 알고리즘의 시그니처나 관련 상수가 전혀 발견되지 않았습니다. 오히려, 128비트 블록 단위, Feistel 구조, 라운드 상수, 회전(ROL), XOR, S-box 유사 처리 등은 LEA, HIGHT 등과 유사한 국산 블록 암호(대칭키) 알고리즘의 특징을 보입니다. 이는 비양자내성 공개키 암호(PKC)가 아니라 대칭키 블록 암호로, 양자컴퓨터에 의한 직접적인 취약점이 존재하지 않습니다.",
        "detected_algorithms": [
          "LEA-like Block Cipher",
          "Feistel Structure Symmetric Cipher"
        ],
        "recommendations": "대칭키 블록 암호는 양자컴퓨터에 대해 Grover 알고리즘으로 인해 키 길이의 절반 수준의 보안만 제공하므로, 충분히 긴 키(예: 256비트)를 사용할 것을 권장합니다. 공개키 암호가 필요한 경우 PQC(양자내성암호) 알고리즘으로 전환을 고려해야 합니다.",
        "evidence": "128비트 블록 처리, Feistel 구조, 라운드 상수(0x9E3779B9 등), ROL(rotate), XOR, S-box 유사 처리, 공개키 연산(RSA/DSA/ECDSA) 관련 함수 및 상수 미발견",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "korean_banking_crypto_lib",
      "file_name": "korean_banking_crypto_lib.asm",
      "response_time": 2.519861936569214,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library/API usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "korean_blockcipher_operations",
      "file_name": "korean_blockcipher_operations.s",
      "response_time": 4.716562271118164,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에는 RSA, DSA, ECDSA 등 비양자내성 공개키 암호 알고리즘의 시그니처, 상수, 라이브러리 문자열이 발견되지 않았습니다. 주요 데이터 영역에는 S-box, 라운드 상수 등 블록 암호(예: AES)에서 사용되는 것으로 추정되는 값들이 존재하지만, 이는 대칭키 암호로 양자컴퓨터에 대해 상대적으로 안전합니다.",
        "detected_algorithms": [],
        "recommendations": "공개키 기반 암호화(예: 인증, 키 교환 등)를 추가 구현할 경우, PQC(양자내성암호) 알고리즘 사용을 적극 검토하십시오. 현재 바이너리에는 비양자내성 공개키 암호 사용 흔적이 없습니다.",
        "evidence": "S-box 및 라운드 상수로 추정되는 data_402000, data_402020, data_402040 등만 존재하며, RSA/DSA/ECDSA 관련 문자열, 상수, 라이브러리 호출이 없습니다.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "korean_blockcipher_operations",
      "file_name": "korean_blockcipher_operations.s",
      "response_time": 3.4523799419403076,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly/binary code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "korean_digital_signature_core",
      "file_name": "korean_digital_signature_core.asm",
      "response_time": 6.250247240066528,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에는 'discrete logarithm problem' 기반의 공개키 서명 구현이 명시되어 있으며, 이는 DSA 또는 유사한 비양자내성(Non-PQC) 서명 알고리즘의 특징입니다. 'prime_p', 'generator_g', 'subgroup_q' 등 DSA/ElGamal 계열에서 사용하는 파라미터가 존재하고, 'modular_exponentiation', 'modular_multiplication', 'modular_reduction' 등 전형적인 고전 공개키 연산이 구현되어 있습니다. 이는 양자컴퓨터에 취약한 알고리즘입니다.",
        "detected_algorithms": [
          "DSA-like (Discrete Logarithm based)"
        ],
        "recommendations": "양자내성(PQC) 서명 알고리즘(예: CRYSTALS-DILITHIUM, FALCON 등)으로 전환을 권장합니다. 기존 discrete logarithm 기반 서명은 양자컴퓨터 공격에 취약하므로, 장기 보안이 필요한 경우 PQC 알고리즘 도입이 필요합니다.",
        "evidence": "코드 내 'discrete logarithm problem', 'prime_p', 'generator_g', 'subgroup_q', 'modular_exponentiation', 'signature_generation' 등 DSA/ElGamal 계열 시그니처 및 연산 패턴이 명확히 존재함.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "korean_digital_signature_core",
      "file_name": "korean_digital_signature_core.asm",
      "response_time": 4.8206939697265625,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 4,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "DETECTED: Discrete Logarithm Signature Scheme (Evidence: signature_generation, modular_exponentiation, use of generator_g, prime_p, subgroup_q, and modular exponentiation for signature generation and verification functions)",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "DETECTED: Modular Arithmetic Operations (Evidence: modular_exponentiation, montgomery_multiply, modular_subtraction, modular_multiplication function calls and implementations)",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "DETECTED: Montgomery Multiplication Optimization (Evidence: montgomery_multiply function for efficient modular arithmetic)",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "DETECTED: Stack Allocation for Ephemeral Key (Evidence: sub rsp, 512 and lea instructions for temporary key storage in signature_generation)",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit implementation of a discrete logarithm-based digital signature scheme (such as DSA or ElGamal signature), with modular exponentiation and Montgomery multiplication for large integer arithmetic. No evidence of RSA, elliptic curve, symmetric ciphers, hash functions, or Korean algorithms. Stack-based key storage and modular arithmetic optimizations are present."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "korean_embedded_cipher_module",
      "file_name": "korean_embedded_cipher_module.asm",
      "response_time": 6.515100002288818,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리는 64비트 블록 기반의 경량 블록 암호(ARX 구조, 32라운드, whitening, rotation, XOR, 상수 사용 등)를 구현하고 있습니다. RSA, DSA, ECDSA 등 비양자내성 공개키 암호 알고리즘의 시그니처나 관련 문자열, 상수, 패턴은 전혀 발견되지 않았습니다. 또한, 본 알고리즘은 대칭키 기반의 경량 블록 암호로, Grover 알고리즘에 의한 양자 공격에만 제한적으로 영향을 받으며, 공개키 기반의 PQC 취약점과는 무관합니다.",
        "detected_algorithms": [
          "Custom Lightweight Block Cipher (ARX structure)"
        ],
        "recommendations": "공개키 기반 통신이 필요한 경우, PQC(양자내성암호) 알고리즘(예: Kyber, Dilithium 등) 도입을 고려하세요. 대칭키 암호의 경우 키 길이를 충분히 길게(예: 256비트) 설정하면 양자 공격에 대한 내성이 향상됩니다.",
        "evidence": "바이너리 내에 RSA, DSA, ECDSA, ECC, DH, 공개키 관련 상수 및 함수명 미발견. 64비트 블록, 32라운드, ARX(ADD-ROTATE-XOR) 구조, whitening, delta_const(0x5A827999) 등 대칭키 블록 암호 구현 패턴만 존재.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "korean_embedded_cipher_module",
      "file_name": "korean_embedded_cipher_module.asm",
      "response_time": 2.278265953063965,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "korean_iot_sensor_firmware",
      "file_name": "korean_iot_sensor_firmware.asm",
      "response_time": 9.986630916595459,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에는 RSA, DSA, ECDSA 등 비양자내성(Non-PQC) 공개키 암호 알고리즘의 시그니처, 상수, 또는 관련 문자열이 발견되지 않았습니다. 바이너리 내 구현은 64비트 블록, 32라운드 구조의 경량 블록 암호로, 주로 IoT 환경에서 사용되는 대칭키 기반 알고리즘으로 보입니다. 공개키 기반 비양자내성암호 사용 흔적이 없습니다.",
        "detected_algorithms": [],
        "recommendations": "현재 구조는 대칭키 기반 경량 블록 암호로, PQC(양자내성암호) 전환이 필요한 공개키 암호화(RSA, ECC 등) 사용이 확인되지 않았습니다. 만약 향후 공개키 기반 인증 또는 키 교환이 필요하다면, NIST PQC 표준(예: Kyber, Dilithium 등) 도입을 권장합니다.",
        "evidence": "바이너리 내 'RSA', 'DSA', 'ECDSA', 'PKCS', 'modulus', 'public key', 'private key', 'asn1', 'prime', 'curve', 'signature', 'verify', 'encrypt', 'decrypt' 등 비양자내성 공개키 암호 관련 문자열 및 상수 미발견. 구현된 알고리즘은 64비트 블록, 32라운드, 키 화이트닝 및 단순 회전/합산/배타적 논리합 기반의 경량 대칭키 암호로 추정됨.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "korean_iot_sensor_firmware",
      "file_name": "korean_iot_sensor_firmware.asm",
      "response_time": 2.9983930587768555,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "korean_pki_signature_engine",
      "file_name": "korean_pki_signature_engine.asm",
      "response_time": 11.607115983963013,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 'modular_exp', 'Montgomery multiplication', 'prime_modulus', 'signature_generate', 'signature_verify' 등 전통적인 모듈러 산술 및 서명 생성/검증 루틴이 확인되었습니다. 특히, 'g^k mod p', 'k^-1 * (H(m) + x*r) mod q', 'v = (g^u1 * y^u2 mod p) mod q' 등은 DSA(ECDSA 아님) 또는 유사한 비양자내성 서명 알고리즘의 전형적인 수식입니다. Montgomery 곱셈 및 모듈러 지수승 루프는 RSA/DSA/DH류의 고전 공개키 암호에서만 사용되는 패턴입니다.",
        "detected_algorithms": [
          "DSA",
          "Modular Exponentiation (RSA/DSA/DH류)"
        ],
        "recommendations": "양자내성(PQC) 서명 알고리즘(예: CRYSTALS-DILITHIUM, FALCON 등)으로 전환을 권장합니다. 기존 DSA/RSA 기반 서명은 양자컴퓨터에 취약하므로, NIST PQC 표준을 참고하여 구현을 교체하십시오.",
        "evidence": "코드 내 'modular_exp', 'Montgomery multiplication', 'prime_modulus', 'signature_generate', 'signature_verify', 'g^k mod p', 'k^-1 * (H(m) + x*r) mod q', 'v = (g^u1 * y^u2 mod p) mod q' 등 DSA/RSA/DH류의 수식 및 루틴이 명확히 존재함.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "korean_pki_signature_engine",
      "file_name": "korean_pki_signature_engine.asm",
      "response_time": 4.429440975189209,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "DETECTED: DSA (Evidence: signature_generate and signature_verify functions implement DSA signature generation and verification logic, including modular exponentiation and discrete log operations)",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "DETECTED: Modular arithmetic operations (Evidence: modular_exp and montgomery_multiply functions implement big integer modular exponentiation and Montgomery multiplication)",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "DETECTED: Montgomery multiplication (Evidence: montgomery_multiply function implements Montgomery reduction for modular multiplication)",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit implementation of DSA signature generation and verification using modular exponentiation and Montgomery multiplication, which are quantum-vulnerable. No evidence of RSA, elliptic curve, symmetric ciphers, hash functions, or Korean algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "lea_block_cipher_engine",
      "file_name": "lea_block_cipher_engine.s",
      "response_time": 4.556705951690674,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 확인된 'FAST_BLOCK (Lightweight Encryption Algorithm)'은 블록 암호로, 양자내성암호(PQC)가 아닌 전통적 대칭키 암호 방식입니다. 주석에 'Post_Classical-vulnerable to Grover's algorithm'이라는 언급이 있어, 양자 컴퓨터의 Grover 알고리즘에 취약함을 명시하고 있습니다. RSA, DSA, ECDSA 등 비대칭키 알고리즘의 시그니처는 발견되지 않았으나, 해당 블록 암호 역시 PQC가 아니므로 양자 환경에서 안전하지 않습니다.",
        "detected_algorithms": [
          "FAST_BLOCK (대칭키 블록 암호)"
        ],
        "recommendations": "양자내성 대칭키 암호(예: 더 긴 키 길이의 AES) 또는 PQC 표준 알고리즘(예: Kyber, Dilithium 등)으로의 전환을 권장합니다. 특히, 장기 보안이 필요한 경우 PQC 알고리즘 도입을 적극 검토해야 합니다.",
        "evidence": "# FAST_BLOCK (Lightweight Encryption Algorithm) Block Cipher\n# Post_Classical-vulnerable to Grover's algorithm\n128/192/256-bit keys with 24/28/32 rounds respectively",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "lea_block_cipher_engine",
      "file_name": "lea_block_cipher_engine.s",
      "response_time": 2.529633045196533,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of known quantum-vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "legacy_hash_computation",
      "file_name": "legacy_hash_computation.s",
      "response_time": 6.145750045776367,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에서는 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 상수, 또는 관련 문자열이 발견되지 않았습니다. 주요 상수(예: 0x67452301, 0xefcdab89 등)는 MD5, SHA-1 등 해시 함수의 초기값으로 보이며, 이는 암호화(Encryption/Signature) 알고리즘이 아닌 해시 함수 구현에 해당합니다.",
        "detected_algorithms": [],
        "recommendations": "현재 바이너리는 비양자내성암호를 사용하지 않으나, 해시 함수(MD5, SHA-1 등)의 경우 충돌 취약점이 존재할 수 있으므로 SHA-2, SHA-3 등 더 안전한 해시 함수로의 전환을 권장합니다. 암호화 또는 서명 기능이 추가될 경우 PQC 알고리즘 도입을 고려하십시오.",
        "evidence": "발견된 상수(0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476 등)는 MD5/SHA-1 해시 함수의 초기값과 일치하며, RSA/DSA/ECDSA 등 비양자내성암호 관련 시그니처, 라이브러리 문자열, 상수는 발견되지 않음.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "legacy_hash_computation",
      "file_name": "legacy_hash_computation.s",
      "response_time": 3.8677380084991455,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "legacy_pki_certificate_processor",
      "file_name": "legacy_pki_certificate_processor.s",
      "response_time": 6.644376039505005,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 1,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'X.509 certificate validation', 'certificate signatures', 'public key algorithm', 'signature algorithm implementation' 등 PKI 및 전통적 서명 알고리즘 관련 문자열이 다수 발견되었습니다. 특히, 'Modular arithmetic implementation', 'Signature algorithm implementation' 등은 RSA, DSA, ECDSA와 같은 비양자내성(Non-PQC) 공개키 암호 알고리즘에서 공통적으로 사용되는 연산입니다. 또한, 'certificate_chain', 'extract_public_key_algorithm' 등은 전통적인 X.509 기반 인증서 체인 검증 로직에서 흔히 사용되는 용어입니다. PQC(양자내성암호) 관련 용어나 알고리즘은 전혀 확인되지 않았습니다.",
        "detected_algorithms": [
          "RSA",
          "DSA",
          "ECDSA"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: Dilithium, Falcon, Kyber 등) 기반의 인증서 및 서명 검증 로직으로 전환을 권장합니다. 기존 RSA, DSA, ECDSA 등 비양자내성 알고리즘 사용을 중단하고, NIST PQC 표준을 적용하세요.",
        "evidence": "발견된 문자열: 'X.509 certificate validation', 'certificate signatures', 'public key algorithm', 'Signature algorithm implementation', 'Modular arithmetic implementation', 'certificate_chain', 'extract_public_key_algorithm'. 이는 RSA/DSA/ECDSA 등 비양자내성암호의 전형적 시그니처 및 연산 패턴입니다.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "legacy_pki_certificate_processor",
      "file_name": "legacy_pki_certificate_processor.s",
      "response_time": 5.248824119567871,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 4,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithm implementations or library calls detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "md5_sha1_hash_processor",
      "file_name": "md5_sha1_hash_processor.s",
      "response_time": 5.967074155807495,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 MD5 및 SHA-1로 추정되는 해시 함수의 초기 상수(0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0)가 발견되었습니다. 이는 각각 MD5와 SHA-1의 초기화 벡터로, 두 해시 함수 모두 양자컴퓨터(특히 Grover's algorithm) 및 충돌 공격에 취약한 것으로 알려져 있습니다. 또한, 'Legacy cryptographic hash functions', 'Post_Classical-vulnerable to Grover's algorithm and collision attacks' 등의 주석이 존재하여 비양자내성 해시 사용을 명확히 시사합니다.",
        "detected_algorithms": [
          "MD5",
          "SHA-1"
        ],
        "recommendations": "MD5 및 SHA-1과 같은 비양자내성 해시 함수 대신, SHA-2, SHA-3 또는 PQC(양자내성) 해시 함수(예: SHAKE, KangarooTwelve 등)로의 전환을 권장합니다. 장기적으로는 PQC 표준에 부합하는 해시 및 서명 알고리즘 도입이 필요합니다.",
        "evidence": "발견된 상수: 0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0 (MD5/SHA-1 IV); 주석: 'Legacy cryptographic hash functions', 'Post_Classical-vulnerable to Grover's algorithm and collision attacks'",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "md5_sha1_hash_processor",
      "file_name": "md5_sha1_hash_processor.s",
      "response_time": 3.909158945083618,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "DETECTED: MD5 (Evidence: hash_alg_state initialized with A=0x67452301, B=0xEFCDAB89, C=0x98BADCFE, D=0x10325476 in initialize_hash_contexts)\nDETECTED: SHA-1 (Evidence: digest_alg1_state initialized with H0=0x67452301, H1=0xEFCDAB89, H2=0x98BADCFE, H3=0x10325476, H4=0xC3D2E1F0 in initialize_hash_contexts)",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit initialization patterns for MD5 and SHA-1 hash functions, both of which are vulnerable to quantum attacks and collision attacks. No evidence of other cryptographic primitives or library/API usage."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "medical_device_security_controller",
      "file_name": "medical_device_security_controller.s",
      "response_time": 11.636746883392334,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리 내에서 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 관련 상수, 또는 암호화 라이브러리 문자열이 발견되지 않았습니다. 주요 함수명(예: medical_key_generation, domesticn_medical_cipher, patient_data_protection) 및 코드 패턴을 분석한 결과, 커스텀 블록 암호 또는 단순 XOR/ROL 기반의 자체 구현 암호화 로직이 사용된 것으로 보입니다. 표준 비양자내성 공개키 암호화 알고리즘의 흔적은 없습니다.",
        "detected_algorithms": [],
        "recommendations": "커스텀 암호화 구현은 알려진 안전성을 보장하지 않으므로, 양자내성(PQC) 표준 알고리즘(NTRU, Kyber 등) 또는 검증된 대칭키 암호(AES 등)로의 전환을 권장합니다. 또한, 암호화 구현의 안전성 검증을 위해 외부 보안 감사가 필요합니다.",
        "evidence": "RSA, DSA, ECDSA, DH, ECC, SHA-1 등 비양자내성암호 관련 문자열, 상수, 라이브러리 시그니처가 전혀 발견되지 않음. 함수 내부에서 단순 XOR, ROL, mov, add 등 기본 연산만 사용됨.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "medical_device_security_controller",
      "file_name": "medical_device_security_controller.s",
      "response_time": 3.8268489837646484,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "message_digest_128bit_operations",
      "file_name": "message_digest_128bit_operations.s",
      "response_time": 5.456765174865723,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "해당 바이너리에서 추출된 문자열과 상수(0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xd76aa478 등)는 MD5 또는 유사한 해시 함수의 초기값 및 라운드 상수로 보입니다. 이는 메시지 다이제스트(해시) 연산에 사용되는 값이며, RSA, DSA, ECDSA 등 비양자내성 공개키 암호 알고리즘의 시그니처나 관련 라이브러리 문자열은 발견되지 않았습니다.",
        "detected_algorithms": [
          "MD5 (추정)"
        ],
        "recommendations": "본 바이너리는 공개키 기반 비양자내성암호(PQC 미지원) 사용 증거가 없으나, MD5 해시 함수는 충돌 공격에 취약하므로 SHA-2, SHA-3 등 더 안전한 해시 함수로의 전환을 권장합니다.",
        "evidence": "상수값: 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xd76aa478 등은 MD5 해시 함수의 초기값 및 라운드 상수와 일치합니다.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "message_digest_128bit_operations",
      "file_name": "message_digest_128bit_operations.s",
      "response_time": 2.8224680423736572,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "mobile_cipher_engine",
      "file_name": "mobile_cipher_engine.s",
      "response_time": 5.796884059906006,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 'a5_1_init', 'a5_1_encrypt_frame', 'tea_encrypt_block' 함수 호출이 확인되었습니다. 이는 각각 GSM A5/1 스트림 암호와 TEA(암호화 알고리즘)로, 모두 비양자내성(Non-PQC) 대칭키 암호입니다. RSA, DSA, ECDSA 등 공개키 기반 비양자내성암호는 발견되지 않았으나, 사용된 대칭키 암호 역시 양자컴퓨터에 취약할 수 있습니다.",
        "detected_algorithms": [
          "A5/1",
          "TEA"
        ],
        "recommendations": "양자내성(PQC) 알고리즘 또는 양자내성 대칭키 강화(예: 키 길이 증가, PQC 키 교환과 조합) 적용을 권장합니다. 특히 공개키 암호가 추가될 경우 PQC 알고리즘으로의 전환이 필수적입니다.",
        "evidence": "함수명 'a5_1_init', 'a5_1_encrypt_frame', 'tea_encrypt_block' 및 관련 호출 시그니처가 바이너리 내에 존재함.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "mobile_cipher_engine",
      "file_name": "mobile_cipher_engine.s",
      "response_time": 3.517544746398926,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "mobile_payment_security_engine",
      "file_name": "mobile_payment_security_engine.s",
      "response_time": 6.779715061187744,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 명확한 시그니처나 라이브러리 문자열은 직접적으로 발견되지 않았으나, 함수명(payment_token_generator, domesticn_mobile_cipher, transaction_authentication, mobile_integrity_verification)과 코드 패턴(고정 상수, XOR, IMUL, FastBlockCipherveq 등)으로 미루어볼 때, 전통적인 블록 암호 및 대칭/비대칭 암호화가 사용된 정황이 강하게 나타남. 특히, FastBlockCipherveq와 같은 문자열은 양자내성암호가 아닌 기존 블록 암호(예: AES, DES 등) 또는 자체 구현 암호화일 가능성이 높음. PQC(양자내성암호) 관련 알고리즘이나 라이브러리, 시그니처는 전혀 탐지되지 않음.",
        "detected_algorithms": [
          "Custom Block Cipher (likely non-PQC)",
          "Potential legacy symmetric cipher"
        ],
        "recommendations": "양자컴퓨터 공격에 대비하여 Kyber, Dilithium, Falcon 등 NIST 표준 PQC 알고리즘으로 전환을 권장합니다. 기존 블록/대칭/비대칭 암호화 구현은 양자내성 보장이 불가하므로, PQC 알고리즘 도입 및 라이브러리 적용을 검토하십시오.",
        "evidence": "함수명(payment_token_generator, domesticn_mobile_cipher, transaction_authentication, mobile_integrity_verification), FastBlockCipherveq 문자열, 고정 상수 및 XOR/IMUL 연산 패턴",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "mobile_payment_security_engine",
      "file_name": "mobile_payment_security_engine.s",
      "response_time": 3.2102878093719482,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "network_security_gateway",
      "file_name": "network_security_gateway.s",
      "response_time": 7.588838338851929,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내 함수명(LegacyBlockCipher_schedule, LegacyBlockCipherencrypt_block) 및 코드 패턴에서 'LegacyBlockCipher'라는 명칭이 반복적으로 등장하며, 이는 전통적인 블록 암호(예: AES, DES 등) 또는 자체 구현된 레거시 암호화 알고리즘을 사용하고 있음을 시사합니다. 또한 RSA, DSA, ECDSA 등 공개키 기반 비양자내성암호의 명시적 시그니처는 발견되지 않았으나, 양자내성(PQC) 암호화 또는 관련 라이브러리, 알고리즘의 흔적은 전혀 확인되지 않습니다. 따라서 해당 바이너리는 양자컴퓨터 공격에 취약한 비PQC 암호화만을 사용하는 것으로 평가됩니다.",
        "detected_algorithms": [
          "LegacyBlockCipher (likely AES/DES family or proprietary block cipher)"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: Kyber, Dilithium, Falcon 등)으로 전환하거나, 기존 암호화 방식과 병행 적용을 권장합니다. 또한, NIST PQC 표준화 진행 상황을 참고하여 최신 보안 가이드라인을 준수해야 합니다.",
        "evidence": "함수명 'LegacyBlockCipher_schedule', 'LegacyBlockCipherencrypt_block' 및 블록 암호 관련 상수/패턴(rol, and, shl, add 등) 사용. 공개키 기반 PQC 또는 비PQC(예: RSA, ECDSA) 시그니처는 미발견.",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "network_security_gateway",
      "file_name": "network_security_gateway.s",
      "response_time": 2.6607580184936523,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "neural_network_inference_accelerator",
      "file_name": "neural_network_inference_accelerator.s",
      "response_time": 5.734408855438232,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "바이너리 내에서 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 상수, 또는 관련 문자열이 발견되지 않았습니다. 또한 well-known 암호화 라이브러리(OpenSSL, libcrypto 등) 관련 문자열이나 함수 호출도 존재하지 않습니다. 'domesticn_ai_cipher', 'FastBlockCipherveq' 등은 커스텀 대칭키 블록 암호 또는 난독화된 함수명으로 보이며, 공개키 기반 비양자내성암호의 흔적은 없습니다.",
        "detected_algorithms": [],
        "recommendations": "현재 바이너리에서는 비양자내성 공개키 암호 사용이 탐지되지 않았으나, 커스텀 암호화 구현의 안전성 검증이 필요합니다. 향후 PQC(양자내성암호) 표준 알고리즘(NIST 선정 Kyber, Dilithium 등) 도입을 권장합니다.",
        "evidence": "분석된 함수 및 문자열: 'domesticn_ai_cipher', 'FastBlockCipherveq', k_cipher_4 등. RSA, DSA, ECDSA, libcrypto, openssl 등 관련 문자열 및 시그니처 미발견.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "neural_network_inference_accelerator",
      "file_name": "neural_network_inference_accelerator.s",
      "response_time": 2.2862160205841064,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "ntru_polynomial_processor",
      "file_name": "ntru_polynomial_processor.s",
      "response_time": 7.4172539710998535,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리 문자열에서는 NTRU와 같은 다항식 링 기반 격자 암호(즉, 포스트 양자 암호, PQC) 알고리즘의 구현 흔적이 명확히 나타납니다. RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘 관련 시그니처, 상수, 함수명, 라이브러리 문자열은 전혀 발견되지 않았습니다.",
        "detected_algorithms": [
          "NTRU (Lattice-based PQC)"
        ],
        "recommendations": "현재 바이너리는 PQC(포스트 양자 암호) 알고리즘만을 사용하고 있으므로, 별도의 PQC 전환이 필요하지 않습니다. 다만, 구현의 안전성 및 최신 PQC 표준 준수 여부를 주기적으로 검토하는 것이 좋습니다.",
        "evidence": "다항식 링 연산, N=743(권장 NTRU 파라미터), 'generate_polynomial_keys', 'compute_inverse_polynomial', 'generate_random_ternary', 'public key h = p*g/f mod q' 등 NTRU 관련 명확한 PQC 패턴만 존재. RSA, DSA, ECDSA, DH, ECC 등 비양자내성암호 관련 문자열 및 시그니처는 미발견.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "ntru_polynomial_processor",
      "file_name": "ntru_polynomial_processor.s",
      "response_time": 4.529814958572388,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly code. The code appears to implement lattice-based (post-quantum) cryptography primitives, with no references to legacy or quantum-vulnerable algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "obfuscated_crypto_library_dispatcher",
      "file_name": "obfuscated_crypto_library_dispatcher.s",
      "response_time": 7.37178897857666,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 4,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에 'execute_large_integer_modul' 등 대수적 연산(모듈러 연산) 함수가 존재하며, 이는 RSA, DSA, ECDSA 등 비양자내성 공개키 암호에서 필수적으로 사용되는 연산입니다. 또한, 함수 디스패치 테이블 및 XOR/비트 회전/상수 감산 등으로 알고리즘 식별을 어렵게 하려는 고급 난독화가 적용되어 있지만, 모듈러 연산 구현이 명시적으로 드러나 있어 비양자내성암호 사용 가능성이 매우 높습니다. PQC(양자내성암호)에서는 이러한 대수적 모듈러 연산이 일반적으로 사용되지 않습니다.",
        "detected_algorithms": [
          "RSA",
          "DSA",
          "ECDSA (추정)"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: Kyber, Dilithium, Falcon 등)으로의 전환을 권장합니다. 특히, 모듈러 연산 기반의 공개키 암호는 양자컴퓨터에 취약하므로, 해당 연산이 포함된 모든 경로를 PQC로 대체해야 합니다.",
        "evidence": "execute_large_integer_modul, modular arithmetic implementation, function pointer obfuscated dispatch, XOR/bit rotation/constant subtraction 패턴",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "obfuscated_crypto_library_dispatcher",
      "file_name": "obfuscated_crypto_library_dispatcher.s",
      "response_time": 2.883800745010376,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 5,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "openssl_des_enc",
      "file_name": "openssl_des_enc.asm",
      "response_time": 4.917693853378296,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내 함수명(simple_LegacyBlockCipherencrypt) 및 파일명(openssl_des_enc.asm)에서 DES와 같은 레거시 블록 암호 사용이 강하게 시사됩니다. DES는 양자내성(PQC)이 없는 대칭키 알고리즘으로, 양자 컴퓨터에 취약합니다. RSA, DSA, ECDSA 등 공개키 암호 시그니처는 발견되지 않았으나, DES와 같은 비양자내성 대칭키 암호가 사용되고 있습니다.",
        "detected_algorithms": [
          "DES"
        ],
        "recommendations": "DES와 같은 레거시 블록 암호 대신, PQC(양자내성암호) 또는 최소한 AES-256 등 더 강력한 대칭키 알고리즘으로 전환을 권장합니다. 장기적으로는 NIST PQC 표준 알고리즘 도입을 검토하세요.",
        "evidence": "파일명(openssl_des_enc.asm), 함수명(simple_LegacyBlockCipherencrypt), openssl 및 LegacyBlockCipher 관련 문자열",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "openssl_des_enc",
      "file_name": "openssl_des_enc.asm",
      "response_time": 2.735095739364624,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "openssl_des_enc",
      "file_name": "openssl_des_enc.bin",
      "response_time": 5.770565986633301,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 파일명(openssl_des_enc.bin)과 추출된 문자열에서 'des'가 포함되어 있으며, 이는 DES(Data Encryption Standard) 대칭키 암호화 알고리즘을 사용함을 시사합니다. DES는 양자내성(PQC)이 없는 전통적 대칭키 알고리즘으로, 양자컴퓨터 공격에 취약합니다. RSA, DSA, ECDSA 등 비대칭키 알고리즘의 명확한 시그니처는 발견되지 않았으나, DES 자체가 PQC가 아니므로 비양자내성암호 사용이 확인됩니다.",
        "detected_algorithms": [
          "DES"
        ],
        "recommendations": "DES와 같은 전통적 대칭키 암호화 알고리즘은 양자컴퓨터 환경에서 안전하지 않습니다. PQC(양자내성암호) 알고리즘(예: Kyber, AES-256-GCM 등)으로의 전환을 권장합니다. 또한, DES는 현재 보안성이 매우 낮으므로 최소한 AES-256 등 강력한 대칭키 알고리즘으로 교체해야 합니다.",
        "evidence": "파일명에 'des'가 명시되어 있고, 별도의 비대칭키 알고리즘(RSA, DSA, ECDSA 등) 관련 문자열이나 시그니처는 발견되지 않았으나, DES는 PQC가 아님이 명확합니다.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "openssl_des_enc",
      "file_name": "openssl_des_enc.bin",
      "response_time": 3.076335906982422,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or related library/API usage detected in the provided binary/assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "poly1305_authenticator",
      "file_name": "poly1305_authenticator.s",
      "response_time": 6.396939039230347,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에서는 Poly1305 메시지 인증 코드(MAC) 알고리즘만이 사용되고 있습니다. Poly1305는 대칭키 기반의 인증 코드로, 비양자내성암호(Non-PQC)로 분류되는 RSA, DSA, ECDSA 등 공개키 기반 알고리즘의 사용 흔적이 전혀 발견되지 않았습니다.",
        "detected_algorithms": [
          "Poly1305"
        ],
        "recommendations": "현재 바이너리는 공개키 기반 비양자내성암호를 사용하지 않으므로, 양자내성(PQC) 관련 전환이 필요하지 않습니다. 단, Poly1305는 대칭키 기반이므로 키 관리 및 안전한 키 분배가 중요합니다.",
        "evidence": "바이너리 내 'initialize_poly1305_state', 'load_authentication_key', 'process_16byte_block', 'reduce_modulo_p' 등 Poly1305 관련 함수 및 130비트 모듈러 연산, 256비트 키 분할(r, s) 등 Poly1305 특유의 구현 패턴만이 존재합니다. RSA, DSA, ECDSA, DH, ECC 등 비양자내성 공개키 알고리즘 관련 문자열, 상수, 시그니처는 전혀 발견되지 않았습니다.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "poly1305_authenticator",
      "file_name": "poly1305_authenticator.s",
      "response_time": 3.5381131172180176,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "polymorphic_malware_crypto_engine",
      "file_name": "polymorphic_malware_crypto_engine.s",
      "response_time": 8.733559131622314,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'modular arithmetic', 'modular_key_length', 'setup_standard_modular_context', 'setup_standard_curve_sig_context', 'signature algorithm implementation' 등 전통적인 공개키 암호(특히 RSA, ECDSA 등)에서 사용되는 용어와 패턴이 다수 발견되었습니다. 'modular arithmetic'와 'curve sig(context)'는 각각 RSA/DSA와 ECDSA/곡선 기반 서명 알고리즘의 전형적인 구현 요소입니다. 또한 '2048' 비트 키 길이, 'signature algorithm implementation', 'curve' 등은 비양자내성암호(PQC가 아님)에서 흔히 사용되는 값과 용어입니다. PQC(양자내성암호) 관련 용어나 알고리즘(예: Kyber, Dilithium, Falcon 등)은 전혀 발견되지 않았습니다.",
        "detected_algorithms": [
          "RSA",
          "ECDSA"
        ],
        "recommendations": "본 바이너리는 양자컴퓨터 공격에 취약한 전통적 공개키 암호(RSA, ECDSA 등)를 사용하고 있습니다. 양자내성암호(PQC) 알고리즘(예: Kyber, Dilithium, Falcon 등)으로의 전환을 강력히 권장합니다. 또한, 암호화 라이브러리 및 구현체가 최신 표준을 준수하는지 점검하십시오.",
        "evidence": "발견된 문자열: 'modular arithmetic', 'modular_key_length', '2048', 'setup_standard_modular_context', 'setup_standard_curve_sig_context', 'signature algorithm implementation', 'curve sig', 'standard_key_length', 'block transformation implementation'.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "polymorphic_malware_crypto_engine",
      "file_name": "polymorphic_malware_crypto_engine.s",
      "response_time": 4.137749910354614,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 4,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "polynomial_field_arithmetic_engine",
      "file_name": "polynomial_field_arithmetic_engine.s",
      "response_time": 5.240062952041626,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'elliptic_point_doubling', 'point_scalar_multiplication', 'field_inversion_calculation', 'signature_generation_engine' 등 명칭과, 다항식 필드 연산 및 곡선 연산 함수 호출이 확인됩니다. 이는 타원곡선 기반 암호(예: ECDSA, ECC) 구현의 전형적인 패턴입니다. 타원곡선 암호는 현재 널리 사용되나, 양자컴퓨터에 취약한 비양자내성암호(Non-PQC)로 분류됩니다.",
        "detected_algorithms": [
          "ECDSA",
          "ECC"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: CRYSTALS-DILITHIUM, Falcon, SPHINCS+)로의 전환을 권장합니다. NIST PQC 표준을 참고하여 기존 타원곡선 기반 서명 및 키 교환 로직을 대체하십시오.",
        "evidence": "함수명: elliptic_point_doubling, point_scalar_multiplication, signature_generation_engine. 곡선 연산 및 다항식 필드 연산 관련 명칭과 연산 패턴이 다수 존재.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "polynomial_field_arithmetic_engine",
      "file_name": "polynomial_field_arithmetic_engine.s",
      "response_time": 3.351235866546631,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "DETECTED: Elliptic Curve Point Operations and Scalar Multiplication (Evidence: function calls to 4012d0 <elliptic_point_doubling> and 401300 <point_scalar_multiplication>)",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.85,
        "summary": "Elliptic curve point operations and scalar multiplication are explicitly implemented in this binary (functions: elliptic_point_doubling, point_scalar_multiplication). No explicit evidence of other vulnerable cryptographic algorithms or library calls detected."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "postquantum_multimodal_operations",
      "file_name": "postquantum_multimodal_operations.s",
      "response_time": 6.659697771072388,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리 내에서는 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 명확한 시그니처, 상수, 또는 관련 문자열이 발견되지 않았습니다. 또한, 'k_cipher_4'와 같은 함수명 및 12289, 1024, 524, 503 등 상수값은 NTRU, Kyber, NewHope 등 양자내성암호(PQC)에서 자주 사용되는 파라미터와 유사합니다.",
        "detected_algorithms": [],
        "recommendations": "현재로서는 비양자내성암호 사용 증거가 없으나, 전체 바이너리 및 외부 라이브러리 호출 여부를 추가적으로 확인하는 것이 바람직합니다. PQC 알고리즘이 이미 적용된 것으로 보이나, 최신 PQC 표준(Kyber, Dilithium 등) 적용 여부를 검증하시기 바랍니다.",
        "evidence": "발견된 함수명: k_cipher_4, sub_401xxx 계열 함수, 상수값(12289, 1024, 524, 503 등) - PQC 관련 파라미터와 유사. RSA, ECDSA, DSA, DH, 'openssl', 'libcrypto', 'PKCS', 'prime', 'modulus', 'public key', 'private key' 등 비양자내성암호 관련 문자열 및 시그니처 미발견.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "postquantum_multimodal_operations",
      "file_name": "postquantum_multimodal_operations.s",
      "response_time": 2.5272440910339355,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "publickey_encryption_operations",
      "file_name": "publickey_encryption_operations.s",
      "response_time": 6.658797979354858,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내 .data 섹션에 존재하는 0xffffffffffffffffc90fdaa22168c234 등 상수는 Diffie-Hellman, RSA, DSA 등에서 사용되는 well-known prime modulus(p)와 유사합니다. 또한, sub_401100 함수에서 반복적인 mul/div, shr, test, modular exponentiation(지수 연산) 패턴이 관찰되어, 이는 RSA 또는 Diffie-Hellman과 같은 전통적 공개키 암호 알고리즘의 핵심 연산과 일치합니다. PQC(양자내성암호) 알고리즘의 흔적은 발견되지 않았습니다.",
        "detected_algorithms": [
          "Diffie-Hellman",
          "RSA(가능성 높음)"
        ],
        "recommendations": "양자컴퓨터 공격에 대비하여 Kyber, Dilithium 등 NIST 표준 PQC 알고리즘으로 전환을 권장합니다. 기존 공개키 암호 연산(특히 모듈러 지수 연산) 사용을 중단하고, PQC 라이브러리 적용을 검토하십시오.",
        "evidence": ".data 섹션의 0xffffffffffffffffc90fdaa22168c234, 0xc4c6628b80dc1cd129024e08 등 상수 및 sub_401100 함수의 mul/div/shr 반복 구조(모듈러 지수 연산 패턴)",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "publickey_encryption_operations",
      "file_name": "publickey_encryption_operations.s",
      "response_time": 2.3055238723754883,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "publickey_modular_operations",
      "file_name": "publickey_modular_operations.s",
      "response_time": 6.238815069198608,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 모듈러 연산(곱셈, 나눗셈, 시프트 등)을 반복적으로 수행하는 루프가 확인되며, 이는 RSA, DSA, Diffie-Hellman 등 전통적인 공개키 암호 알고리즘에서 사용되는 모듈러 거듭제곱(예: modular exponentiation) 연산 패턴과 일치합니다. PQC(양자내성암호) 알고리즘에서는 이러한 연산 패턴이 일반적으로 나타나지 않습니다.",
        "detected_algorithms": [
          "RSA",
          "DSA",
          "Diffie-Hellman (가능성)"
        ],
        "recommendations": "양자컴퓨터에 안전한 암호화 방식(예: Kyber, Dilithium 등 PQC 알고리즘)으로의 전환을 권장합니다. 기존 RSA/DSA/디피-헬만 기반 키 교환 및 서명 알고리즘 사용을 중단하거나, 하이브리드 방식으로 PQC를 병행 적용하는 것이 바람직합니다.",
        "evidence": "반복적인 'mul', 'div', 'shr' 명령어와 모듈러 연산 루프, 그리고 .data 섹션의 큰 정수 상수(공개키/비밀키/모듈러스 등으로 추정) 존재",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "publickey_modular_operations",
      "file_name": "publickey_modular_operations.s",
      "response_time": 2.7647860050201416,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or related library/API usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "publickeyalgo_messagedigest5_operations",
      "file_name": "publickeyalgo_messagedigest5_operations.s",
      "response_time": 7.329622030258179,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476 및 0xd76aa478 등 MD5 해시 함수의 초기값 및 상수가 명확히 확인되었습니다. 이는 MD5(비양자내성 해시) 사용을 의미합니다. 또한, 함수명 및 연산 패턴에서 공개키 암호(RSA, DSA, ECDSA 등) 직접적인 시그니처는 발견되지 않았으나, MD5는 전통적으로 공개키 서명(특히 RSA/DSA)과 함께 사용되어 왔으므로, 비양자내성 해시 사용이 확인되었습니다.",
        "detected_algorithms": [
          "MD5"
        ],
        "recommendations": "MD5와 같은 비양자내성 해시 함수 대신 SHA-3, SHA-2, 혹은 PQC(양자내성 해시 및 서명) 알고리즘으로 전환을 권장합니다. 공개키 암호화가 필요한 경우, NIST PQC 표준 알고리즘(예: CRYSTALS-Kyber, Dilithium 등) 도입을 검토하십시오.",
        "evidence": "MD5 초기값(0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476) 및 MD5 라운드 상수(0xd76aa478 등) 발견. 함수 내 해시 초기화 및 연산 패턴이 MD5와 일치.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "publickeyalgo_messagedigest5_operations",
      "file_name": "publickeyalgo_messagedigest5_operations.s",
      "response_time": 3.6006240844726562,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "DETECTED: MD5 (Evidence: Initialization constants in sub_401100 and data_403000 match MD5 specification)",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "MD5 cryptographic hash function detected via explicit initialization constants and round constants; no other explicit evidence of vulnerable cryptographic algorithms found."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "quantum_communication_relay",
      "file_name": "quantum_communication_relay.s",
      "response_time": 7.177789926528931,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "바이너리 내에서 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 상수, 또는 관련 문자열이 발견되지 않았습니다. 함수명과 상수, 호출 패턴을 분석한 결과, 'post_classical_key_distribution', 'entanglement_protection', 'domesticn_post_classical_cipher' 등 명칭과 동작이 양자내성 또는 포스트양자 암호(혹은 그와 유사한 자체 구현)로 추정됩니다. 또한, 전통적인 암호 라이브러리나 알고리즘(RSA, ECDSA 등) 관련 문자열, 상수, 시그니처가 전혀 존재하지 않습니다.",
        "detected_algorithms": [],
        "recommendations": "현재 바이너리에서는 비양자내성암호 사용이 탐지되지 않았으나, 실제 구현이 검증된 PQC 표준(예: NIST PQC 알고리즘)인지 확인이 필요합니다. 공식 PQC 라이브러리 및 표준 알고리즘 적용을 권장합니다.",
        "evidence": "발견된 함수명: post_classical_key_distribution, entanglement_protection, domesticn_post_classical_cipher. 전통적 암호 알고리즘(RSA, DSA, ECDSA 등) 관련 문자열, 상수, 시그니처 미발견.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "quantum_communication_relay",
      "file_name": "quantum_communication_relay.s",
      "response_time": 2.9258878231048584,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "quantum_cryptanalysis_simulation",
      "file_name": "quantum_cryptanalysis_simulation.s",
      "response_time": 7.072950124740601,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 1,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내 'setup_modular_vulnerability_targets', 'modular_1024_keysize', 'initialize_shors_algorithm_simulator', 'setup_curve_vulnerability_targets' 등의 문자열이 존재합니다. 이는 RSA(모듈러 연산 기반), DSA/ECDSA(커브 연산 기반) 등 전통적 비양자내성암호 알고리즘을 대상으로 시뮬레이션 및 취약성 평가를 수행함을 시사합니다. 특히 1024비트 키 사이즈 언급은 RSA 등 고전 공개키 암호의 사용을 암시합니다.",
        "detected_algorithms": [
          "RSA",
          "DSA",
          "ECDSA"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: Kyber, Dilithium 등)으로의 전환을 권장합니다. 기존 RSA, DSA, ECDSA 등은 Shor 알고리즘에 취약하므로, PQC 표준 알고리즘 도입 및 하이브리드 모드 적용을 검토하십시오.",
        "evidence": "modular_1024_keysize, setup_modular_vulnerability_targets, setup_curve_vulnerability_targets, initialize_shors_algorithm_simulator",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "quantum_cryptanalysis_simulation",
      "file_name": "quantum_cryptanalysis_simulation.s",
      "response_time": 9.721812963485718,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 4,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithm implementations or library usage detected in the provided code. All detections are negative due to lack of direct cryptographic API calls, imports, or implementation details."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "quantum_migration_bridge_processor",
      "file_name": "quantum_migration_bridge_processor.s",
      "response_time": 10.374047040939331,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'legacy_algorithm_detector', 'domesticn_legacy_handler' 등 레거시 암호 알고리즘 탐지 및 처리 함수가 존재하며, RSA, DSA, ECDSA 등 비양자내성암호의 직접적인 문자열이나 라이브러리 시그니처는 발견되지 않았으나, 'legacy_algorithm_detector' 및 'domesticn_legacy_handler' 함수 호출 패턴과 명칭으로 미루어 볼 때 기존 비양자내성암호(Non-PQC) 지원 및 사용 가능성이 높음. 또한, 'hybrid_transition_protocol', 'post_classical_safe_replacement' 등 양자내성 전환을 위한 함수가 존재하나, 레거시 알고리즘의 존재 자체가 PQC 미적용 환경임을 시사함.",
        "detected_algorithms": [
          "Legacy (RSA/DSA/ECDSA 가능성)",
          "Hybrid Transition"
        ],
        "recommendations": "바이너리에서 레거시 암호 알고리즘 지원 코드를 완전히 제거하고, NIST 표준 PQC 알고리즘(예: Kyber, Dilithium 등)만을 사용하도록 전환할 것을 권장합니다. 하이브리드 프로토콜 사용 시에도 레거시 알고리즘 의존성을 최소화해야 합니다.",
        "evidence": "함수명: legacy_algorithm_detector, domesticn_legacy_handler, hybrid_transition_protocol, post_classical_safe_replacement 등. 레거시 알고리즘 탐지 및 핸들링 코드 존재.",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "quantum_migration_bridge_processor",
      "file_name": "quantum_migration_bridge_processor.s",
      "response_time": 3.0898189544677734,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "quantum_resistant_lattice_operations",
      "file_name": "quantum_resistant_lattice_operations.s",
      "response_time": 5.714511871337891,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "바이너리에서 추출된 문자열을 분석한 결과, RSA, DSA, ECDSA 등 비양자내성(Non-PQC) 암호 알고리즘의 시그니처, 상수, 함수명, 라이브러리 문자열이 발견되지 않았습니다. 오히려 'lattice', 'Ring-LWE', 'discrete Gaussian', 'LLL', 'Gram-Schmidt', 'Lovasz condition' 등 양자내성(PQC) 암호의 핵심 요소와 관련된 용어 및 연산이 다수 확인되었습니다.",
        "detected_algorithms": [],
        "recommendations": "현재 바이너리는 격자 기반(Ring-LWE 등) 양자내성 암호 기법을 사용하고 있으므로, 별도의 PQC 전환이 필요하지 않습니다. 다만, 구현의 안전성(예: 난수 생성, 오류 분포, 파라미터 선택 등)과 최신 PQC 표준 준수 여부를 주기적으로 점검하는 것이 좋습니다.",
        "evidence": "lattice, Ring-LWE, discrete Gaussian, LLL, Gram-Schmidt, Lovasz condition 등 PQC 관련 용어 및 연산만 존재하며, RSA/DSA/ECDSA 등 비PQC 알고리즘 관련 문자열이나 시그니처는 발견되지 않음.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "quantum_resistant_lattice_operations",
      "file_name": "quantum_resistant_lattice_operations.s",
      "response_time": 2.407896041870117,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "quantum_resistant_migration_bridge",
      "file_name": "quantum_resistant_migration_bridge.s",
      "response_time": 7.803644180297852,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에 'process_with_legacy_algorithms', 'initialize_legacy_modular_context', 'initialize_legacy_curve_context', 'perform_legacy_key_exchange', 'encrypt_with_legacy_block_cipher' 등 명확히 전통적(비양자내성) 암호 알고리즘 처리를 나타내는 함수명이 존재합니다. 특히 'modular', 'curve', 'key exchange', 'block cipher' 등은 RSA, DSA, ECDSA, 전통적 블록 암호(예: AES, 3DES) 등 비양자내성 알고리즘의 사용 가능성을 강하게 시사합니다. 'legacy'라는 명칭은 해당 부분이 양자 공격에 취약한 기존 암호를 의미함을 명확히 드러냅니다.",
        "detected_algorithms": [
          "RSA",
          "ECDSA",
          "Legacy Block Cipher (e.g., AES/3DES)"
        ],
        "recommendations": "하이브리드 및 레거시 모드에서 비양자내성 알고리즘이 사용되고 있으므로, 모든 운영 모드에서 PQC(양자내성암호) 알고리즘만 사용하도록 전환을 권장합니다. 특히, 레거시 및 하이브리드 모드의 완전한 제거 또는 PQC 알고리즘으로의 대체가 필요합니다.",
        "evidence": "함수명: process_with_legacy_algorithms, initialize_legacy_modular_context, initialize_legacy_curve_context, perform_legacy_key_exchange, encrypt_with_legacy_block_cipher 등. 'legacy', 'modular', 'curve', 'key exchange', 'block cipher' 키워드.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "quantum_resistant_migration_bridge",
      "file_name": "quantum_resistant_migration_bridge.s",
      "response_time": 2.655897855758667,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly code. All detections require explicit function calls, imports, or constants, which are not present in the analyzed code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "quantum_safe_communicator",
      "file_name": "quantum_safe_communicator.s",
      "response_time": 5.53181791305542,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "바이너리 내에서 'ntru_key_generation', 'ntru_encrypt_message', 'merkle_tree_signature'와 같은 함수 호출이 명확히 확인되며, 이는 NTRU(격자 기반 암호) 및 Merkle Tree(해시 기반 서명) 등 양자내성암호(PQC) 알고리즘에 해당합니다. RSA, DSA, ECDSA 등 비양자내성암호 관련 문자열, 시그니처, 상수, 함수 호출은 발견되지 않았습니다.",
        "detected_algorithms": [
          "NTRU",
          "Merkle Tree Signature"
        ],
        "recommendations": "현재 바이너리는 PQC(양자내성암호) 알고리즘만을 사용하고 있으므로, 추가적인 비양자내성암호 제거 조치가 필요하지 않습니다. 최신 PQC 표준 및 구현 취약점에 대한 주기적 검토를 권장합니다.",
        "evidence": "ntru_key_generation, ntru_encrypt_message, merkle_tree_signature 함수 호출 및 관련 문자열이 존재하며, RSA/DSA/ECDSA 등 비PQC 알고리즘 관련 시그니처는 없음.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "quantum_safe_communicator",
      "file_name": "quantum_safe_communicator.s",
      "response_time": 2.7302730083465576,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "rsa_key_generation_engine",
      "file_name": "rsa_key_generation_engine.s",
      "response_time": 4.665108919143677,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 2048비트 키 길이, 두 개의 큰 소수(p, q) 생성, 모듈러 연산, 밀러-라빈 소수성 테스트 등 RSA 키 생성에 해당하는 전형적인 패턴이 다수 발견되었습니다. 이는 비양자내성암호(RSA) 사용의 명확한 증거입니다.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "양자컴퓨터 공격에 대비해 PQC(양자내성암호) 알고리즘(예: Kyber, Dilithium 등)으로 전환을 권장합니다. 기존 RSA 기반 키 생성 및 교환 로직을 PQC로 대체해야 합니다.",
        "evidence": "키 길이 2048비트, 두 소수 p/q 생성, miller_rabin_test(소수성 테스트), modular exponentiation, modular arithmetic, generate_prime_candidates, compute_modular_keys 등 RSA 키 생성에 특화된 함수 및 주석 다수 존재.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "rsa_key_generation_engine",
      "file_name": "rsa_key_generation_engine.s",
      "response_time": 4.591524124145508,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "DETECTED: RSA modular exponentiation (Evidence: modular_exponentiation function implementation, miller_rabin_test, miller_rabin_rounds, generate_prime_candidates, setup_modular_parameters)",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "DETECTED: Big integer and modular arithmetic operations (Evidence: modular_exponentiation, miller_rabin_rounds, generate_prime_candidates, random_odd_number)",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "RSA modular exponentiation and big integer modular arithmetic operations are explicitly implemented, indicating the presence of quantum-vulnerable RSA cryptography. No evidence of elliptic curve, discrete logarithm, symmetric cipher, hash, or Korean domestic algorithm implementations."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "salsa20_stream_cipher",
      "file_name": "salsa20_stream_cipher.s",
      "response_time": 6.606107711791992,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리 문자열에서는 RSA, DSA, ECDSA 등 비양자내성(Non-PQC) 공개키 암호 알고리즘의 시그니처, 상수, 함수 호출, 라이브러리 문자열이 발견되지 않았습니다. 대신, 'salsa20_stream_cipher.s' 파일명과 'expand 32-byte k', 'state_matrix', 'quarter_round', 'keystream', 'nonce', 'counter' 등은 Salsa20 또는 ChaCha20 계열의 스트림 대칭키 암호 알고리즘의 전형적인 구조와 상수입니다. 이는 대칭키 기반의 스트림 암호로, 현재 알려진 양자컴퓨터 공격(Shor's algorithm 등)에 취약하지 않으며, 비양자내성 공개키 암호(PQC 이전의 RSA, DSA, ECDSA 등)와는 무관합니다.",
        "detected_algorithms": [
          "Salsa20 (추정)"
        ],
        "recommendations": "본 바이너리는 대칭키 스트림 암호(Salsa20)만을 사용하므로, PQC(양자내성 공개키 암호)로의 전환이 직접적으로 필요하지 않습니다. 단, 키 교환이나 인증에 별도의 비양자내성 공개키 암호가 사용된다면 해당 부분도 점검이 필요합니다.",
        "evidence": "\"expand 32-byte k\", \"state_matrix\", \"quarter_round\", \"keystream\", \"nonce\", \"counter\" 등 Salsa20/ChaCha20 계열 암호의 전형적 상수 및 함수명 존재. 공개키 암호(RSA, DSA, ECDSA 등) 관련 문자열, 시그니처, 라이브러리 미발견.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "salsa20_stream_cipher",
      "file_name": "salsa20_stream_cipher.s",
      "response_time": 2.4638400077819824,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "satellite_communication_security",
      "file_name": "satellite_communication_security.s",
      "response_time": 7.336178302764893,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리 내에서는 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 관련 상수, 또는 암호화 라이브러리 문자열이 발견되지 않았습니다. 주요 함수명(예: satellite_key_derivation, uplink_encryption_layer, domesticn_satellite_cipher, downlink_authentication)과 코드 패턴을 분석한 결과, 표준 블록 암호 또는 자체 구현된 대칭키 기반 암호화로 추정되며, 공개키 기반 비양자내성암호 사용 흔적은 없습니다.",
        "detected_algorithms": [],
        "recommendations": "현재로서는 비양자내성 공개키 암호 사용 증거가 없으나, 대칭키 암호화 및 자체 구현 알고리즘의 경우에도 PQC(양자내성암호) 검토 및 표준화된 알고리즘 사용을 권장합니다. 향후 공개키 기반 암호화가 도입될 경우 PQC 알고리즘(Kyber, Dilithium 등) 적용을 적극 검토하십시오.",
        "evidence": "RSA, DSA, ECDSA, PKCS, ASN.1, 'openssl', 'libcrypto', 'public key', 'private key', 'modulus', 'prime', 'secp', 'nistp', 'ecdsa', 'rsa', 'dsa' 등 관련 문자열 및 시그니처 미발견. 함수명 및 상수 패턴상 대칭키 암호화 또는 자체 구현 추정.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "satellite_communication_security",
      "file_name": "satellite_communication_security.s",
      "response_time": 2.773226022720337,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "secure_boot_verification_processor",
      "file_name": "secure_boot_verification_processor.s",
      "response_time": 6.33210015296936,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'boot_signature_verification', 'FastBlockCipherveq', 'domesticn_secure_boot_cipher' 등 암호화 관련 함수명이 발견되었으나, RSA, DSA, ECDSA, PQC 등 표준 암호 알고리즘 명칭이나 라이브러리 문자열은 직접적으로 확인되지 않았습니다. 코드 패턴상 XOR, MULQ, 상수 사용 등 단순 블록 암호 또는 커스텀 시그니처 검증 로직이 구현된 것으로 보입니다. 이는 비표준/커스텀 암호 또는 기존 비양자내성 대칭/비대칭 암호 사용 가능성을 시사하며, 양자내성(PQC) 알고리즘의 사용 흔적은 전혀 없습니다.",
        "detected_algorithms": [],
        "recommendations": "커스텀 또는 비표준 암호화 구현은 보안상 위험할 수 있으므로, NIST 표준 양자내성(PQC) 알고리즘으로 전환을 권장합니다. 특히 서명 및 검증 로직에 대해 Kyber, Dilithium, Falcon 등 검증된 PQC 알고리즘 도입을 검토하십시오.",
        "evidence": "암호 관련 함수명('boot_signature_verification', 'FastBlockCipherveq', 'domesticn_secure_boot_cipher'), XOR 및 MULQ 연산, 고정 상수 사용 등 커스텀 암호화 패턴이 다수 확인됨. RSA, ECDSA 등 명시적 시그니처는 미발견.",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "secure_boot_verification_processor",
      "file_name": "secure_boot_verification_processor.s",
      "response_time": 2.6832938194274902,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "secure_communication_protocol",
      "file_name": "secure_communication_protocol.s",
      "response_time": 7.124470949172974,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 'diffie_hellman_init', 'modular_exponentiation' 함수 호출 및 관련 상수(예: 큰 소수, 2 등) 사용이 확인되었습니다. 이는 Diffie-Hellman 키 교환(고전 DH 또는 ECDH)이 구현되어 있음을 의미합니다. Diffie-Hellman은 양자컴퓨터 공격(Shor 알고리즘)에 취약한 비양자내성암호입니다. 또한 RSA, DSA, ECDSA 등은 직접적으로 탐지되지 않았으나, DH 역시 주요 비양자내성 키 교환 방식입니다.",
        "detected_algorithms": [
          "Diffie-Hellman"
        ],
        "recommendations": "양자내성(PQC) 키 교환 알고리즘(예: Kyber, NewHope 등)으로 전환을 권장합니다. 기존 Diffie-Hellman 키 교환은 양자컴퓨터 환경에서 안전하지 않으므로, PQC 기반 알고리즘으로의 마이그레이션이 필요합니다.",
        "evidence": "함수명 'diffie_hellman_init', 'modular_exponentiation' 및 관련 상수(0x2, 큰 소수 등) 사용. callq 4010d0 <diffie_hellman_init> 등 명확한 시그니처.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "secure_communication_protocol",
      "file_name": "secure_communication_protocol.s",
      "response_time": 4.104347229003906,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "DETECTED: Diffie-Hellman (Evidence: callq 4010d0 <diffie_hellman_init>, callq 401130 <modular_exponentiation>)",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "DETECTED: Modular exponentiation (Evidence: 401130 <modular_exponentiation> function implements repeated multiplication and division for modular exponentiation)",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Diffie-Hellman key exchange detected via explicit diffie_hellman_init and modular_exponentiation functions, which are vulnerable to quantum attacks. No evidence of RSA, ECC, symmetric ciphers, hash functions, or Korean algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "secure_hash_256bit_operations",
      "file_name": "secure_hash_256bit_operations.s",
      "response_time": 5.798745155334473,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에서는 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 라이브러리 문자열, 또는 관련 상수가 발견되지 않았습니다. 주요 상수(0x6a09e667, 0xbb67ae85 등)는 SHA-256 해시 함수의 초기값으로, 이는 해시 알고리즘에 해당하며, 비양자내성암호로 분류되지 않습니다.",
        "detected_algorithms": [
          "SHA-256"
        ],
        "recommendations": "현재 바이너리는 해시 함수(SHA-256)만을 사용하고 있어 비양자내성암호(PQC)로의 전환이 필요하지 않습니다. 단, 향후 공개키 암호화 또는 서명 알고리즘이 추가될 경우 PQC 알고리즘 도입을 검토하십시오.",
        "evidence": "SHA-256 초기값 상수(0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19) 및 관련 데이터 패턴만 발견됨.",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "secure_hash_256bit_operations",
      "file_name": "secure_hash_256bit_operations.s",
      "response_time": 2.290868043899536,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "secure_matrix_transformation_unit",
      "file_name": "secure_matrix_transformation_unit.s",
      "response_time": 5.671291828155518,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에서 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘 또는 관련 라이브러리 시그니처가 발견되지 않았습니다. 주요 함수 및 상수들은 블록 암호(예: FastBlockCipher, block_substitution_layer, key_addition_layer 등)와 관련된 것으로 보이며, 공개키 기반의 전통적 비양자내성암호 사용 흔적은 없습니다.",
        "detected_algorithms": [],
        "recommendations": "현재 바이너리에서는 비양자내성 공개키 암호 사용이 확인되지 않았으나, 전체 시스템 설계에서 키 교환, 서명 등 공개키 암호가 필요한 부분이 있다면 PQC(양자내성암호) 알고리즘 도입을 검토하시기 바랍니다.",
        "evidence": "발견된 문자열 및 함수명: block_substitution_layer, linear_permutation_layer, key_addition_layer, column_mixing_transformation, FastBlockCipherveq 등. RSA, DSA, ECDSA, OpenSSL, libcrypto 등 관련 문자열 및 시그니처 미발견.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "secure_matrix_transformation_unit",
      "file_name": "secure_matrix_transformation_unit.s",
      "response_time": 2.582814931869507,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "siphash_prf_function",
      "file_name": "siphash_prf_function.s",
      "response_time": 6.138697147369385,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에서는 SipHash 기반의 해시/PRF 함수만이 사용되고 있으며, RSA, DSA, ECDSA 등 비양자내성 공개키 암호 알고리즘의 시그니처나 관련 문자열, 상수, 패턴이 발견되지 않았습니다. SipHash는 대칭키 기반의 해시 함수로, 양자컴퓨터에 취약한 공개키 암호(PQC 비대응)와는 성격이 다릅니다.",
        "detected_algorithms": [
          "SipHash"
        ],
        "recommendations": "현재 바이너리에서는 비양자내성 공개키 암호가 사용되지 않아 PQC 전환이 필요하지 않습니다. 단, 향후 공개키 암호(예: RSA, ECDSA 등)가 도입될 경우 PQC 알고리즘(예: Kyber, Dilithium 등) 사용을 권장합니다.",
        "evidence": "initialize_siphash_state, load_secret_key, compress_block, sip_round 등 SipHash 관련 함수명 및 64비트 상수(IV) 패턴이 존재하며, RSA/DSA/ECDSA/Curve 관련 문자열이나 상수는 발견되지 않음.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "siphash_prf_function",
      "file_name": "siphash_prf_function.s",
      "response_time": 4.300090789794922,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "smart_card_authenticator",
      "file_name": "smart_card_authenticator.s",
      "response_time": 6.824872016906738,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리 내에서는 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 시그니처, 상수, 라이브러리 문자열이 발견되지 않았습니다. 주요 함수명(transform_key_schedule, transform_encrypt_block, card_challenge_response) 및 코드 패턴은 대칭키 기반의 커스텀 블록 암호 또는 난독화된 대칭키 암호화 구현으로 추정됩니다. 공개키 기반 비양자내성암호의 흔적은 없습니다.",
        "detected_algorithms": [],
        "recommendations": "현재로서는 비양자내성 공개키 암호(RSA, ECDSA 등) 사용 증거가 없으나, 커스텀 대칭키 암호화가 안전하다고 단정할 수 없습니다. 향후 PQC 표준 대칭키 알고리즘(예: AES-GCM, SHA-3 등) 및 NIST PQC 공개키 알고리즘 도입을 검토하십시오.",
        "evidence": "바이너리 내 RSA, DSA, ECDSA, 'openssl', 'libcrypto', 'public key', 'private key', 'modulus', 'prime', 'secp', 'nistp', 'PKCS', 'DER', 'ASN.1' 등 관련 문자열 및 상수 미발견. 대칭키 연산 및 키 스케줄 관련 코드만 존재.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "smart_card_authenticator",
      "file_name": "smart_card_authenticator.s",
      "response_time": 3.2574479579925537,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "smart_card_security_module",
      "file_name": "smart_card_security_module.s",
      "response_time": 9.067249774932861,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내에서 RSA, DSA, ECDSA 등 명시적인 비양자내성암호 알고리즘 시그니처나 라이브러리 문자열은 직접적으로 발견되지 않았으나, 함수명 및 코드 패턴(예: smart_card_authentication, card_challenge_response, domesticn_smartcard_cipher 등)과 상수값 패턴(0x383096a5, 0x9ea340bf 등)으로 미루어볼 때, 전통적인 대칭/비대칭 암호(특히 스마트카드에서 흔히 사용되는 RSA, DES, 3DES, 혹은 ECC 기반 알고리즘) 사용 가능성이 높음. FastBlockCipherveq 등 문자열로 미루어볼 때, 양자내성(PQC) 암호화 알고리즘의 흔적은 전혀 없음.",
        "detected_algorithms": [],
        "recommendations": "스마트카드 보안 모듈에 양자내성(PQC) 알고리즘(예: Kyber, Dilithium, Falcon 등) 도입을 권장합니다. 기존 대칭/비대칭 암호화 구현부를 점검하고, PQC 알고리즘으로의 전환 또는 하이브리드 적용을 검토하십시오.",
        "evidence": "함수명(smart_card_authentication, card_challenge_response, domesticn_smartcard_cipher), FastBlockCipherveq, 암호화에 사용될 가능성이 높은 상수값(0x383096a5, 0x9ea340bf 등), 전통적 암호화 패턴(키 처리, challenge-response 구조 등)",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "smart_card_security_module",
      "file_name": "smart_card_security_module.s",
      "response_time": 3.548943281173706,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "sphincs_signature_scheme",
      "file_name": "sphincs_signature_scheme.s",
      "response_time": 3.9604969024658203,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 3,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "바이너리 내에서 SPHINCS+와 Merkle tree, WOTS+ 등 해시 기반의 양자내성 서명 알고리즘 관련 문자열과 구조만이 발견되었습니다. RSA, DSA, ECDSA 등 비양자내성(Non-PQC) 암호 알고리즘의 시그니처, 상수, 함수명, 라이브러리 문자열은 전혀 발견되지 않았습니다.",
        "detected_algorithms": [
          "SPHINCS+",
          "WOTS+",
          "Merkle tree (XMSS)"
        ],
        "recommendations": "현재 바이너리는 양자내성 해시 기반 서명만을 사용하므로 별도의 PQC 전환이 필요하지 않습니다. 다만, 구현의 안전성 및 최신 표준 준수 여부를 주기적으로 검토하는 것이 좋습니다.",
        "evidence": "# Stateless post-quantum digital signatures\n# Setup SPHINCS+ parameters\n# Build hypertree of Merkle trees (XMSS)\n# Generate WOTS+ public keys",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "sphincs_signature_scheme",
      "file_name": "sphincs_signature_scheme.s",
      "response_time": 2.720390796661377,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or implementations detected in the provided code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "steganographic_crypto_covert_channel",
      "file_name": "steganographic_crypto_covert_channel.s",
      "response_time": 9.318717956542969,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리 내 함수명 및 주석에서 'signature generation', 'modular arithmetic', 'block transformation', 'key derivation', 'encryption', 'cFastBlockCipher', 'signature algorithm' 등 전통적 비양자내성암호(Non-PQC)에서 흔히 사용되는 용어와 패턴이 다수 발견되었습니다. 특히 'modular arithmetic', 'signature generation', 'block cipher', 'key derivation' 등은 RSA, DSA, ECDSA, AES 등 기존 암호화 알고리즘의 핵심 구성요소입니다. PQC(양자내성암호) 관련 용어나 알고리즘은 전혀 나타나지 않았습니다.",
        "detected_algorithms": [
          "RSA",
          "DSA",
          "ECDSA",
          "Block Cipher (AES 등)"
        ],
        "recommendations": "양자컴퓨터 공격에 대비하여 PQC(양자내성암호) 알고리즘(예: Kyber, Dilithium, Falcon 등)으로 전환을 권장합니다. 기존 RSA, DSA, ECDSA, 블록 암호 기반 구현은 장기적으로 안전하지 않습니다.",
        "evidence": "발견된 문자열: 'modular arithmetic implementation', 'signature algorithm implementation', 'block transformation implementation', 'key derivation', 'encryption', 'cFastBlockCipher', 'signature generation', 'secure storage', 'detect_image_feature_edges', 'prepare_histogram_analysis_engine' 등. 이는 전통적 공개키/서명/블록암호 알고리즘의 내부 동작과 일치합니다.",
        "confidence_score": 0.92,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "steganographic_crypto_covert_channel",
      "file_name": "steganographic_crypto_covert_channel.s",
      "response_time": 2.2680838108062744,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "stream_cipher_generator",
      "file_name": "stream_cipher_generator.s",
      "response_time": 5.4454121589660645,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 'rc4_key_schedule', 'rc4_encrypt_stream', 'trivium_stream_encrypt' 함수 호출 및 RC4 관련 상수(예: 'key1', '2345')가 확인되었습니다. RC4와 Trivium은 대칭 스트림 암호로, 양자내성암호(PQC)가 아니며, 양자 컴퓨터 환경에서 안전하지 않습니다. 또한 RSA, DSA, ECDSA 등 비양자내성 공개키 암호는 발견되지 않았으나, 사용된 스트림 암호 역시 PQC가 아닙니다.",
        "detected_algorithms": [
          "RC4",
          "Trivium"
        ],
        "recommendations": "양자내성 대칭키 알고리즘(예: AES-GCM-256 등) 또는 PQC 기반 키 교환/서명 알고리즘으로 전환을 권장합니다. RC4는 이미 안전하지 않은 것으로 간주되므로 즉시 사용 중단을 권고합니다.",
        "evidence": "함수명 'rc4_key_schedule', 'rc4_encrypt_stream', 'trivium_stream_encrypt' 및 RC4 키 스케줄 상수(0x3179656b, 0x35343332) 등 명확한 시그니처가 바이너리 내에 존재합니다.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "stream_cipher_generator",
      "file_name": "stream_cipher_generator.s",
      "response_time": 4.738537073135376,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "DETECTED: RC4 (Evidence: rc4_key_schedule at 0x401060, rc4_encrypt_stream at 0x4010d0)",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "RC4 stream cipher detected via explicit function names and structure (rc4_key_schedule, rc4_encrypt_stream). No evidence of other vulnerable or quantum-vulnerable cryptographic algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "stream_generator_operations",
      "file_name": "stream_generator_operations.s",
      "response_time": 5.425329923629761,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 2,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리 내에서는 RSA, DSA, ECDSA 등 비양자내성(Non-PQC) 공개키 암호 알고리즘의 시그니처, 상수, 또는 관련 문자열이 발견되지 않았습니다. 주요 함수들은 스트림 암호(예: RC4 유사) 및 블록 기반 연산(예: ChaCha 계열로 추정)과 관련된 것으로 보입니다.",
        "detected_algorithms": [
          "RC4-like",
          "ChaCha-like"
        ],
        "recommendations": "본 바이너리는 공개키 기반 비양자내성암호를 사용하지 않으나, 스트림 암호(RC4 계열)는 보안상 취약할 수 있으므로 ChaCha20 등 현대적 대칭키 암호로의 전환을 권장합니다. 공개키 암호가 필요한 경우 PQC(양자내성암호) 알고리즘 도입을 검토하십시오.",
        "evidence": "data_403000 배열을 이용한 바이트 스와핑 및 XOR 연산(스트림 암호), 16/12/8/7비트 회전 및 XOR/ADD 반복(ChaCha 계열 라운드 구조) 등 대칭키 암호 패턴만 존재. RSA, DSA, ECDSA, DH, ECC 등 관련 상수 및 함수 호출 미발견.",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "stream_generator_operations",
      "file_name": "stream_generator_operations.s",
      "response_time": 2.8372700214385986,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "stream_keygeneration_operations",
      "file_name": "stream_keygeneration_operations.s",
      "response_time": 8.56133770942688,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 1,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리에서는 RSA, DSA, ECDSA 등 비양자내성암호(PQC가 아닌 공개키 암호) 알고리즘의 시그니처나 관련 상수, 라이브러리 문자열이 발견되지 않았습니다. 코드 패턴상으로는 256 바이트 테이블을 이용한 바이트 단위 연산, XOR, 바이트 스왑 등이 반복적으로 나타나며, 이는 스트림 암호(예: RC4)와 유사한 구조로 보입니다. RC4는 대칭키 스트림 암호로, PQC와 직접적인 관련은 없으나, 공개키 기반 비양자내성암호의 사용 증거는 없습니다.",
        "detected_algorithms": [
          "RC4 (추정)"
        ],
        "recommendations": "본 바이너리에서는 공개키 기반 비양자내성암호(RSA, DSA, ECDSA 등)의 사용이 탐지되지 않았으나, RC4와 유사한 스트림 암호가 사용된 것으로 보입니다. RC4는 알려진 취약점이 많으므로, 양자내성 대칭키 알고리즘(예: AES-GCM, ChaCha20)으로의 전환을 권장합니다. 공개키 암호가 필요한 경우 PQC(예: Kyber, Dilithium) 도입을 고려하십시오.",
        "evidence": "256 바이트 테이블(data_403000), 바이트 스왑, XOR 연산, 공개키 암호 관련 문자열 및 시그니처 부재",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "stream_keygeneration_operations",
      "file_name": "stream_keygeneration_operations.s",
      "response_time": 2.8799057006835938,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "triple_des_encryption_module",
      "file_name": "triple_des_encryption_module.s",
      "response_time": 6.056456804275513,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 'Triple Block Cipher', 'FIPS 46-3', 'EDE (Encrypt-Decrypt-Encrypt)', 'three 56-bit cipher keys', 'weak keys and semi-weak keys', '0x0101010101010101' 등 DES/3DES(Triple DES) 관련 명확한 시그니처와 상수가 다수 발견되었습니다. Triple DES는 대칭키 블록 암호로, Grover 알고리즘 등 양자컴퓨터 공격에 취약하며, 비양자내성암호(Non-PQC)입니다.",
        "detected_algorithms": [
          "3DES",
          "Triple DES"
        ],
        "recommendations": "양자내성암호(PQC) 또는 최소한 AES-256 등 더 강력한 대칭키 알고리즘으로 전환을 권장합니다. 장기적으로는 NIST PQC 표준(예: Kyber, Dilithium 등) 도입을 검토하세요.",
        "evidence": "발견된 문자열: 'Triple Block Cipher', 'FIPS 46-3', 'EDE (Encrypt-Decrypt-Encrypt)', 'three 56-bit cipher keys', '0x0101010101010101', '0xFEFEFEFEFEFEFEFE', 'Block size (64 bits)', 'Key size (3*56 = 168 bits effective)' 등. 이는 3DES의 전형적 특성입니다.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "triple_des_encryption_module",
      "file_name": "triple_des_encryption_module.s",
      "response_time": 3.7465288639068604,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "DETECTED: 3DES (Evidence: Triple block cipher EDE (Encrypt-Decrypt-Encrypt) operation in perform_triple_cipher_encryption function, explicit use of three 56-bit keys and EDE sequence)",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "3DES (Triple DES) detected via explicit EDE operation and three 56-bit keys; no evidence of other vulnerable cryptographic algorithms or patterns."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "vpn_tunnel_encryption_engine",
      "file_name": "vpn_tunnel_encryption_engine.s",
      "response_time": 5.521008014678955,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 4,
      "raw_response": {
        "is_pqc_vulnerable": false,
        "vulnerability_details": "분석된 바이너리 내에서는 RSA, DSA, ECDSA 등 비양자내성암호(Non-PQC) 알고리즘의 명확한 시그니처, 상수, 또는 관련 문자열이 발견되지 않았습니다. 또한, 'FastBlockCipherveq', 'k_cipher_4', 'packet_encryption_layer', 'tunnel_key_exchange' 등 함수명 및 상수들은 블록 암호 또는 맞춤형 대칭키 암호화 구현을 시사하지만, 공개키 기반의 비양자내성암호 사용 증거는 없습니다.",
        "detected_algorithms": [],
        "recommendations": "현재로서는 비양자내성 공개키 암호(RSA, DSA, ECDSA 등) 사용 증거가 없으나, 맞춤형 또는 알려지지 않은 암호화 구현이 존재할 수 있으므로, 소스 코드 또는 더 상세한 바이너리 분석을 통해 PQC(양자내성암호) 적용 여부를 추가적으로 검증하는 것이 바람직합니다.",
        "evidence": "함수명: tunnel_key_exchange, packet_encryption_layer, tunnel_authentication, FastBlockCipherveq 등. 공개키 암호 관련 시그니처(RSA, DSA, ECDSA 등) 및 라이브러리 문자열 미발견.",
        "confidence_score": 0.85,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "vpn_tunnel_encryption_engine",
      "file_name": "vpn_tunnel_encryption_engine.s",
      "response_time": 8.787991046905518,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 4,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "NOT DETECTED",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of vulnerable cryptographic algorithms or library usage detected in the provided assembly code."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "assembly_binary",
      "test_id": "x25519_key_agreement",
      "file_name": "x25519_key_agreement.s",
      "response_time": 5.326358079910278,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "바이너리에서 Curve25519(X25519) 기반의 키 교환 알고리즘이 사용되고 있습니다. Curve25519는 타원 곡선 암호(ECC)의 일종으로, 현재 널리 사용되는 비양자내성암호(Non-PQC)입니다. 양자컴퓨터 환경에서는 Shor 알고리즘 등으로 인해 ECC 기반 알고리즘이 안전하지 않습니다.",
        "detected_algorithms": [
          "X25519 (Curve25519 ECDH)"
        ],
        "recommendations": "양자내성(PQC) 키 교환 알고리즘(예: Kyber, NTRU, FrodoKEM 등)으로 전환하거나, 하이브리드 방식(기존 ECC + PQC 병행)을 도입하는 것이 권장됩니다.",
        "evidence": "바이너리 내 'Curve25519', 'scalar_multiply', 'base_point', 'clamp', '2^255-19', 'Montgomery ladder' 등 ECC/X25519 관련 문자열 및 연산 패턴이 명확히 존재합니다.",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "assembly_binary",
      "test_id": "x25519_key_agreement",
      "file_name": "x25519_key_agreement.s",
      "response_time": 4.871588706970215,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Assembly Binary Vulnerable Crypto Detection Agent",
        "analysis_results": {
          "rsa_modular_exponentiation_and_large_integer_arithmetic_patterns": "NOT DETECTED",
          "elliptic_curve_point_operations_and_scalar_multiplication_patterns": "DETECTED: Curve25519 Scalar Multiplication (Evidence: scalar_multiply function, Montgomery ladder implementation, explicit curve parameter initialization in initialize_curve_parameters)",
          "discrete_logarithm_computation_signatures_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_signatures_seed_s_boxes_aria_transformations_hight_operations_lea_rotations": "NOT DETECTED",
          "symmetric_cipher_patterns_vulnerable_to_quantum_attacks_des_3des_rc4_aes_128": "NOT DETECTED",
          "cryptographic_hash_function_implementations_md5_sha_1_vulnerable_sha_variants": "NOT DETECTED",
          "big_integer_libraries_and_modular_arithmetic_operations": "NOT DETECTED",
          "cryptographic_library_calls_and_api_signatures": "NOT DETECTED",
          "optimization_patterns_specific_to_vulnerable_crypto_algorithms": "NOT DETECTED",
          "korean_cryptographic_library_signatures_and_domestic_algorithm_implementations": "NOT DETECTED",
          "memory_allocation_patterns_for_cryptographic_key_storage": "NOT DETECTED",
          "side_channel_vulnerable_implementation_patterns": "NOT DETECTED",
          "assembly_level_obfuscation_of_vulnerable_crypto_operations": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Curve25519 elliptic curve scalar multiplication is explicitly implemented (Montgomery ladder, curve parameter setup). No evidence of RSA, DSA, DH, ElGamal, Korean domestic algorithms, symmetric ciphers, or hash functions vulnerable to quantum attacks."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "apache_legacy_ssl",
      "file_name": "apache_legacy_ssl.conf",
      "response_time": 7.763870000839233,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 5,
      "false_negatives": 6,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 ECDHE(Elliptic Curve Diffie-Hellman Ephemeral), RSA, DH(Diffie-Hellman), secp256r1, secp384r1, prime256v1 등 비양자내성(Non-PQC) 알고리즘 기반의 키 교환 및 인증서 사용이 명시되어 있습니다. SSLCipherSuite 및 SSLOpenSSLConfCmd 설정에서 PQC(양자내성암호) 관련 알고리즘이 전혀 언급되지 않았으며, 오히려 호환성 유지를 위해 legacy cipher와 insecure renegotiation까지 허용하고 있어 양자 컴퓨터 공격에 매우 취약합니다.",
        "detected_algorithms": [
          "ECDHE",
          "RSA",
          "DH",
          "secp256r1",
          "secp384r1",
          "prime256v1",
          "CBC3-SHA"
        ],
        "recommendations": "양자내성암호(PQC) 기반의 키 교환 및 인증서(예: Kyber, Dilithium 등) 지원이 가능한 최신 OpenSSL 및 Apache 버전으로 업그레이드하고, PQC cipher suite를 명시적으로 설정하세요. legacy cipher 및 insecure renegotiation 옵션은 비활성화해야 하며, DHParameters도 충분히 강력한 파라미터(>=3072bit)로 교체하거나 PQC로 대체해야 합니다.",
        "evidence": "SSLCipherSuite HIGH:MEDIUM:+TripleCipher:+StreamCipher:!aNULL:!eNULL:!EXPORT:!LEGACY_CIPHER:!Hash128:!PSK:!SRP\nSSLCipherSuite CurveKE-PublicKey-BlockCipher256-GCM-SHA384:...:LEGACY_CIPHER-CBC3-SHA\nSSLOpenSSLConfCmd DHParameters /etc/pki/tls/dhparam1024.pem\nSSLOpenSSLConfCmd Curves secp256r1:secp384r1:prime256v1\nSSLInsecureRenegotiation on",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "apache_legacy_ssl",
      "file_name": "apache_legacy_ssl.conf",
      "response_time": 8.277172088623047,
      "json_valid": true,
      "true_positives": 3,
      "false_positives": 4,
      "false_negatives": 5,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: SSLCertificateFile /etc/pki/tls/certs/api-server-rsa1024.crt, SSLCertificateKeyFile /etc/pki/tls/private/api-server-rsa1024.key)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: Elliptic Curve Cryptography (Evidence: SSLOpenSSLConfCmd Curves secp256r1:secp384r1:prime256v1)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: DH (Evidence: SSLOpenSSLConfCmd DHParameters /etc/pki/tls/dhparam1024.pem)",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: StreamCipher, BlockCipher128, BlockCipher256, CBC, CBC3 (Evidence: SSLCipherSuite includes StreamCipher-SHA, BlockCipher128-SHA, BlockCipher256-SHA, LEGACY_CIPHER-CBC-SHA, LEGACY_CIPHER-CBC3-SHA)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: SSLv3, TLSv1.0, TLSv1.1, TLSv1.2, TLSv1.3, weak ciphers (Evidence: SSLProtocol all -SSLv2, allows SSLv3, TLSv1.0, TLSv1.1, TLSv1.2, TLSv1.3; SSLCipherSuite includes weak/legacy ciphers)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "DETECTED: OpenSSL (Evidence: LoadModule ssl_module modules/mod_ssl.so, SSLOpenSSLConfCmd)",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "NOT DETECTED",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: SSLv3, TLSv1.0, TLSv1.1, weak ciphers, insecure renegotiation (Evidence: SSLProtocol allows SSLv3, TLSv1.0, TLSv1.1; SSLInsecureRenegotiation on; SSLCipherSuite includes legacy ciphers)",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of RSA (including 1024-bit), elliptic curve cryptography (secp256r1, secp384r1, prime256v1), Diffie-Hellman (with 1024-bit parameters), and multiple quantum-vulnerable symmetric ciphers (CBC, CBC3, StreamCipher, BlockCipher128/256). SSL/TLS configuration allows legacy and quantum-vulnerable protocols (SSLv3, TLSv1.0, TLSv1.1) and weak cipher suites. OpenSSL is the cryptographic library in use. No evidence of Korean algorithms, migration logs, or error patterns related to quantum-vulnerable crypto."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "automotive_v2x_system",
      "file_name": "automotive_v2x_system.yaml",
      "response_time": 5.858993053436279,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 9,
      "false_negatives": 12,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 사용된 주요 암호 알고리즘(예: CurveSig-P256, CurveSig-P384, CurveKE-P256, PublicKey-2048, PublicKey-3072 등)은 모두 기존의 타원곡선(ECC) 또는 RSA 기반 비양자내성암호입니다. PQC(양자내성암호) 알고리즘이 명시적으로 사용되지 않았으며, TLS 백엔드 연결에서도 CurveKE 및 CurveSig 기반 cipher suite가 사용되고 있습니다.",
        "detected_algorithms": [
          "CurveSig-P256",
          "CurveSig-P384",
          "CurveKE-P256",
          "PublicKey-2048",
          "PublicKey-3072",
          "BlockCipher-128-CCM",
          "BlockCipher-256-GCM",
          "BlockCipher-256-CBC",
          "BlockCipher-256-CTR"
        ],
        "recommendations": "양자컴퓨터 공격에 대비하여 PQC(양자내성암호) 알고리즘(예: Kyber, Dilithium, Falcon 등)으로 서명, 키 교환, 암호화 알고리즘을 점진적으로 전환하십시오. 하이브리드 모드(기존 알고리즘 + PQC) 적용도 권장됩니다.",
        "evidence": "message_signing: algorithm: \"CurveSig-P256\"\nmessage_encryption: key_exchange: \"CurveKE-P256\"\nv2i_communication: roadside_unit_cert: \"PublicKey-2048\"\ntelematics: authentication: \"PublicKey-3072\"\nbackend_connection: cipher_suite: \"CurveKE-CurveSig-BlockCipher256-GCM-SHA384\"",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "automotive_v2x_system",
      "file_name": "automotive_v2x_system.yaml",
      "response_time": 9.496444940567017,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 12,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "blockchain_node_security",
      "file_name": "blockchain_node_security.conf",
      "response_time": 6.406173944473267,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 4,
      "false_negatives": 7,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 ECDSA(secp256k1), BLS12-381, 그리고 Noise 프로토콜(Chacha20-Poly1305, HKDF-SHA256) 등 비양자내성암호(Non-PQC) 알고리즘이 사용되고 있습니다. ECDSA(secp256k1)는 서명 및 인증에, BLS12-381은 합의 및 집계 서명에, Noise 프로토콜은 P2P 통신 암호화에 사용되고 있습니다. 이들 알고리즘은 양자컴퓨터 공격에 취약합니다.",
        "detected_algorithms": [
          "ECDSA (secp256k1)",
          "BLS12-381",
          "Chacha20-Poly1305",
          "HKDF-SHA256"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: Dilithium, Falcon, Kyber 등)으로 서명 및 키 교환 방식을 전환하는 것을 권장합니다. BLS12-381 및 ECDSA(secp256k1) 대신 PQC 기반 서명, Noise 프로토콜 내 PQC 키 교환 적용을 검토하십시오.",
        "evidence": "[cryptography] signing_algorithm = \"elliptic_curve_digital_signature\"\nsignature_curve = \"secp256k1\"\n[cryptography] verification_algorithm = \"ecdsa_recovery\"\n[consensus_crypto] threshold_signature = \"bls_aggregate\"\nsignature_curve = \"bls12_381\"\n[peer_communication] transport_encryption = \"noise_protocol\"\ncipher = \"chacha20_poly1305\"\nsession_key_derivation = \"hkdf_sha256\"\n[transaction_security] signature_verification = \"ecdsa_secp256k1\"\n[block_production] header_seal_type = \"ecdsa_signature\"",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "blockchain_node_security",
      "file_name": "blockchain_node_security.conf",
      "response_time": 6.154031038284302,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 3,
      "false_negatives": 5,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "NOT DETECTED",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECDSA (Evidence: signing_algorithm = \"elliptic_curve_digital_signature\", signature_curve = \"secp256k1\", signature_verification = \"ecdsa_secp256k1\", peer_authentication = \"secp256k1_ecdsa\", tls_curve_preferences = [\"x25519\", \"secp256r1\"])",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: AES (Evidence: tls_cipher_suites = [\"TLS_AES_256_GCM_SHA384\", \"TLS_AES_128_GCM_SHA256\"]), DETECTED: ChaCha20 (Evidence: tls_cipher_suites = [\"TLS_CHACHA20_POLY1305_SHA256\"], cipher = \"chacha20_poly1305\")",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: TLS 1.3 with classical cipher suites (Evidence: tls_min_version = \"1.3\", tls_cipher_suites = [\"TLS_AES_256_GCM_SHA384\", \"TLS_CHACHA20_POLY1305_SHA256\", \"TLS_AES_128_GCM_SHA256\"])",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "DETECTED: ECDSA (Evidence: peer_authentication = \"secp256k1_ecdsa\", session_key_derivation = \"hkdf_sha256\")",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "NOT DETECTED",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "DETECTED: PQ migration planning (Evidence: pq_migration_planned = true, pq_target_algorithms = [\"kyber768\", \"dilithium3\"], migration_timeline = \"2026-Q2\")"
        },
        "confidence_score": 0.98,
        "summary": "Detected use of quantum-vulnerable elliptic curve cryptography (ECDSA with secp256k1, secp256r1), classical symmetric ciphers (AES, ChaCha20), and TLS 1.3 with classical cipher suites. PQ migration is planned but not yet implemented. No evidence of RSA, DSA, DH, ElGamal, or Korean cryptographic algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "cloud_hsm_operations",
      "file_name": "cloud_hsm_operations.log",
      "response_time": 6.061867952346802,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 6,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 RSA(3072비트) 및 EC_P256(타원곡선) 공개키 알고리즘이 사용되고 있으며, 이는 양자컴퓨터에 취약한 비양자내성암호입니다. TLS 핸드셰이크 및 인증서 키쌍 생성에 RSA와 ECC가 사용되고 있습니다.",
        "detected_algorithms": [
          "RSA",
          "EC_P256",
          "BlockCipher-256"
        ],
        "recommendations": "TLS 및 인증서 키 교환, 서명 알고리즘에 대해 양자내성암호(PQC) 알고리즘(예: Kyber, Dilithium 등)으로 전환을 검토하십시오. 하이브리드 모드(PQC+기존 알고리즘)도 고려할 수 있습니다.",
        "evidence": "KeyAttributes::Parse(key_id=0x1002) - Label: pk_crypto-sign-key, Type: PublicKey-2048, Usage: Sign/Verify\nKeyAttributes::Parse(key_id=0x1003) - Label: ec_crypto-p256-key, Type: EC_P256, Usage: Sign/Verify/Derive\nKeyGeneration::SetParameters() - Algorithm: PublicKey, Key size: 3072 bits, Public exponent: 65537\nHSMProcessor::GenerateRSAKeyPair() - Generating primes p and q inside secure boundary",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "cloud_hsm_operations",
      "file_name": "cloud_hsm_operations.log",
      "response_time": 8.15243124961853,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 5,
      "false_negatives": 5,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: HSMProcessor::GenerateRSAKeyPair(), KeyGeneration::SetParameters() - Algorithm: PublicKey, Key size: 3072 bits, Public exponent: 65537, KeyAttributes::Parse(key_id=0x1002) - Type: PublicKey-2048, DigitalSignature::SignData() - Signing certificate request with PublicKey-3072 key)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECDSA/ECDH (Evidence: KeyAttributes::Parse(key_id=0x1003) - Type: EC_P256, ECCOperations::GenerateKeyPair() - Creating EC key pair on P-384 curve, EC_CRYPTO::SelectCurve() - Curve: secp384r1, CURVE_KE::DeriveSharedSecret() - Performing elliptic curve Diffie-Hellman)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: BlockCipher-256 (Evidence: KeyAttributes::Parse(key_id=0x1001) - Type: BlockCipher-256, Usage: Encrypt/Decrypt, CurveKE-PublicKey-BlockCipher256-GCM-SHA384 cipher suite in TLS negotiation)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: TLS with quantum-vulnerable cipher suites (Evidence: TLS::NegotiateCipherSuite() - Selected cipher: CurveKE-PublicKey-BlockCipher256-GCM-SHA384, HSMClient::EstablishConnection() - TLS handshake initiated)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "DETECTED: RSA (Evidence: DigitalSignature::SignData() - Signing certificate request with PublicKey-3072 key, Signature::Generated() - PublicKey signature created)",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "DETECTED: RSA, ECDSA, ECDH, BlockCipher (Evidence: HSMProcessor::GenerateRSAKeyPair(), ECCOperations::GenerateKeyPair(), CurveSig::SignMessage(), CURVE_KE::DeriveSharedSecret(), KeyAttributes::Parse() for RSA, EC, BlockCipher)",
          "authentication_and_key_management_system_configurations": "DETECTED: HSM authentication and key management (Evidence: Authentication::LoginToHSM() - Authenticating as Crypto Officer, KeyManagement::ListKeys(), KeyDatabase::QueryKeys())",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "NOT DETECTED",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Explicit evidence of quantum-vulnerable algorithms detected: RSA (2048/3072-bit), ECDSA/ECDH (P-256, P-384), and symmetric block cipher (BlockCipher-256, likely AES). TLS cipher suite negotiation and certificate signing operations use these algorithms. No evidence of discrete log (DSA/DH/ElGamal), Korean algorithms, or migration to quantum-resistant algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "cloud_storage_encryption",
      "file_name": "cloud_storage_encryption.conf",
      "response_time": 7.555257081985474,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 5,
      "false_negatives": 8,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 RSA (RS256, RS512), ECDSA (ES384, CurveSig-P384), CURVE_KE-P384 등 비양자내성 공개키 알고리즘이 다수 사용되고 있습니다. 이는 인증, 키 래핑, 키 교환 등 주요 보안 기능에 적용되어 있으며, 모두 양자컴퓨터에 취약합니다. TLS 연결에서도 PQC가 적용된 cipher suite는 확인되지 않습니다.",
        "detected_algorithms": [
          "RSA (RS256, RS512)",
          "ECDSA (ES384, CurveSig-P384)",
          "CURVE_KE-P384",
          "PublicKey-4096-OAEP",
          "TLS_AES_256_GCM_SHA384",
          "TLS_CHACHA20_POLY1305_SHA256"
        ],
        "recommendations": "공개키 기반 알고리즘(RSA, ECDSA, CURVE_KE 등)을 양자내성암호(PQC) 기반 알고리즘(예: Kyber, Dilithium 등)으로 교체하십시오. TLS 연결 및 키 관리, API 인증 등 모든 공개키 암호화 사용처에 대해 PQC 지원을 검토하고, 하이브리드 모드(전이중) 적용을 권장합니다.",
        "evidence": "TokenSignature=RS256, AlternativeSignature=ES384, JWTAlgorithm=RS512, KeyWrap=PublicKey-4096-OAEP, AlternativeKeyWrap=CURVE_KE-P384, TLS12_Cipher=CurveKE-PublicKey-BlockCipher256-GCM-SHA384",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "cloud_storage_encryption",
      "file_name": "cloud_storage_encryption.conf",
      "response_time": 10.335031032562256,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 9,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "cryptocurrency_exchange",
      "file_name": "cryptocurrency_exchange.log",
      "response_time": 14.94878077507019,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 ECDSA(secp256k1), EdDSA(Ed25519), RSA(2048/4096), 그리고 TLS 연결에서 ECDHE-RSA cipher suite 및 RSA-2048 인증서 사용이 확인되었습니다. 이들은 모두 비양자내성암호(Non-PQC)로, 양자컴퓨터 등장 시 안전하지 않습니다.",
        "detected_algorithms": [
          "ECDSA",
          "EdDSA",
          "RSA",
          "ECDHE-RSA",
          "AES-256-GCM",
          "AES-256-CBC",
          "AES-128-CTR",
          "SHA-1",
          "SHA-256",
          "SHA-384",
          "HMAC-SHA256",
          "HMAC-SHA512"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: Kyber, Dilithium 등)으로 전환을 검토하십시오. TLS 인증서 및 키 교환, 서명 알고리즘, 백업 암호화 등 주요 암호화 구성요소에 PQC 적용을 권장합니다.",
        "evidence": "[00:00:04] INFO: ECDSA library loaded for Bitcoin/Ethereum signing\n[00:10:26] Transaction signing: ECDSA-secp256k1\n[00:10:48] MetaMask connection: RSA-2048 key exchange\n[00:15:34] Backup encryption: RSA-4096 + AES-256\n[00:20:03] Cipher suite: ECDHE-RSA-AES256-GCM-SHA384\n[00:20:04] Certificate: RSA-2048, signed with SHA-256",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "cryptocurrency_exchange",
      "file_name": "cryptocurrency_exchange.log",
      "response_time": 15.11286211013794,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "cryptographic_operations_detailed",
      "file_name": "cryptographic_operations_detailed.log",
      "response_time": 4.417395114898682,
      "json_valid": true,
      "true_positives": 3,
      "false_positives": 1,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 2048-bit modulus를 사용하는 X.509v3 인증서(RSA), elliptic curve 연산(ECDH/ECDSA), 그리고 legacy 160-bit 해시(SHA-1) 등 비양자내성암호가 사용되고 있음이 확인되었습니다. 이는 양자컴퓨터 공격에 취약합니다.",
        "detected_algorithms": [
          "RSA",
          "ECDH",
          "ECDSA",
          "SHA-1"
        ],
        "recommendations": "양자내성(PQC) 알고리즘(예: Kyber, Dilithium 등)으로의 전환을 권장합니다. 인증서, 키 교환, 서명, 해시 등 모든 암호화 구성요소에 대해 PQC 지원을 검토하십시오.",
        "evidence": "CertificateManager::LoadCertificateChain() - Processing X.509v3 certificate with 2048-bit modulus\nEllipticCurve::SelectCurve() - Using prime field curve\nHashFunction::ComputeDigest() - Using legacy 160-bit digest",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "cryptographic_operations_detailed",
      "file_name": "cryptographic_operations_detailed.log",
      "response_time": 11.849511861801147,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 6,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "database_encryption_setup",
      "file_name": "database_encryption_setup.log",
      "response_time": 9.113180875778198,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 3,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 사용된 K_CIPHER_1(128-bit, CBC mode)은 SEED(한국 국가표준 블록 암호)로, K_CIPHER_2(256-bit, CTR mode)는 ARIA(한국 국가표준 블록 암호)로 추정됩니다. 이들 알고리즘은 양자내성암호(PQC)가 아니며, 양자 컴퓨터의 발전 시 공격에 취약할 수 있습니다. 또한, 키 래핑에 사용된 BlockCipher-256(RFC 3394) 역시 PQC가 아닙니다.",
        "detected_algorithms": [
          "SEED (K_CIPHER_1)",
          "ARIA (K_CIPHER_2)",
          "BlockCipher-256 (RFC 3394)"
        ],
        "recommendations": "데이터베이스 암호화에 PQC(양자내성암호) 알고리즘 도입을 검토하십시오. NIST PQC 표준(예: Kyber, Dilithium 등) 기반의 키 관리 및 데이터 암호화 체계로 전환을 권장합니다. 기존 SEED, ARIA, RFC 3394 기반 암호화는 장기적으로 양자 공격에 안전하지 않습니다.",
        "evidence": "2025-01-18 14:00:00.134 [INFO] AlgorithmSelector::ChooseAlgorithm() - Selected encryption algorithm: K_CIPHER_1 (Korean national standard)\n2025-01-18 14:00:00.178 [DEBUG] SEEDEngine::Initialize() - K_CIPHER_1 cipher configuration: 128-bit key, CBC mode, 16 rounds\n2025-01-18 14:00:00.534 [DEBUG] TablespaceKey::Generate(audit) - Creating K_CIPHER_2-256 key for 'audit' tablespace\n2025-01-18 14:00:00.578 [TRACE] ARIAEngine::Initialize() - K_CIPHER_2 cipher: 256-bit key, CTR mode, government-approved algorithm\n2025-01-18 14:00:00.667 [DEBUG] KeyWrapping::Algorithm() - Using BlockCipher-256 key wrap algorithm (RFC 3394)",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "database_encryption_setup",
      "file_name": "database_encryption_setup.log",
      "response_time": 11.043215036392212,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 7,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "NOT DETECTED",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "NOT DETECTED",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "DETECTED: SEED (Evidence: SEEDEngine::Initialize() - K_CIPHER_1 cipher configuration: 128-bit key, CBC mode, 16 rounds)\nDETECTED: ARIA (Evidence: ARIAEngine::Initialize() - K_CIPHER_2 cipher: 256-bit key, CTR mode, government-approved algorithm)",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: SEED (Evidence: SEEDEngine::Initialize() - K_CIPHER_1 cipher configuration: 128-bit key, CBC mode, 16 rounds)\nDETECTED: ARIA (Evidence: ARIAEngine::Initialize() - K_CIPHER_2 cipher: 256-bit key, CTR mode, government-approved algorithm)\nDETECTED: ECB mode (Evidence: DeterministicEncryption::Configure() - Using K_CIPHER_1-ECB for deterministic encryption (equality search))\nDETECTED: CBC mode (Evidence: RandomizedEncryption::Configure() - Using K_CIPHER_2-256-CBC with random IV for each value)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "NOT DETECTED",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "DETECTED: SEED (Evidence: AlgorithmSelector::ChooseAlgorithm() - Selected encryption algorithm: K_CIPHER_1 (Korean national standard))\nDETECTED: ARIA (Evidence: AlgorithmSelector::ChooseAlgorithm() - Selected encryption algorithm: K_CIPHER_2 (government-approved algorithm))",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "DETECTED: SEED (Evidence: ColumnEncryption::ApplyEncryption(users.social_security_number) - Applying deterministic K_CIPHER_1 encryption)\nDETECTED: ARIA (Evidence: ColumnEncryption::ApplyEncryption(users.credit_card) - Applying randomized K_CIPHER_2 encryption)",
          "authentication_and_key_management_system_configurations": "DETECTED: BlockCipher-256 key wrap (Evidence: KeyWrapping::Algorithm() - Using BlockCipher-256 key wrap algorithm (RFC 3394))",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: ECB mode (Evidence: DeterministicEncryption::Configure() - Using K_CIPHER_1-ECB for deterministic encryption (equality search))",
          "korean_domestic_cryptographic_standard_compliance_configurations": "DETECTED: SEED (Evidence: AlgorithmSelector::ChooseAlgorithm() - Selected encryption algorithm: K_CIPHER_1 (Korean national standard))\nDETECTED: ARIA (Evidence: AlgorithmSelector::ChooseAlgorithm() - Selected encryption algorithm: K_CIPHER_2 (government-approved algorithm))",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "DETECTED: ECB mode warning (Evidence: SecurityCheck::ECB_Mode_Warning() - ECB mode in use for deterministic encryption, pattern analysis possible)",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of Korean national algorithms SEED (K_CIPHER_1) and ARIA (K_CIPHER_2) for database encryption, including ECB and CBC modes, which are symmetric ciphers vulnerable to quantum attacks. No evidence of RSA, ECC, DSA, DH, ElGamal, or SSL/TLS protocol configurations. ECB mode usage and related warnings are present, but no migration to quantum-resistant algorithms is detected."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "email_server_crypto",
      "file_name": "email_server_crypto.conf",
      "response_time": 4.58961296081543,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 0,
      "false_negatives": 7,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 사용된 인증서와 키 파일이 RSA2048 기반임을 확인할 수 있습니다. 이는 비양자내성암호(Non-PQC)인 RSA 알고리즘을 사용하고 있음을 의미합니다. 또한, cipher suite 설정에서 PQC(양자내성암호) 관련 알고리즘이나 하이브리드 PQC 스위트가 명시적으로 사용되고 있지 않습니다.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "양자내성암호(PQC) 또는 PQC 하이브리드 인증서 및 키(예: Kyber, Dilithium 등)로 전환을 검토하십시오. 또한, PQC 지원 cipher suite를 명시적으로 추가하고, 기존 RSA 기반 인증서 및 키 사용을 중단하는 것이 권장됩니다.",
        "evidence": "smtp_tls_cert_file = /etc/pki/tls/certs/mail-server-rsa2048.pem\nsmtp_tls_key_file = /etc/pki/tls/private/mail-server-rsa2048.key\nsmtpd_tls_cert_file = /etc/pki/tls/certs/mail-server-rsa2048.pem",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "email_server_crypto",
      "file_name": "email_server_crypto.conf",
      "response_time": 10.248995065689087,
      "json_valid": true,
      "true_positives": 4,
      "false_positives": 3,
      "false_negatives": 4,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: smtp_tls_cert_file = /etc/pki/tls/certs/mail-server-rsa2048.pem, smtp_tls_key_file = /etc/pki/tls/private/mail-server-rsa2048.key, smtpd_tls_cert_file = /etc/pki/tls/certs/mail-server-rsa2048.pem, smtpd_tls_key_file = /etc/pki/tls/private/mail-server-rsa2048.key, ssl_cert = </etc/pki/tls/certs/mail-server-rsa2048.pem, ssl_key = </etc/pki/tls/private/mail-server-rsa2048.key)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: Elliptic Curve (Evidence: smtpd_tls_cipher_list = CurveKE-PublicKey-BlockCipher256-GCM-SHA384..., ssl_cipher_list = CurveKE+AESGCM..., ssl_curve_list = secp384r1:secp256r1, smtpd_tls_eecdh_grade = strong)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: DH (Evidence: smtpd_tls_dh1024_param_file = /etc/pki/tls/dhparams2048.pem, ssl_dh = </etc/pki/tls/dhparams2048.pem)",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: AES (Evidence: ssl_cipher_list = CurveKE+AESGCM..., smime_encrypt_algorithms = BlockCipher256-CBC, AES192-CBC, BlockCipher128-CBC), DETECTED: Triple DES (Evidence: smime_encrypt_algorithms = TripleCipher-CBC, smtp_tls_exclude_ciphers = CBC3-SHA, smtp_tls_mandatory_exclude_ciphers = TripleCipher)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: TLS with quantum-vulnerable cipher suites (Evidence: smtp_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1, smtpd_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1, ssl_min_protocol = TLSv1.2, cipher lists referencing CurveKE, KeyExchange, BlockCipher, AESGCM, etc.)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "DETECTED: RSA (Evidence: smtp_tls_CAfile = /etc/pki/tls/certs/ca-bundle.crt, smtpd_tls_CAfile = /etc/pki/tls/certs/ca-bundle.crt, ssl_ca = </etc/pki/tls/certs/ca-bundle.crt)",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "NOT DETECTED",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: Legacy S/MIME (Evidence: smime_legacy_support = true, smime_legacy_algorithms = PublicKey-Hash160, LEGACY_CIPHER-CBC, RC2-CBC), DEPRECATED TLS/SSL protocols excluded (Evidence: smtp_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1, etc.)",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of RSA certificates (2048-bit), elliptic curve cipher suites (secp256r1, secp384r1), Diffie-Hellman key exchange, and symmetric ciphers (AES, Triple DES) in the configuration. Legacy S/MIME support includes RC2 and other legacy ciphers. No evidence of Korean algorithms, cryptographic library imports, or migration logs."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "enterprise_banking_pki_configuration",
      "file_name": "enterprise_banking_pki_configuration.conf",
      "response_time": 6.630423069000244,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 4,
      "false_negatives": 5,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 RSA(2048/1024), ECDSA(P-256, P-384, P-521), DH(2048/1024), PBKDF2, 그리고 기타 전통적(비양자내성) 암호 알고리즘 사용이 명시되어 있습니다. PQC(양자내성암호) 관련 알고리즘은 전혀 언급되지 않았으며, 모든 주요 암호화, 서명, 키 교환 방식이 양자 컴퓨터에 취약한 것으로 확인됩니다.",
        "detected_algorithms": [
          "RSA (factorization_2048, factorization_1024)",
          "ECDSA (prime256v1, secp384r1, secp521r1, nist_p384, brainpool_p256r1)",
          "DH (integer_factorization_dh_2048, modular_arithmetic_dh_1024)",
          "PBKDF2",
          "SHA-1, SHA-256, SHA-384, SHA-512"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: Kyber, Dilithium, Falcon 등)으로 전환을 준비하십시오. 인증서, 키 교환, 서명, 암호화 등 모든 주요 암호화 구성에 대해 PQC 지원을 검토하고, 하이브리드 모드(전통+PQC) 도입을 권장합니다. 또한, legacy 및 1024bit 이하 키는 즉시 사용 중단하십시오.",
        "evidence": "primary_algorithms = [\"factorization_2048\", \"discrete_log_p256\", ...], allowed_curves = [\"prime256v1\", \"secp384r1\", \"secp521r1\"], key_exchange_methods { primary = \"elliptic_curve_diffie_hellman\", fallback = \"integer_factorization_dh_2048\", legacy_support = \"modular_arithmetic_dh_1024\" }, signature_algorithms = [\"pk_crypto_pss_sha256\", \"ecdsa_p256_sha256\", ...]",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "enterprise_banking_pki_configuration",
      "file_name": "enterprise_banking_pki_configuration.conf",
      "response_time": 9.876476049423218,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 6,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "financial_payment_gateway",
      "file_name": "financial_payment_gateway.conf",
      "response_time": 8.17812204360962,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 6,
      "false_negatives": 5,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_3DES_EDE_CBC_SHA와 같은 비양자내성 암호화(TLS_RSA, 3DES, SHA1, 1024비트 RSA 등) 알고리즘이 사용되고 있습니다. 또한, 인증서 서명에 sha1WithRSAEncryption, 1024비트 RSA 키, 3DES(TripleCipher), PBKDF1, Hash128 등도 발견되어 양자 컴퓨터에 취약합니다.",
        "detected_algorithms": [
          "TLS_RSA_WITH_AES_128_CBC_SHA",
          "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
          "RSA-1024",
          "3DES (TripleCipher)",
          "SHA1",
          "PBKDF1",
          "Hash128"
        ],
        "recommendations": "모든 암호화 구성에서 PQC(양자내성암호) 알고리즘으로 전환을 권장합니다. TLS cipher suite는 PQC 지원 알고리즘(예: Kyber, Dilithium 등)으로 교체하고, RSA/ECC 대신 PQC 기반 인증서 사용, 3DES 및 SHA1 등 구식 알고리즘 제거, 키 길이 최소 3072비트 이상 또는 PQC로 대체, PBKDF2 이상으로 업그레이드, Hash128 대신 SHA-256 이상 사용을 권장합니다.",
        "evidence": "cipher_suite = \"TLS_RSA_WITH_AES_128_CBC_SHA\"\nfallback_cipher = \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\"\nssl_protocol = \"TLSv1.0,TLSv1.1\"\ncert_key_size = 1024\ncert_signature = \"sha1WithRSAEncryption\"\ncard_encryption_mode = \"CBC\"\nencryption_algorithm = \"TripleCipher\"\ndb_cipher = \"LEGACY_CIPHER-EDE3\"\ndb_key_derivation = \"PBKDF1\"\nintegrity_hash = \"Hash128\"\n2024-01-15 09:24:12 INFO: TLS connection established with PublicKey-1024 certificate",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "financial_payment_gateway",
      "file_name": "financial_payment_gateway.conf",
      "response_time": 7.850499868392944,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 7,
      "false_negatives": 4,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: cert_signature = \"sha1WithRSAEncryption\" in [certificate] section)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "NOT DETECTED",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: DH (Evidence: dh_param_size = 1024 in [security] section)",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: 3DES (Evidence: encryption_algorithm = \"TripleCipher\" and fallback_cipher = \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\")",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLSv1.0, TLSv1.1 (Evidence: cipher_suite, fallback_cipher, and ssl_protocol in [security] section)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "DETECTED: RSA (Evidence: root_ca_algorithm = \"PublicKey-2048\" in [certificate] section)",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "DETECTED: RSA, 3DES (Evidence: 2024-01-15 09:23:45 INFO: Initialized PublicKey key pair for payment processing; 2024-01-15 09:23:46 INFO: Using TripleCipher encryption for sensitive card data; 2024-01-15 09:24:12 INFO: TLS connection established with PublicKey-1024 certificate)",
          "authentication_and_key_management_system_configurations": "DETECTED: HMAC-SHA1 (Evidence: hmac_algorithm = \"HMAC-Hash128\" in [payment_encryption] section)",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: TLSv1.0, TLSv1.1, 3DES, SHA1 (Evidence: ssl_protocol = \"TLSv1.0,TLSv1.1\"; fallback_cipher = \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\"; cert_signature = \"sha1WithRSAEncryption\")",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "DETECTED: Hash128 (Evidence: 2024-01-15 09:23:47 WARN: Hash128 hash algorithm in use for integrity checks)",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of quantum-vulnerable algorithms: RSA (1024/2048-bit), 3DES, DH (1024-bit), SHA1, HMAC-SHA1, and legacy TLS protocols (TLSv1.0, TLSv1.1). No evidence of elliptic curve, Korean, or post-quantum algorithms. No migration to quantum-resistant algorithms detected."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "government_document_system",
      "file_name": "government_document_system.log",
      "response_time": 4.757604122161865,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 RSA-2048, RSA certificates, 그리고 Fallback RSA cipher가 활성화되어 있음을 확인했습니다. RSA는 양자컴퓨터에 취약한 비양자내성암호입니다. 또한, KCDSA 및 EC-KCDSA 역시 PQC(양자내성암호)가 아니며, TLS 연결에서 PQC 기반 키 교환이나 서명이 사용되지 않고 있습니다.",
        "detected_algorithms": [
          "RSA-2048",
          "RSA certificates",
          "Fallback RSA cipher",
          "KCDSA",
          "EC-KCDSA"
        ],
        "recommendations": "양자내성암호(PQC) 기반의 키 교환 및 서명 알고리즘(예: CRYSTALS-Kyber, Dilithium 등)으로 전환을 권장합니다. RSA 및 KCDSA/EC-KCDSA 기반 인증서와 암호화 모듈의 사용을 중단하고, PQC 지원 라이브러리 및 인증서 체계 도입을 검토하십시오.",
        "evidence": "[INFO] RSA certificates imported for legacy compatibility\n[WARN] Legacy RSA-2048 enabled for backward compatibility\n[WARN] Fallback RSA cipher available for interoperability\n[INFO] Loading KCDSA certificates for document signing\n[INFO] EC-KCDSA module ready for elliptic curve operations",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "government_document_system",
      "file_name": "government_document_system.log",
      "response_time": 13.742888927459717,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "healthcare_ehr_system",
      "file_name": "healthcare_ehr_system.yaml",
      "response_time": 5.690363883972168,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 4,
      "false_negatives": 5,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 RSA(2048비트), ECDSA(secp256r1), DSA 등 비양자내성(public key) 알고리즘이 다수 사용되고 있습니다. TLS 1.2 및 cipher suite, 데이터베이스 암호화, 인증서 서명, 백업 키 랩핑 등에서 모두 PQC(양자내성암호) 미적용이 확인됩니다.",
        "detected_algorithms": [
          "RSA (sha256WithRSAEncryption, PublicKey-2048, PublicKey-OAEP)",
          "ECDSA (CurveSig-P256, CurveSig, secp256r1)",
          "DSA (KeyExchange-DSA)",
          "BlockCipher-128",
          "PBKDF2-HMAC-Hash160"
        ],
        "recommendations": "양자내성암호(PQC) 기반의 키 교환, 서명, 암호화 알고리즘(예: Kyber, Dilithium, Falcon 등)으로 전환을 검토하십시오. TLS 1.3 및 PQC 지원 cipher suite 적용, 인증서 및 데이터베이스 암호화에 PQC 알고리즘 도입을 권장합니다. 레거시 알고리즘은 즉시 사용 중단을 검토하십시오.",
        "evidence": "signature_algorithm: \"sha256WithRSAEncryption\"\nelliptic_curve: \"secp256r1\"\nkey_size: 2048\ncipher_suites: [\"CurveKE-PublicKey-BlockCipher128-GCM-Hash256\", \"KeyExchange-DSA-BlockCipher128-SHA\"]\nkey_wrap_algorithm: \"PublicKey-OAEP\"",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "healthcare_ehr_system",
      "file_name": "healthcare_ehr_system.yaml",
      "response_time": 18.265416145324707,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 7,
      "false_negatives": 4,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: signature_algorithm: \"sha256WithRSAEncryption\", key_size: 2048 in certificates section)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECDSA/Elliptic Curve (Evidence: elliptic_curve: \"secp256r1\", CurveSig references in certificates and authentication sections)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: DSA (Evidence: legacy_ciphers includes \"KeyExchange-DSA-BlockCipher128-SHA\")",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: BlockCipher-128 (Evidence: algorithm: \"BlockCipher-128-CBC\" and database_cipher: \"BlockCipher-128\" in encryption section, session_cipher: \"BlockCipher-128-GCM\", log_encryption: \"BlockCipher-128\")",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: TLS 1.2 with quantum-vulnerable cipher suites (Evidence: data_transmission.transport_encryption: \"TLS 1.2\", cipher_suites and legacy_ciphers using PublicKey, DSA, CurveKE, BlockCipher128, SHA)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "DETECTED: RSA, DSA, BlockCipher-128 (Evidence: log message: \"PublicKey-2048 key exchange completed for secure session\", \"Legacy KeyExchange-DSA cipher negotiated with older client\", \"Patient data encrypted using BlockCipher-128-CBC\")",
          "authentication_and_key_management_system_configurations": "DETECTED: ECDSA/Elliptic Curve, BlockCipher-128 (Evidence: authentication.token_signature: \"CurveSig-P256\", session_cipher: \"BlockCipher-128-GCM\")",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: DSA, BlockCipher128, SHA (Evidence: legacy_ciphers includes \"KeyExchange-DSA-BlockCipher128-SHA\", deprecated_algorithms includes \"TripleCipher\", \"Hash128\", \"StreamCipher\")",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "DETECTED: DSA (Evidence: log entry: \"Legacy KeyExchange-DSA cipher negotiated with older client\")",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of quantum-vulnerable algorithms: RSA (2048-bit), ECDSA (secp256r1), DSA, and BlockCipher-128 in multiple configuration sections and log entries. TLS 1.2 and associated cipher suites are also quantum-vulnerable. No evidence of Korean algorithms or migration to quantum-resistant algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "industrial_control_system",
      "file_name": "industrial_control_system.log",
      "response_time": 9.252884864807129,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 ECDSA, RSA, DSA, Diffie-Hellman(DH), ECDH, SHA-1 등 비양자내성암호(Non-PQC) 알고리즘이 다수 사용되고 있음이 확인되었습니다. 특히 ECDSA, RSA, DSA는 양자컴퓨터 환경에서 안전하지 않으며, SHA-1 해시 알고리즘도 취약점이 존재합니다. 또한, TLS/SSL 연결에서 ECDHE-ECDSA, DHE-DSA 등 비양자내성 cipher suite가 협상되고 있습니다.",
        "detected_algorithms": [
          "ECDSA",
          "RSA",
          "DSA",
          "Diffie-Hellman (DH)",
          "ECDH",
          "SHA-1",
          "ECDHE-ECDSA-AES128-GCM-SHA256",
          "DHE-DSA-AES128-SHA"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: CRYSTALS-Kyber, Dilithium 등)으로 전환을 검토하십시오. 인증서, 키 교환, 서명, 해시 등 모든 암호화 구성요소에서 PQC 지원을 점진적으로 도입하고, SHA-1 등 취약한 해시 알고리즘은 즉시 사용 중단을 권고합니다.",
        "evidence": "[2024-02-10 08:15:27] INFO: ECDSA certificates loaded for controller authentication\n[2024-02-10 08:15:28] DEBUG: Key exchange using Diffie-Hellman group 14\n[2024-02-10 08:15:29] INFO: Legacy support: DSA keys enabled for backward compatibility\n[2024-02-10 08:16:46] DEBUG: Negotiating cipher suite: ECDHE-ECDSA-AES128-GCM-SHA256\n[2024-02-10 08:16:47] WARN: Fallback to legacy cipher: DHE-DSA-AES128-SHA\n[2024-02-10 08:18:13] DEBUG: Verifying ECDSA signature for operator certificate\n[2024-02-10 08:18:14] INFO: Certificate validation using SHA-1 hash\n[2024-02-10 08:22:19] DEBUG: RSA-2048 signature verification in progress\n[2024-02-10 08:22:20] INFO: DSA keys used for legacy firmware modules",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "industrial_control_system",
      "file_name": "industrial_control_system.log",
      "response_time": 10.721246004104614,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "iot_device_firmware_config",
      "file_name": "iot_device_firmware_config.yaml",
      "response_time": 5.436738014221191,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 4,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 인증, 서명, 키 교환 등 주요 암호화 기능에 prime field elliptic curve(secp256r1), ECDSA, ECDH 등 비양자내성(Non-PQC) 알고리즘이 사용되고 있습니다. 이는 양자컴퓨터 등장 시 안전하지 않습니다.",
        "detected_algorithms": [
          "secp256r1",
          "ECDSA_P256",
          "ECDH",
          "elliptic_curve_digital_signature",
          "ephemeral_elliptic_curve_diffie_hellman"
        ],
        "recommendations": "양자내성(PQC) 알고리즘(예: CRYSTALS-Kyber, Dilithium 등) 기반 인증, 서명, 키 교환 방식으로 전환을 검토하십시오. 하이브리드 모드(기존 ECC+PQC)도 고려할 수 있습니다.",
        "evidence": "# 인증서 기반 인증 및 키 타입: key_type: \"prime_field_elliptic_curve\"\n# 곡선: curve_name: \"secp256r1\"\n# 서명 알고리즘: algorithm: \"ecdsa_p256\"\n# 키 교환: algorithm: \"ephemeral_elliptic_curve_diffie_hellman\"\n# 서명 방식: signing_method: \"elliptic_curve_digital_signature\"",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "iot_device_firmware_config",
      "file_name": "iot_device_firmware_config.yaml",
      "response_time": 7.488419055938721,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 6,
      "false_negatives": 2,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "NOT DETECTED",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: secp256r1 (Evidence: curve_name: \"secp256r1\" under device_security.authentication.curve_parameters)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: Symmetric Block Cipher (Evidence: algorithm: \"symmetric_block_cipher\" with key_size_bits: 128 under device_security.data_protection.at_rest)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: Elliptic Curve Cipher Suites (Evidence: cipher_suites: [\"CurveKE-CurveSig-BlockCipher128-GCM-Hash256\", ...] under device_security.secure_communications.protocols)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "DETECTED: mbedTLS (Evidence: crypto_backend.library: \"mbedTLS\")",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "DETECTED: ECC-based PKI (Evidence: certificate_chain using device_cert: \"/secure/certs/device_secp256r1.pem\" and curve_name: \"secp256r1\")",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "DETECTED: ECC Authentication (Evidence: authentication.method: \"certificate_based\", key_type: \"prime_field_elliptic_curve\", curve_name: \"secp256r1\")",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: Legacy Protocols Disabled (Evidence: deprecated_algorithms.disabled: [\"ssl_v3\", \"tls_v1_0\", \"tls_v1_1\", ...])",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Elliptic curve cryptography (secp256r1/ECDSA/ECDH) and 128-bit symmetric block cipher (GCM mode) are explicitly configured, both of which are quantum-vulnerable. No evidence of RSA, DSA, DH, ElGamal, or Korean algorithms. Legacy protocols are disabled. No migration logs or error patterns detected."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "korean_banking_gateway",
      "file_name": "korean_banking_gateway.conf",
      "response_time": 7.2217912673950195,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 8,
      "false_negatives": 6,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 사용된 주요 키 교환 및 인증 알고리즘(ECDHE-RSA, ECDHE-ECDSA, DHE-RSA)은 모두 양자컴퓨터에 취약한 비양자내성암호(Non-PQC)입니다. 또한, 인증서에 RSA(2048-bit) 및 ECDSA가 명시되어 있으며, 커브로 secp256r1, brainpoolP256r1, secp384r1 등 전통적인 타원곡선이 사용되고 있습니다. PQC(양자내성암호) 알고리즘은 전혀 사용되지 않았습니다.",
        "detected_algorithms": [
          "ECDHE-RSA",
          "ECDHE-ECDSA",
          "DHE-RSA",
          "RSA",
          "ECDSA",
          "secp256r1",
          "brainpoolP256r1",
          "secp384r1"
        ],
        "recommendations": "양자내성암호(PQC) 기반의 키 교환 및 인증 알고리즘(예: Kyber, Dilithium 등) 지원을 검토하고, 하이브리드 모드(전통+PQC) 도입을 권장합니다. 인증서 및 키 교환 방식에 PQC 알고리즘을 적용하고, 관련 라이브러리(OpenSSL 등) 업그레이드 및 정책 수립이 필요합니다.",
        "evidence": "SSLCipherSuite ECDHE-RSA-BlockCipher128KR-GCM-SHA256:ECDHE-RSA-BlockCipher256KR-GCM-SHA384:ECDHE-ECDSA-BlockCipher128KR-GCM-SHA256:ECDHE-ECDSA-BlockCipher256KR-GCM-SHA384:DHE-RSA-BlockCipher128KR-SHA256:DHE-RSA-BlockCipher256KR-SHA384\nSSLOpenSSLConfCmd Curves secp256r1:brainpoolP256r1:secp384r1\nSSLCertificateFile /etc/ssl/certs/banking-portal.crt (2048-bit key)",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "korean_banking_gateway",
      "file_name": "korean_banking_gateway.conf",
      "response_time": 7.357671022415161,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 6,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "korean_blockchain_node",
      "file_name": "korean_blockchain_node.conf",
      "response_time": 6.234850883483887,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 8,
      "false_negatives": 7,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 사용된 주요 암호 알고리즘(secp256k1, secp256r1, ECDSA, RSA 등)은 모두 비양자내성암호로, 양자컴퓨터에 취약합니다. TLS cipher suite에 'TLS_ECDHE_ECDSA_WITH_ARX_128_GCM_SHA256', 'TLS_ECDHE_RSA_WITH_FEISTEL_128_GCM_SHA256' 등이 포함되어 있으며, ECDSA와 RSA 기반 인증서 사용이 명시되어 있습니다. 또한 트랜잭션 서명 및 합의 검증에 secp256k1, secp256r1 곡선이 사용되고 있습니다.",
        "detected_algorithms": [
          "ECDSA",
          "RSA",
          "secp256k1",
          "secp256r1",
          "SHA-256",
          "RIPEMD160",
          "TLS_ECDHE_ECDSA_WITH_ARX_128_GCM_SHA256",
          "TLS_ECDHE_RSA_WITH_FEISTEL_128_GCM_SHA256"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: CRYSTALS-DILITHIUM, FALCON, SPHINCS+) 기반 서명 및 키 교환 방식으로 전환을 검토하십시오. TLS cipher suite 및 인증서 발급 시 PQC 지원 알고리즘을 적용하고, 기존 ECDSA/RSA 기반 인증서와 키를 단계적으로 교체하는 것이 필요합니다.",
        "evidence": "[cryptography] 섹션의 'signature_algorithm = \"korean-elliptic-curve-digital-signature\"', 'signature_curve = \"secp256k1\"', [consensus] 섹션의 'validator_signature_algorithm = \"ec-signature-scheme\"', 'validator_curve = \"secp256r1\"', [p2p_network] 섹션의 'rpc_cipher_suites' 내 'TLS_ECDHE_ECDSA_WITH_ARX_128_GCM_SHA256', 'TLS_ECDHE_RSA_WITH_FEISTEL_128_GCM_SHA256' 등",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "korean_blockchain_node",
      "file_name": "korean_blockchain_node.conf",
      "response_time": 2.6312990188598633,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 7,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "NOT DETECTED",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "NOT DETECTED",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "NOT DETECTED",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "NOT DETECTED",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "NOT DETECTED",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "NOT DETECTED",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or configurations detected in the provided configuration/log data."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "korean_cloud_storage_service",
      "file_name": "korean_cloud_storage_service.yaml",
      "response_time": 6.979802846908569,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 8,
      "false_negatives": 8,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "TLS/SSL 연결에 사용되는 cipher suite에서 ECDHE_RSA, ECDHE_ECDSA와 같은 비양자내성(Non-PQC) 키 교환 및 인증 알고리즘이 다수 사용되고 있습니다. 특히 tier_1 우선순위에서도 ECDSA, RSA 기반 키 교환이 포함되어 있어 양자컴퓨터 공격에 취약합니다. 저장 데이터 암호화(At-rest encryption)는 표준화된 비양자내성암호가 아닌 독자적/국산 알고리즘 위주로 구성되어 있으나, 이들에 대한 PQC 안전성은 명확히 검증되지 않았습니다.",
        "detected_algorithms": [
          "TLS_ECDHE_ECDSA_WITH_INVOLUTION_CIPHER_256_GCM_SHA384",
          "TLS_ECDHE_RSA_WITH_INVOLUTION_CIPHER_256_GCM_SHA384",
          "TLS_ECDHE_ECDSA_WITH_FEISTEL_CIPHER_128_GCM_SHA256",
          "TLS_ECDHE_RSA_WITH_FEISTEL_CIPHER_128_GCM_SHA256",
          "ECDHE_RSA",
          "ECDHE_ECDSA",
          "RSA",
          "ECDSA"
        ],
        "recommendations": "TLS/SSL 연결에서 PQC(양자내성암호) 기반 키 교환 및 인증 알고리즘(예: Kyber, Dilithium 등)이 포함된 하이브리드 또는 순수 PQC cipher suite로 전환을 권장합니다. 저장 데이터 암호화 역시 국제 표준 PQC 알고리즘 도입을 검토해야 하며, 독자 알고리즘의 경우 PQC 안전성에 대한 외부 검증이 필요합니다.",
        "evidence": "cipher_suites:\n  tier_1:\n    - \"TLS_ECDHE_ECDSA_WITH_INVOLUTION_CIPHER_256_GCM_SHA384\"\n    - \"TLS_ECDHE_RSA_WITH_INVOLUTION_CIPHER_256_GCM_SHA384\"\n    - \"TLS_ECDHE_ECDSA_WITH_FEISTEL_CIPHER_128_GCM_SHA256\"\n    - \"TLS_ECDHE_RSA_WITH_FEISTEL_CIPHER_128_GCM_SHA256\"",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "korean_cloud_storage_service",
      "file_name": "korean_cloud_storage_service.yaml",
      "response_time": 10.364313125610352,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 4,
      "false_negatives": 8,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: TLS cipher suites 'TLS_ECDHE_RSA_WITH_INVOLUTION_CIPHER_256_GCM_SHA384', 'TLS_ECDHE_RSA_WITH_FEISTEL_CIPHER_128_GCM_SHA256' in 'cipher_suites' configuration)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECDSA/ECDHE (Evidence: TLS cipher suites 'TLS_ECDHE_ECDSA_WITH_INVOLUTION_CIPHER_256_GCM_SHA384', 'TLS_ECDHE_ECDSA_WITH_FEISTEL_CIPHER_128_GCM_SHA256', 'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384', 'TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256' in 'cipher_suites' configuration; signature_algorithms: 'ecdsa_secp256r1_sha256', 'ecdsa_secp384r1_sha384')",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: GCM, CBC, CTR, CCM modes (Evidence: 'mode' and 'modes' fields in 'encryption.at_rest', 'bucket_level_encryption', and 'client_side_encryption' configurations; e.g., 'mode: GCM', 'modes: [\"CBC\", \"CTR\", \"GCM\"]')",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: TLS 1.2/1.3 with quantum-vulnerable cipher suites (Evidence: 'minimum_tls_version: \"1.2\"', 'preferred_tls_version: \"1.3\"', and cipher suites using RSA/ECDSA key exchange in 'cipher_suites' configuration)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "NOT DETECTED",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "NOT DETECTED",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit use of RSA and ECDSA/ECDHE in TLS cipher suites and signature algorithms, which are quantum-vulnerable. Symmetric cipher modes (GCM, CBC, CTR, CCM) are also present, which are quantum-vulnerable at reduced security levels. No explicit evidence of discrete logarithm, Korean domestic algorithms, or migration logs."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "korean_crypto_library_config",
      "file_name": "korean_crypto_library_config.ini",
      "response_time": 5.259408712387085,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 1,
      "false_negatives": 8,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 사용된 공개키 암호화 알고리즘(KCDSA, ECC)은 모두 비양자내성암호로, 양자컴퓨터 공격에 취약합니다. KCDSA는 DSA 계열(이산로그 기반), ECC는 타원곡선 기반으로, 양자컴퓨터 환경에서 안전하지 않습니다. PQC(양자내성암호) 알고리즘 사용 흔적은 발견되지 않았습니다.",
        "detected_algorithms": [
          "KCDSA",
          "ECC"
        ],
        "recommendations": "공개키 암호화 및 서명에 대해 PQC(양자내성암호) 알고리즘(예: CRYSTALS-Kyber, Dilithium 등)으로의 전환을 검토하십시오. 기존 KCDSA, ECC 기반 인증 및 키 교환은 양자컴퓨터 등장 시 안전하지 않습니다.",
        "evidence": "[PublicKeyCrypto]\nEnabledSchemes=domestic_signature_kcdsa,domestic_ecc_signature\n\n[KCDSA_Configuration]\n; Korean Certificate-based Digital Signature Algorithm\nEnabled=True\nHashFunction=domestic_hash_has160\nKeySizes=2048,3072\nDomainParameters=MODP_2048,MODP_3072",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "korean_crypto_library_config",
      "file_name": "korean_crypto_library_config.ini",
      "response_time": 9.239055871963501,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 6,
      "false_negatives": 7,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "NOT DETECTED",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECC (Evidence: EC_KCDSA_Configuration section with Curves=secp256r1,secp384r1,secp521r1)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: KCDSA (Evidence: KCDSA_Configuration section with KeySizes=2048,3072 and DomainParameters=MODP_2048,MODP_3072)",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "DETECTED: SEED (Evidence: SEED_Configuration section with Enabled=True); DETECTED: ARIA (Evidence: ARIA_Configuration section with Enabled=True); DETECTED: HIGHT (Evidence: HIGHT_Configuration section with Enabled=True); DETECTED: LEA (Evidence: LEA_Configuration section with Enabled=True); DETECTED: KCDSA (Evidence: KCDSA_Configuration section with Enabled=True); DETECTED: HAS-160 (Evidence: HAS160_Configuration section with Enabled=True); DETECTED: LSH (Evidence: LSH_Configuration section with Enabled=True)",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: SEED (Evidence: SEED_Configuration section with KeySize=128); DETECTED: ARIA (Evidence: ARIA_Configuration section with KeySizes=128,192,256); DETECTED: HIGHT (Evidence: HIGHT_Configuration section with KeySize=128); DETECTED: LEA (Evidence: LEA_Configuration section with KeySizes=128,192,256)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "NOT DETECTED",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "DETECTED: KISA Crypto API (Evidence: LibraryName=KISA_Crypto_Module, Version=2.5.1 in General section)",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "DETECTED: HSM (Evidence: KeyStorage=HSM in KeyManagement section); DETECTED: KDF_HMAC_SHA256 (Evidence: KeyDerivation=KDF_HMAC_SHA256 in KeyManagement section)",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: SHA1 (Evidence: SHA1_Support=Limited in LegacySupport section)",
          "korean_domestic_cryptographic_standard_compliance_configurations": "DETECTED: KCMVP, GPKI, NPKI (Evidence: ComplianceLevel=KCMVP_Level_3, GovStandards=GPKI,NPKI in Compliance section)",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit configuration of quantum-vulnerable Korean cryptographic algorithms (SEED, ARIA, HIGHT, LEA, KCDSA, HAS-160, LSH), elliptic curve cryptography (ECC with NIST curves), discrete logarithm-based KCDSA, and legacy SHA1 support. No evidence of RSA, SSL/TLS cipher suite details, certificate authority configurations, or migration logs."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "korean_government_portal",
      "file_name": "korean_government_portal.yaml",
      "response_time": 4.017491817474365,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 1,
      "false_negatives": 7,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "서버 인증서의 key_algorithm이 'RSA' (2048비트)로 설정되어 있습니다. RSA는 양자컴퓨터에 취약한 비양자내성암호입니다. TLS/SSL 인증서에 PQC(양자내성암호) 알고리즘이 사용되지 않고 있습니다.",
        "detected_algorithms": [
          "RSA"
        ],
        "recommendations": "서버 인증서 및 TLS/SSL 구성에 대해 PQC(예: Kyber, Dilithium 등) 기반 알고리즘으로 전환을 검토하십시오. 하이브리드 인증서(전통+PQC) 도입을 권장합니다.",
        "evidence": "certificates:\n    server:\n      cert_path: \"/etc/pki/tls/certs/gov-portal.crt\"\n      key_path: \"/etc/pki/tls/private/gov-portal.key\"\n      key_algorithm: \"RSA\"\n      key_size: 2048",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "korean_government_portal",
      "file_name": "korean_government_portal.yaml",
      "response_time": 10.538923978805542,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 7,
      "false_negatives": 6,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: key_algorithm: \"RSA\", key_size: 2048 under certificates.server)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECDSA/Elliptic Curve (Evidence: supported_curves: [\"secp256r1\", \"secp384r1\", \"secp521r1\", \"brainpoolP256r1\"] and signature_algorithms: [\"ecdsa_secp256r1_sha256\", \"elliptic_curve_signature_sha256\"] under tls)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: DH (Evidence: dh_param_size: 2048 and dh_param_file: \"/etc/ssl/dhparam.pem\" under tls); DETECTED: Discrete Logarithm Signature (Evidence: signature_algorithms: [\"discrete_log_signature_sha256\"] and digital_signatures.signing.key_type: \"discrete-logarithm\")",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "DETECTED: KCDSA (Evidence: digital_signatures.signing.algorithm: \"korean-digital-signature-standard\")",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: 128-bit-block-cipher-cbc (Evidence: storage.algorithm: \"128-bit-block-cipher-cbc\" under security.encryption); DETECTED: 128-bit-substitution-permutation-network (Evidence: session.cipher: \"128-bit-substitution-permutation-network\" under security.encryption); DETECTED: involution-based-block-cipher (Evidence: documents.algorithm: \"involution-based-block-cipher\" under security.encryption)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: ECDHE_RSA, ECDHE_ECDSA, DHE_RSA cipher suites (Evidence: tls.cipher_suites includes \"TLS_ECDHE_ECDSA_WITH_NATIONAL_BLOCK_CIPHER_128_GCM_SHA256\", \"TLS_ECDHE_RSA_WITH_NATIONAL_BLOCK_CIPHER_128_GCM_SHA256\", \"TLS_DHE_RSA_WITH_SUBSTITUTION_NETWORK_128_SHA256\", etc.)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "DETECTED: RSA (Evidence: certificates.server.key_algorithm: \"RSA\" and certificate chain paths under certificates.server)",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "NOT DETECTED",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "NOT DETECTED",
          "korean_domestic_cryptographic_standard_compliance_configurations": "DETECTED: Korean Digital Signature Standard (Evidence: digital_signatures.signing.algorithm: \"korean-digital-signature-standard\")",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit configuration of quantum-vulnerable algorithms: RSA (2048-bit), ECDSA/Elliptic Curve (secp256r1, secp384r1, secp521r1, brainpoolP256r1), DH (2048-bit), KCDSA (Korean Digital Signature Standard), and several 128/256-bit symmetric ciphers in CBC, GCM, and custom modes. TLS cipher suites and certificate authority settings also use quantum-vulnerable primitives. No explicit evidence of quantum-resistant algorithms or migration logs."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "korean_healthcare_system",
      "file_name": "korean_healthcare_system.conf",
      "response_time": 9.706709861755371,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 7,
      "false_negatives": 8,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 TLS/SSL 네트워크 보안에 사용되는 cipher suite와 인증서 서명 알고리즘에 비양자내성암호(Non-PQC)인 RSA, ECDSA, DHE 등이 포함되어 있습니다. 예를 들어, 'TLS_ECDHE_RSA_WITH_FEISTEL_CIPHER_128_GCM_SHA256', 'TLS_ECDHE_ECDSA_WITH_FEISTEL_CIPHER_128_GCM_SHA256', 'TLS_DHE_RSA_WITH_LIGHTWEIGHT_CIPHER_128_SHA256', 'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384' 등이 명시되어 있으며, 서명 알고리즘으로 'ecdsa_secp256r1_sha256', 'rsa_pss_rsae_sha256'이 사용되고 있습니다. 이들은 모두 양자컴퓨터에 취약한 알고리즘입니다.",
        "detected_algorithms": [
          "TLS_ECDHE_ECDSA_WITH_FEISTEL_CIPHER_128_GCM_SHA256",
          "TLS_ECDHE_RSA_WITH_FEISTEL_CIPHER_128_GCM_SHA256",
          "TLS_ECDHE_ECDSA_WITH_SUBSTITUTION_NETWORK_256_GCM_SHA384",
          "TLS_DHE_RSA_WITH_LIGHTWEIGHT_CIPHER_128_SHA256",
          "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
          "ecdsa_secp256r1_sha256",
          "rsa_pss_rsae_sha256"
        ],
        "recommendations": "네트워크 구간 암호화(TLS/SSL) 및 인증서 서명 알고리즘에 대해 양자내성암호(PQC) 기반 알고리즘(예: Kyber, Dilithium 등)으로 전환을 검토하십시오. 하이브리드 모드(전통+PQC) 지원도 고려할 수 있습니다. 서버 및 클라이언트가 PQC cipher suite와 signature algorithm을 지원하도록 업데이트하십시오.",
        "evidence": "cipher_suites = [\"TLS_ECDHE_ECDSA_WITH_FEISTEL_CIPHER_128_GCM_SHA256\", \"TLS_ECDHE_RSA_WITH_FEISTEL_CIPHER_128_GCM_SHA256\", \"TLS_ECDHE_ECDSA_WITH_SUBSTITUTION_NETWORK_256_GCM_SHA384\", \"TLS_DHE_RSA_WITH_LIGHTWEIGHT_CIPHER_128_SHA256\", \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\"]\nsignature_algorithms = [\"ecdsa_secp256r1_sha256\", \"rsa_pss_rsae_sha256\", \"korean_discrete_log_signature_sha256\"]",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "korean_healthcare_system",
      "file_name": "korean_healthcare_system.conf",
      "response_time": 2.830317974090576,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 8,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "NOT DETECTED",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "NOT DETECTED",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "NOT DETECTED",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "NOT DETECTED",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "NOT DETECTED",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "NOT DETECTED",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or configurations was detected in the provided configuration data."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "korean_iot_device_system",
      "file_name": "korean_iot_device_system.log",
      "response_time": 6.0127832889556885,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 6,
      "false_negatives": 4,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 TLS 연결에 사용되는 cipher suite로 ECDSA 기반(TLS_ECDHE_ECDSA_WITH_LIGHTWEIGHT_64BIT_CIPHER_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_ARX_128_GCM_SHA256) 및 RSA-PSS, ECDSA, discrete-log-signature와 같은 비양자내성(Non-PQC) 알고리즘이 명시적으로 사용되고 있습니다. 이는 양자컴퓨터 등장 시 안전하지 않은 알고리즘입니다.",
        "detected_algorithms": [
          "TLS_ECDHE_ECDSA_WITH_LIGHTWEIGHT_64BIT_CIPHER_CBC_SHA256",
          "TLS_PSK_WITH_LIGHTWEIGHT_64BIT_CIPHER_SHA256",
          "TLS_ECDHE_ECDSA_WITH_ARX_128_GCM_SHA256",
          "RSA-PSS",
          "ECDSA",
          "discrete-log-signature"
        ],
        "recommendations": "양자내성암호(PQC) 기반의 키 교환 및 서명 알고리즘(예: Kyber, Dilithium 등)으로 전환을 권장합니다. TLS cipher suite 및 인증서 서명 알고리즘에 PQC 지원을 추가하고, 기존 비양자내성 알고리즘 사용을 점진적으로 중단하세요.",
        "evidence": "2024-12-20 08:15:23.817 [INFO] TLS: Registered cipher suite TLS_ECDHE_ECDSA_WITH_LIGHTWEIGHT_64BIT_CIPHER_CBC_SHA256\n2024-12-20 08:15:23.821 [INFO] TLS: Registered cipher suite TLS_ECDHE_ECDSA_WITH_ARX_128_GCM_SHA256\n2024-12-20 08:15:23.918 [DEBUG] CertValidator: Signature algorithm support: RSA-PSS, ECDSA, discrete-log-signature",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "korean_iot_device_system",
      "file_name": "korean_iot_device_system.log",
      "response_time": 8.76835298538208,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 7,
      "false_negatives": 4,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "NOT DETECTED",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECDSA, secp256r1 (Evidence: TLS: Using elliptic curve secp256r1 for key exchange, TLS: Certificate signature algorithm: ecdsa-with-SHA256, TLS_ECDHE_ECDSA_WITH_LIGHTWEIGHT_64BIT_CIPHER_CBC_SHA256 cipher suite registration and selection)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: discrete-log-signature (Evidence: CertValidator: Signature algorithm support: RSA-PSS, ECDSA, discrete-log-signature)",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: lightweight-64bit-cipher, add-rotate-xor-128 (Evidence: BlockCipher: Algorithm=lightweight-64bit-cipher, KeySize=128, Rounds=32; ARXCipher: Algorithm=add-rotate-xor-128, Rounds=24, KeySize=128; TLS cipher suites using these ciphers)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: TLS_ECDHE_ECDSA_WITH_LIGHTWEIGHT_64BIT_CIPHER_CBC_SHA256, TLS_PSK_WITH_LIGHTWEIGHT_64BIT_CIPHER_SHA256, TLS_ECDHE_ECDSA_WITH_ARX_128_GCM_SHA256 (Evidence: TLS: Registered cipher suite ...; TLS: Client cipher suites: [...]; TLS: Selected cipher suite ...)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "DETECTED: ECDSA, discrete-log-signature (Evidence: CertValidator: Signature algorithm support: RSA-PSS, ECDSA, discrete-log-signature; Loaded 3 trusted root CAs)",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "DETECTED: ECDSA, lightweight-64bit-cipher, add-rotate-xor-128 (Evidence: TLS: Certificate signature algorithm: ecdsa-with-SHA256; Decrypting with lightweight-64bit-cipher-cbc; Cipher operation: mode=decrypt, blocks=2)",
          "authentication_and_key_management_system_configurations": "DETECTED: lightweight cipher for challenge encryption (Evidence: DeviceAuth: Using lightweight cipher for challenge encryption)",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "NOT DETECTED",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of quantum-vulnerable cryptographic algorithms: ECDSA with secp256r1, discrete-log-signature, lightweight-64bit-cipher, and add-rotate-xor-128 in TLS cipher suites, certificate validation, and authentication modules. No evidence of RSA, Korean algorithms, or migration to quantum-resistant algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "korean_secure_email_gateway",
      "file_name": "korean_secure_email_gateway.log",
      "response_time": 7.265588045120239,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 8,
      "false_negatives": 8,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 RSA, ECDSA, RSA-PSS 등 비양자내성(public key) 알고리즘이 S/MIME, OpenPGP, TLS, DKIM 등 다양한 암호화 및 서명 용도로 사용되고 있음이 확인되었습니다. TLS cipher suite에도 RSA/ECDSA 기반 키 교환 및 인증이 포함되어 있습니다. 이는 양자컴퓨터 등장 시 안전하지 않은 알고리즘입니다.",
        "detected_algorithms": [
          "RSA",
          "ECDSA",
          "RSA-PSS",
          "TLS_ECDHE_RSA_WITH_SUBSTITUTION_NETWORK_256_GCM_SHA384",
          "TLS_DHE_RSA_WITH_FEISTEL_128_CBC_SHA256",
          "TLS_ECDHE_ECDSA_WITH_FEISTEL_128_GCM_SHA256",
          "TLS_ECDHE_ECDSA_WITH_ARX_128_GCM_SHA256",
          "rsa-sha256"
        ],
        "recommendations": "S/MIME, OpenPGP, TLS, DKIM 등에서 PQC(양자내성암호) 알고리즘 지원을 도입하고, 기존 RSA/ECDSA 기반 알고리즘은 점진적으로 사용을 중단하십시오. NIST PQC 표준(예: Kyber, Dilithium 등) 기반 알고리즘을 도입하는 것이 바람직합니다.",
        "evidence": "2024-12-20 10:00:02.012 [DEBUG] OpenPGP: Public key algorithms=[RSA, ECDSA, korean-discrete-log-signature]\n2024-12-20 10:00:02.234 [DEBUG] SignatureVerify: Supported algorithms=[RSA-PSS, ECDSA, korean-digital-signature, korean-ec-signature]\n2024-12-20 10:00:02.689 [DEBUG]   - TLS_ECDHE_ECDSA_WITH_FEISTEL_128_GCM_SHA256\n2024-12-20 10:00:02.701 [DEBUG]   - TLS_ECDHE_RSA_WITH_SUBSTITUTION_NETWORK_256_GCM_SHA384\n2024-12-20 10:00:02.712 [DEBUG]   - TLS_ECDHE_ECDSA_WITH_ARX_128_GCM_SHA256\n2024-12-20 10:00:02.723 [DEBUG]   - TLS_DHE_RSA_WITH_FEISTEL_128_CBC_SHA256\n2024-12-20 10:00:03.112 [DEBUG] DKIM: Signing algorithm=rsa-sha256, key_size=2048",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "korean_secure_email_gateway",
      "file_name": "korean_secure_email_gateway.log",
      "response_time": 9.269348859786987,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 8,
      "false_negatives": 7,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: DKIM: Signing algorithm=rsa-sha256, key_size=2048, log line 2024-12-20 10:00:03.112)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECDSA (Evidence: TLS: Using ECDHE with secp256r1 curve, log line 2024-12-20 10:05:12.523)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: DH (Evidence: TLS_DHE_RSA_WITH_FEISTEL_128_CBC_SHA256 cipher suite registered, log line 2024-12-20 10:00:02.723)",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "DETECTED: korean-digital-signature (Evidence: SignatureVerify: Supported algorithms=[RSA-PSS, ECDSA, korean-digital-signature, korean-ec-signature], log line 2024-12-20 10:00:02.234)",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: feistel-cipher-128-cbc (Evidence: SMIME: Supported algorithms=[feistel-cipher-128-cbc, substitution-network-256-gcm, arx-128-gcm], log line 2024-12-20 10:00:01.678)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: TLS_ECDHE_RSA_WITH_SUBSTITUTION_NETWORK_256_GCM_SHA384 (Evidence: TLS: Cipher suites registered, log line 2024-12-20 10:00:02.701)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "DETECTED: RSA (Evidence: DKIM: Signing algorithm=rsa-sha256, key_size=2048, log line 2024-12-20 10:00:03.112)",
          "authentication_and_key_management_system_configurations": "DETECTED: PLAIN (Evidence: SMTP AUTH: Mechanism=PLAIN, user=user@enterprise.kr, log line 2024-12-20 10:05:12.823)",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "NOT DETECTED",
          "korean_domestic_cryptographic_standard_compliance_configurations": "DETECTED: korean-digital-signature (Evidence: SignatureVerify: Supported algorithms=[RSA-PSS, ECDSA, korean-digital-signature, korean-ec-signature], log line 2024-12-20 10:00:02.234)",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of quantum-vulnerable algorithms: RSA (2048-bit, DKIM), ECDSA (secp256r1), DH (TLS_DHE_RSA), and Korean digital signature algorithms. Symmetric ciphers (feistel-cipher-128-cbc) and TLS cipher suites using non-quantum-resistant primitives are present. No evidence of migration to quantum-resistant algorithms or explicit cryptographic library configuration."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "korean_smart_factory_scada",
      "file_name": "korean_smart_factory_scada.ini",
      "response_time": 6.386315107345581,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 5,
      "false_negatives": 8,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 TLS cipher suite에 ECDHE-ECDSA, ECDHE-RSA, DHE-RSA 등 비양자내성(Non-PQC) 키 교환 및 인증 알고리즘이 사용되고 있습니다. 또한, 디지털 서명에 secp256r1(타원곡선), discrete-log 기반 서명 등 양자컴퓨터에 취약한 전통적 알고리즘이 사용되고 있습니다.",
        "detected_algorithms": [
          "ECDHE-ECDSA",
          "ECDHE-RSA",
          "DHE-RSA",
          "secp256r1",
          "discrete-log-signature"
        ],
        "recommendations": "TLS 및 디지털 서명에 대해 NIST PQC 표준(예: Kyber, Dilithium 등) 기반 알고리즘으로 전환을 검토하십시오. 하이브리드 모드(전통+PQC) 적용도 권장됩니다. 인증서 및 키 교환, 서명 알고리즘을 PQC로 교체하고, 관련 소프트웨어/펌웨어의 PQC 지원 여부를 확인하십시오.",
        "evidence": "TLSCipherSuites=ECDHE-ECDSA-LIGHTWEIGHT-CIPHER-64-SHA256:ECDHE-RSA-ARX-128-GCM-SHA256:ECDHE-ECDSA-FEISTEL-128-GCM-SHA256:DHE-RSA-LIGHTWEIGHT-CIPHER-128-SHA256\nLogSignatureCurve=secp256r1\nCommandSignatureAlgorithm=korean-discrete-log-signature",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "korean_smart_factory_scada",
      "file_name": "korean_smart_factory_scada.ini",
      "response_time": 10.134248971939087,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 7,
      "false_negatives": 8,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: TLSCipherSuites=ECDHE-RSA-ARX-128-GCM-SHA256, config section [TLS_Configuration])",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECDSA (Evidence: TLSCipherSuites=ECDHE-ECDSA-LIGHTWEIGHT-CIPHER-64-SHA256 and ECDHE-ECDSA-FEISTEL-128-GCM-SHA256, config section [TLS_Configuration]); DETECTED: secp256r1 (Evidence: LogSignatureCurve=secp256r1, config section [SignatureAlgorithms])",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: DHE (Evidence: TLSCipherSuites=DHE-RSA-LIGHTWEIGHT-CIPHER-128-SHA256, config section [TLS_Configuration])",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: CBC mode block ciphers (Evidence: DefaultMode=CBC, HMIMode=CBC, VPNCipher=feistel-cipher-128-cbc-sha256, config sections [Encryption_General], [Encryption_HMI], [RemoteAccess]); DETECTED: GCM mode block ciphers (Evidence: SensorMode=GCM, VPNDataCipher=substitution-permutation-256-gcm, config sections [Encryption_SensorData], [RemoteAccess]); DETECTED: CTR mode block ciphers (Evidence: PLCMode=CTR, EtherNetIPCipher=arx-128-ctr, SSHCiphers=arx-128-ctr,arx-256-ctr, config sections [Encryption_PLCCommunication], [NetworkSecurity], [RemoteAccess])",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: TLS 1.2/1.3 with quantum-vulnerable cipher suites (Evidence: TLSMinVersion=1.2, TLSMaxVersion=1.3, TLSCipherSuites includes ECDHE-RSA, ECDHE-ECDSA, DHE-RSA, config section [TLS_Configuration])",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "DETECTED: RSA (Evidence: TLSCertificatePath=C:\\SCADA\\Certs\\scada-server.crt, TLSPrivateKeyPath=C:\\SCADA\\Private\\scada-server.key, config section [TLS_Configuration])",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "NOT DETECTED",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "NOT DETECTED",
          "korean_domestic_cryptographic_standard_compliance_configurations": "DETECTED: KoreanIndustrialSecurity=Enabled (Evidence: config section [Security]); DETECTED: OPCUASecurityPolicy=Basic256Sha256_KoreanAlgorithm (Evidence: config section [NetworkSecurity])",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.95,
        "summary": "Detected explicit use of RSA, ECDSA (with secp256r1), and DHE in TLS cipher suites and certificate configurations, all of which are quantum-vulnerable. Multiple symmetric ciphers in CBC, GCM, and CTR modes are present, which are also quantum-vulnerable. Korean domestic cryptographic compliance is enabled, but no explicit evidence of SEED, ARIA, HIGHT, LEA, KCDSA, HAS-160, or LSH algorithms. No evidence of migration logs, error patterns, or cryptographic library imports."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "korean_vpn_server",
      "file_name": "korean_vpn_server.log",
      "response_time": 4.600845098495483,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 4,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 TLS cipher suite로 ECDHE-RSA, ECDHE-ECDSA, DHE-RSA 등이 등록되어 있으며, 서버 인증서의 공개키 알고리즘이 RSA(2048비트)임이 확인되었습니다. 이는 모두 양자컴퓨터에 취약한 비양자내성암호(Non-PQC) 방식입니다. PQC(양자내성암호) 알고리즘 사용 흔적은 발견되지 않았습니다.",
        "detected_algorithms": [
          "ECDHE-RSA",
          "ECDHE-ECDSA",
          "DHE-RSA",
          "RSA"
        ],
        "recommendations": "서버 인증서 및 TLS 핸드셰이크에 PQC(양자내성암호) 알고리즘(예: Kyber, Dilithium 등)을 도입하고, 기존 RSA/ECDSA 기반 cipher suite 지원을 중단하거나 PQC와 하이브리드 방식으로 병행 지원하는 것을 권장합니다.",
        "evidence": "CipherSuite: ECDHE-ECDSA-FEISTEL-128-GCM-SHA256 registered\nCipherSuite: ECDHE-RSA-FEISTEL-128-GCM-SHA256 registered\nCipherSuite: ECDHE-ECDSA-SPN-256-GCM-SHA384 registered\nCipherSuite: ECDHE-RSA-SPN-256-GCM-SHA384 registered\nCipherSuite: DHE-RSA-FEISTEL-128-SHA256 registered\nCertificate: Public key algorithm=RSA, key_size=2048\nCertificate: Signature algorithm=sha256WithRSAEncryption",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "korean_vpn_server",
      "file_name": "korean_vpn_server.log",
      "response_time": 9.014912605285645,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 8,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: Certificate: Public key algorithm=RSA, key_size=2048)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECDSA, secp256r1 (Evidence: SignatureAlgorithm: ecdsa_secp256r1_sha256 enabled; TLS: Using elliptic curve secp256r1 for key exchange)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: DHE (Evidence: CipherSuite: DHE-RSA-FEISTEL-128-SHA256 registered)",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "DETECTED: KCDSA (Evidence: SignatureAlgorithm: korean-discrete-log-signature-sha256 enabled)",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: Feistel-128, SPN-256 (Evidence: Control plane cipher: feistel-network-128bit loaded; Data plane cipher: substitution-permutation-network-128bit loaded; CipherSuite: ECDHE-ECDSA-FEISTEL-128-GCM-SHA256 registered; CipherSuite: ECDHE-ECDSA-SPN-256-GCM-SHA384 registered)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: TLSv1.2, ECDHE, RSA, ECDSA (Evidence: TLS: Supported versions [TLSv1.2, TLSv1.3]; CipherSuite: ECDHE-ECDSA-FEISTEL-128-GCM-SHA256 registered; CipherSuite: ECDHE-RSA-FEISTEL-128-GCM-SHA256 registered; CipherSuite: DHE-RSA-FEISTEL-128-SHA256 registered)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "DETECTED: RSA (Evidence: Loading server certificate: /etc/vpn/certs/server.crt; Certificate: Public key algorithm=RSA, key_size=2048; Certificate: Signature algorithm=sha256WithRSAEncryption)",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "DETECTED: RSA, ECDHE, ECDSA, DHE (Evidence: TLS: ECDHE key exchange completed; TLS: Server certificate sent; TLS: Using elliptic curve secp256r1 for key exchange; TLS: Selected cipher suite ECDHE-ECDSA-FEISTEL-128-GCM-SHA256)",
          "authentication_and_key_management_system_configurations": "NOT DETECTED",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: TLSv1.2 (Evidence: TLS: Supported versions [TLSv1.2, TLSv1.3]; TLS: ClientHello received, version=TLSv1.2)",
          "korean_domestic_cryptographic_standard_compliance_configurations": "DETECTED: KCDSA, korean-ec-signature (Evidence: SignatureAlgorithm: korean-discrete-log-signature-sha256 enabled; SignatureAlgorithm: korean-ec-signature-sha256 enabled)",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of quantum-vulnerable algorithms: RSA (2048-bit), ECDSA (secp256r1), DHE, KCDSA, and symmetric ciphers (Feistel-128, SPN-256). TLSv1.2 and cipher suites using ECDHE, RSA, and ECDSA are present. No evidence of quantum-resistant algorithms or migration activity."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "military_secure_comms",
      "file_name": "military_secure_comms.conf",
      "response_time": 6.153296232223511,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 8,
      "false_negatives": 12,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 'EC-K_SIG-384', 'CurveSig-P384', 'CurveKE-P384', 'PublicKey-4096', 'PublicKey-2048', 'OrdersSignature=PublicKey-4096-PSS', 'KeyExchange-3072', 'KEY_EX-Group-20' 등 ECC(Elliptic Curve Cryptography), RSA, DH 등 비양자내성암호(Non-PQC) 기반 알고리즘이 다수 사용되고 있음이 확인되었습니다. 이는 양자컴퓨터 등장 시 안전하지 않은 것으로 간주됩니다.",
        "detected_algorithms": [
          "EC-K_SIG-384",
          "CurveSig-P384",
          "CurveKE-P384",
          "PublicKey-4096",
          "PublicKey-2048",
          "OrdersSignature=PublicKey-4096-PSS",
          "KeyExchange-3072",
          "KEY_EX-Group-20"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: CRYSTALS-Kyber, Dilithium, Falcon 등)으로 키 교환, 인증, 서명, 암호화 알고리즘을 단계적으로 전환하십시오. 특히 ECC, RSA, DH 기반 알고리즘을 PQC로 대체하는 것이 시급합니다. 상호운용성 필요 시 하이브리드 모드(PQC+기존 알고리즘)도 고려하십시오.",
        "evidence": "C2Authentication=EC-K_SIG-384, DeviceAuthentication=PublicKey-4096+TPM, NetworkAuthentication=CurveSig-P384, OrdersSignature=PublicKey-4096-PSS, KeyExchange-3072, IPsec_IKEv2=KEY_EX-Group-20, Allied_KeyExchange=CurveKE-P384, Legacy_Fallback=PublicKey-2048",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "military_secure_comms",
      "file_name": "military_secure_comms.conf",
      "response_time": 3.666156053543091,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 12,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "NOT DETECTED",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "NOT DETECTED",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "NOT DETECTED",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "NOT DETECTED",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "NOT DETECTED",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "NOT DETECTED",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "NOT DETECTED",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 1.0,
        "summary": "No explicit evidence of quantum-vulnerable cryptographic algorithms or configurations detected in the provided configuration and log data."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "mobile_app_security_audit",
      "file_name": "mobile_app_security_audit.log",
      "response_time": 7.001999139785767,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 3,
      "false_negatives": 5,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 2048-bit modular arithmetic public key(일반적으로 RSA), EC_CRYPTO P-256(타원곡선), TLS_RSA_WITH_AES_128_CBC_SHA(비양자내성 RSA 키 교환), StreamCipher-SHA(취약한 스트림 암호) 등 비양자내성암호가 사용되고 있음이 확인되었습니다. 또한, 인증서 키 크기가 3072비트 미만으로 장기 보안에 취약하다는 경고도 있습니다.",
        "detected_algorithms": [
          "RSA-2048",
          "EC_CRYPTO P-256",
          "TLS_RSA_WITH_AES_128_CBC_SHA",
          "StreamCipher-SHA"
        ],
        "recommendations": "양자내성암호(PQC) 기반 알고리즘(예: Kyber, Dilithium 등)으로 인증서 및 키 교환 방식을 전환하고, 기존 RSA/ECC 기반 알고리즘 지원을 중단하거나 최소화하십시오. 인증서 키 크기도 3072비트 이상 또는 PQC로 교체를 권장합니다.",
        "evidence": "2025-01-20 10:30:15.334 [TRACE] X509::ParsePublicKey() - Certificate uses 2048-bit modular arithmetic public key\n2025-01-20 10:30:15.567 [WARNING] CipherAnalysis::EvaluateSuite() - TLS_RSA_WITH_AES_128_CBC_SHA: No forward secrecy, CBC mode vulnerable\n2025-01-20 10:30:15.723 [TRACE] KeyAttributes::Inspect() - Key ID: user_auth_key, Algorithm: EC_CRYPTO P-256, Usage: Signing\n2025-01-20 10:30:15.601 [ERROR] SecurityIssue::LogFinding() - CRITICAL: StreamCipher-SHA cipher suite enabled - known cryptographic weaknesses",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "mobile_app_security_audit",
      "file_name": "mobile_app_security_audit.log",
      "response_time": 7.818592071533203,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 6,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "nginx_mixed_security_gateway",
      "file_name": "nginx_mixed_security_gateway.conf",
      "response_time": 6.501450061798096,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 5,
      "false_negatives": 3,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "nginx 설정 파일에서 RSA(2048비트), ECDH(Elliptic Curve Diffie-Hellman), secp384r1, secp256r1, prime256v1, X25519 등 비양자내성(Non-PQC) 암호 알고리즘이 사용되고 있습니다. 이는 전문가 지식 베이스에서 언급된 바와 같이 양자 컴퓨터에 취약한 알고리즘입니다. 또한, TLSv1, TLSv1.1, TLSv1.2 등 구버전 프로토콜도 일부 location에서 허용되고 있습니다.",
        "detected_algorithms": [
          "RSA",
          "ECDH",
          "secp384r1",
          "secp256r1",
          "prime256v1",
          "X25519"
        ],
        "recommendations": "양자내성(PQC) 알고리즘(예: Kyber, Dilithium 등) 지원이 가능한 프론트엔드/게이트웨이로 전환하거나, 하이브리드 PQC+전통 알고리즘을 지원하는 TLS 라이브러리로 업그레이드하세요. 또한, TLSv1 및 TLSv1.1 지원을 중단하고 최신 프로토콜만 허용하는 것이 좋습니다.",
        "evidence": "ssl_certificate /etc/nginx/ssl/gateway_rsa_2048.crt;\nssl_ecdh_curve secp384r1:secp256r1:prime256v1;\nssl_ciphers ...CurveKE-CurveSig-BlockCipher256-GCM-SHA384...;\nlocation /api/v2 { ... ssl_ecdh_curve X25519:secp384r1; ... }\nlocation /legacy { ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ... }",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "nginx_mixed_security_gateway",
      "file_name": "nginx_mixed_security_gateway.conf",
      "response_time": 10.180698156356812,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 4,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "openssh",
      "file_name": "openssh.log",
      "response_time": 4.699714660644531,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그 및 파일 목록에서 ssh_host_rsa_key, ssh_host_dsa_key, ssh_host_ecdsa_key, ssh_host_ed25519_key 등 전통적인 비양자내성 암호(특히 RSA, DSA, ECDSA, Ed25519) 기반의 호스트 키가 존재하며, sshd가 최소한 ed25519 키를 활성화하여 사용 중임이 로그에서 확인됩니다. PQC(양자내성암호) 알고리즘은 사용되지 않고 있습니다.",
        "detected_algorithms": [
          "RSA",
          "DSA",
          "ECDSA",
          "ED25519"
        ],
        "recommendations": "OpenSSH에서 PQC(예: NTRU, Kyber 등) 지원이 추가된 최신 버전으로 업그레이드하고, sshd_config에서 HostKeyAlgorithms 및 KexAlgorithms에 PQC 알고리즘을 우선 적용하세요. 기존 비양자내성 키는 비활성화하거나 제거하는 것이 권장됩니다.",
        "evidence": "파일 목록: ssh_host_rsa_key, ssh_host_dsa_key, ssh_host_ecdsa_key, ssh_host_ed25519_key; 로그: debug1: private host key #3: ssh-ed25519 SHA256:D9gn4/bc9CzEX7ks09ULCi8LJ8VBXgFz7xwhFDjW3q4",
        "confidence_score": 0.95,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "openssh",
      "file_name": "openssh.log",
      "response_time": 6.930035829544067,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: ssh_host_rsa_key, ssh_host_rsa_key.pub files present; log entry debug1: private host key #0: ssh-rsa SHA256:ex0t/cqY4gRUqts/tslynM76eM3FWGce4tMZp659I1Q)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECDSA (Evidence: ssh_host_ecdsa_key, ssh_host_ecdsa_key.pub files present; log entry debug1: private host key #2: ecdsa-sha2-nistp256 SHA256:tBwclE61tJsWikJeMj5+p+y8Yni6ncq49KkGqwmupUg)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: DSA (Evidence: ssh_host_dsa_key, ssh_host_dsa_key.pub files present; log entry debug1: private host key #1: ssh-dss SHA256:NyA+nn6y+zEmShaSGos0Dk+P+cXkmA+Sa0h/TgPeUlQ)",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "NOT DETECTED",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "NOT DETECTED",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "DETECTED: libcrypto (Evidence: libcrypto-41.dll file present)",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "DETECTED: RSA, DSA, ECDSA (Evidence: log entries debug1: private host key #0: ssh-rsa, #1: ssh-dss, #2: ecdsa-sha2-nistp256)",
          "authentication_and_key_management_system_configurations": "DETECTED: SSH host key configuration (Evidence: ssh_host_rsa_key, ssh_host_dsa_key, ssh_host_ecdsa_key, ssh_host_ed25519_key files present)",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: DSA (Evidence: ssh-dss key present and referenced in logs; debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms)",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "DETECTED: DSA deprecation (Evidence: log entry debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms)",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of quantum-vulnerable algorithms: RSA, DSA, and ECDSA in SSH host key configurations and log entries. DSA is deprecated and not permitted by default. No evidence of Korean algorithms, symmetric cipher configurations, or SSL/TLS quantum-vulnerable cipher suites in the provided data."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "quantum_safe_migration_plan",
      "file_name": "quantum_safe_migration_plan.yaml",
      "response_time": 5.636287212371826,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 5,
      "false_negatives": 6,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "현재 사용 중인 공개키 암호(예: pk_crypto_2048, pk_crypto_4096, ecdsa_p256, ecdh_curve25519, dsa_2048)는 모두 양자컴퓨터에 취약한 비양자내성암호로 분류되어 있습니다. 각 항목에 quantum_vulnerable: true로 명시되어 있으며, 특히 SSL/TLS 인증서, 코드 서명, API 인증, 키 교환 등 핵심 인프라에 사용되고 있습니다.",
        "detected_algorithms": [
          "pk_crypto_2048",
          "pk_crypto_4096",
          "ecdsa_p256",
          "ecdh_curve25519",
          "dsa_2048"
        ],
        "recommendations": "공개키 인프라(PKI)에서 PQC(양자내성암호) 알고리즘(예: Kyber, Dilithium 등)으로 조속히 전환을 추진해야 합니다. 우선순위가 'critical'로 지정된 SSL/TLS, API 인증, 키 교환부터 단계적으로 마이그레이션을 시작하고, 코드 서명 및 레거시 시스템도 계획에 포함해야 합니다.",
        "evidence": "- algorithm: \"pk_crypto_2048\"\n  usage: \"ssl_tls_certificates\"\n  quantum_vulnerable: true\n- algorithm: \"ecdsa_p256\"\n  usage: \"api_authentication\"\n  quantum_vulnerable: true\n- algorithm: \"ecdh_curve25519\"\n  usage: \"key_exchange\"\n  quantum_vulnerable: true",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "quantum_safe_migration_plan",
      "file_name": "quantum_safe_migration_plan.yaml",
      "response_time": 7.139677047729492,
      "json_valid": true,
      "true_positives": 3,
      "false_positives": 6,
      "false_negatives": 3,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: algorithm: \"pk_crypto_2048\" and algorithm: \"pk_crypto_4096\" under public_key_infrastructure)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECDSA (Evidence: algorithm: \"ecdsa_p256\" under public_key_infrastructure); DETECTED: ECDH (Evidence: algorithm: \"ecdh_curve25519\" under public_key_infrastructure)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: DSA (Evidence: algorithm: \"dsa_2048\" under public_key_infrastructure)",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "NOT DETECTED",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: ECDHE (Evidence: tls_handshake: classical: \"ecdhe_p256\" under hybrid_configurations in phase2_hybrid_deployment)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "DETECTED: liboqs (Evidence: implementation: \"liboqs\" under post_quantum_algorithms.selected_algorithms)",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "DETECTED: RSA (Evidence: algorithm: \"pk_crypto_2048\" and \"pk_crypto_4096\" used for ssl_tls_certificates and code_signing under public_key_infrastructure)",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "DETECTED: ECDSA (Evidence: algorithm: \"ecdsa_p256\" used for api_authentication under public_key_infrastructure)",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: DSA (Evidence: algorithm: \"dsa_2048\" used for legacy_systems under public_key_infrastructure)",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "DETECTED: PQ migration (Evidence: migration_phases.phase2_hybrid_deployment with hybrid_configurations combining classical and post_quantum algorithms)"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of quantum-vulnerable algorithms: RSA (2048/4096), ECDSA (P-256), ECDH (Curve25519), DSA (2048) in PKI, authentication, and TLS configurations. Hybrid migration to post-quantum algorithms (Kyber, Dilithium) is planned. No evidence of Korean algorithms or quantum-vulnerable symmetric ciphers."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "satellite_ground_station",
      "file_name": "satellite_ground_station.log",
      "response_time": 7.50568699836731,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 사용된 암호 알고리즘(ARIA, SEED, LEA, KCDSA, EC-KCDSA, HIGHT, HAS-160, LSH 등)은 모두 한국 국가표준 또는 기존 비양자내성암호로, 양자컴퓨터에 취약할 수 있습니다. PQC(양자내성암호) 알고리즘 사용 흔적이 없습니다. 특히 KCDSA, EC-KCDSA, Dual-KCDSA 등 서명 알고리즘과 SEED, ARIA, LEA, HIGHT 등 대칭키 암호는 양자 공격에 안전하지 않습니다.",
        "detected_algorithms": [
          "ARIA-256",
          "SEED-256",
          "LEA-128",
          "KCDSA",
          "EC-KCDSA",
          "Dual-KCDSA",
          "HIGHT-128",
          "HAS-160",
          "LSH-256",
          "LSH-512"
        ],
        "recommendations": "양자내성암호(PQC) 알고리즘(예: Kyber, Dilithium, Falcon 등)으로 전환을 검토하십시오. 특히 인증(서명) 및 키 교환에 PQC 기반 알고리즘을 적용하고, 기존 대칭키 암호도 키 길이 확장 등 양자 안전성 강화를 고려해야 합니다.",
        "evidence": "[00:00:07] ARIA-256 cipher loaded for telemetry encryption\n[00:00:08] SEED-256 initialized for command uplink security\n[00:00:10] KCDSA certificates loaded for ground station authentication\n[00:05:03] Command authentication: KCDSA-3072 digital signature\n[00:10:04] Signature validation: EC-KCDSA-384\n[00:15:02] Range measurement encryption: HIGHT-128 (low latency)\n[00:15:05] Emergency override: Dual-KCDSA-521 authentication",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "satellite_ground_station",
      "file_name": "satellite_ground_station.log",
      "response_time": 9.75930404663086,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "security_scanner_findings",
      "file_name": "security_scanner_findings.log",
      "response_time": 5.339741230010986,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 14,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 StreamCipher-SHA와 1024-bit PublicKey(아마도 RSA) 사용이 확인되었습니다. 이는 양자내성암호가 아니며, Shor's algorithm 등 양자컴퓨터 공격에 취약합니다. 또한, Hash128 해시 함수 사용도 발견되어 전반적으로 암호화 구성에 취약점이 존재합니다.",
        "detected_algorithms": [
          "StreamCipher-SHA",
          "1024-bit PublicKey (likely RSA)",
          "Hash128"
        ],
        "recommendations": "StreamCipher-SHA와 1024-bit PublicKey(특히 RSA)는 즉시 사용 중단하고, AEAD 기반 암호화 및 PQC(양자내성암호) 알고리즘으로 전환을 권장합니다. 인증서는 PQC 또는 최소한 ECC P-384 이상으로 교체하고, 해시 함수도 SHA-256 이상으로 업그레이드하세요.",
        "evidence": "[2025-01-22 16:45:05] [CRITICAL] Details: Server accepts StreamCipher-SHA cipher suite\n[2025-01-22 16:45:08] [HIGH] Details: Certificate /etc/ssl/api-cert.pem uses 1024-bit PublicKey key\n[2025-01-22 16:45:12] [HIGH] Details: Application uses Hash128 for password hashing",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "security_scanner_findings",
      "file_name": "security_scanner_findings.log",
      "response_time": 7.198807001113892,
      "json_valid": true,
      "true_positives": 5,
      "false_positives": 7,
      "false_negatives": 10,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA 1024-bit (Evidence: Certificate /etc/ssl/api-cert.pem uses 1024-bit PublicKey key, api-gateway-03.internal)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: secp192r1 (P-192) (Evidence: CurveSig signatures using secp192r1 curve, payment-processor.internal)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: Diffie-Hellman Group 14 (2048-bit MODP) (Evidence: IKEv2 uses 2048-bit MODP group, vpn-gateway.internal)",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "DETECTED: HAS-160 (Evidence: SMB signing uses Hash-160 HMAC, file-server-05.internal)",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: StreamCipher (Evidence: Server accepts StreamCipher-SHA cipher suite, web-server-01.internal); DETECTED: TripleCipher (Evidence: Database uses TripleCipher-CBC for column encryption, database-cluster-01.internal)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: StreamCipher-SHA (Evidence: Server accepts StreamCipher-SHA cipher suite, web-server-01.internal)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "DETECTED: RSA 1024-bit (Evidence: Certificate /etc/ssl/api-cert.pem uses 1024-bit PublicKey key, api-gateway-03.internal)",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "DETECTED: Multiple (Evidence: Log entries for StreamCipher-SHA, RSA 1024-bit, secp192r1, TripleCipher, DH Group 14, Hash-160)",
          "authentication_and_key_management_system_configurations": "DETECTED: Hash128 (Evidence: Application uses Hash128 for password hashing, /opt/app/auth/password_hash.py:line 45, legacy-app-server.internal)",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: StreamCipher-SHA, TripleCipher-CBC, Hash128, secp192r1, DH Group 14 (Evidence: Multiple log entries indicating use of deprecated/legacy algorithms)",
          "korean_domestic_cryptographic_standard_compliance_configurations": "DETECTED: HAS-160 (Evidence: SMB signing uses Hash-160 HMAC, file-server-05.internal)",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "DETECTED: Multiple (Evidence: Log entries with CRITICAL/HIGH/MEDIUM severity and explicit recommendations to migrate from vulnerable algorithms)",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of quantum-vulnerable algorithms: RSA 1024-bit, secp192r1 (P-192), Diffie-Hellman Group 14 (2048-bit MODP), StreamCipher-SHA, TripleCipher-CBC, Hash128, and HAS-160. Multiple systems are using legacy or deprecated cryptographic primitives that require migration to quantum-resistant alternatives."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "smart_city_infrastructure",
      "file_name": "smart_city_infrastructure.log",
      "response_time": 7.095073938369751,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 사용된 암호 알고리즘(ECDSA-P256, RSA-2048, KCDSA-2048, EC-KCDSA, DHE-2048, SHA-1, 3DES, Blowfish 등)은 모두 비양자내성암호(Non-PQC)로, 양자컴퓨터 환경에서 안전하지 않습니다. 특히 RSA, ECDSA, DHE, KCDSA, EC-KCDSA 등은 양자컴퓨터의 Shor 알고리즘에 취약하며, SHA-1, 3DES, Blowfish 등은 추가적으로 현대 보안 기준에도 부적합합니다.",
        "detected_algorithms": [
          "HIGHT-64",
          "ARIA-128-GCM",
          "ECDSA-P256",
          "RSA-2048",
          "LEA-128",
          "SEED-128",
          "KCDSA-2048",
          "SHA-256",
          "EC-KCDSA",
          "ARIA-256",
          "LSH-256",
          "SEED-256",
          "DHE-2048",
          "AES-128-CBC",
          "HMAC-SHA1",
          "SHA-1",
          "AES-128-CTR",
          "RSA-3072",
          "Blowfish-256",
          "3DES"
        ],
        "recommendations": "중요 통신 및 인증 경로에 대해 PQC(양자내성암호) 알고리즘(예: Kyber, Dilithium, Falcon 등)으로의 전환을 권장합니다. 특히 RSA, ECDSA, DHE, KCDSA, EC-KCDSA 기반의 키 교환 및 서명은 PQC 대체 알고리즘으로 교체해야 하며, SHA-1, 3DES, Blowfish 등은 즉시 사용 중단을 권고합니다.",
        "evidence": "[2024-06-10 06:00:18] Traffic light controller auth: ECDSA-P256\n[2024-06-10 06:00:19] Central server connection: RSA-2048 key exchange\n[2024-06-10 06:05:33] Command signing: KCDSA-2048\n[2024-06-10 06:10:04] Sensor authentication: EC-KCDSA\n[2024-06-10 06:15:22] Grid control: DHE-2048 key exchange\n[2024-06-10 06:15:24] WARN: Legacy SHA-1 in use for billing compatibility\n[2024-06-10 06:20:47] Camera authentication: RSA-3072\n[2024-06-10 06:20:49] Archive encryption: 3DES (legacy compatibility)\n[2024-06-10 06:20:50] ERROR: 3DES and Blowfish marked as deprecated",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "smart_city_infrastructure",
      "file_name": "smart_city_infrastructure.log",
      "response_time": 8.969188928604126,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 0,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "ssh_server_hardened",
      "file_name": "ssh_server_hardened.conf",
      "response_time": 4.94651985168457,
      "json_valid": true,
      "true_positives": 4,
      "false_positives": 4,
      "false_negatives": 4,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 사용된 HostKey 및 Key Exchange 알고리즘은 모두 비양자내성암호(Non-PQC)입니다. RSA, ECDSA, Ed25519, Curve25519, NIST P-256/384/521, Diffie-Hellman 등은 양자컴퓨터에 취약합니다. PQC(양자내성암호) 알고리즘이 적용되지 않았습니다.",
        "detected_algorithms": [
          "RSA",
          "ECDSA",
          "Ed25519",
          "Curve25519",
          "NIST P-256",
          "NIST P-384",
          "NIST P-521",
          "Diffie-Hellman"
        ],
        "recommendations": "OpenSSH에서 지원하는 PQC(예: NTRU, Kyber 등) 알고리즘이 공식적으로 도입되면 해당 알고리즘을 HostKey 및 KexAlgorithms에 추가하고, 기존 비양자내성 알고리즘은 비활성화할 것을 권장합니다. 현재는 PQC 지원이 제한적이므로, 최신 OpenSSH 및 라이브러리의 PQC 지원 현황을 주기적으로 확인하십시오.",
        "evidence": "HostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\nHostKey /etc/ssh/ssh_host_ed25519_key\nKexAlgorithms curve25519-hash_256,curve25519-hash_256@libssh.org,curve_ke-sha2-nistp521,curve_ke-sha2-nistp384,curve_ke-sha2-nistp256,diffie-hellman-group-exchange-hash_256",
        "confidence_score": 1.0,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "ssh_server_hardened",
      "file_name": "ssh_server_hardened.conf",
      "response_time": 5.4514501094818115,
      "json_valid": true,
      "true_positives": 3,
      "false_positives": 2,
      "false_negatives": 5,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: HostKey /etc/ssh/ssh_host_rsa_key)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "DETECTED: ECDSA (Evidence: HostKey /etc/ssh/ssh_host_ecdsa_key)",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: Diffie-Hellman (Evidence: KexAlgorithms diffie-hellman-group-exchange-hash_256)",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: AES (Evidence: Ciphers aes256-gcm@openssh.com, aes128-gcm@openssh.com, aes256-ctr, aes192-ctr, aes128-ctr)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "NOT DETECTED",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "NOT DETECTED",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: Protocol 2 (Evidence: Protocol 2; Protocol 1 - DISABLED (obsolete, insecure))",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit configuration of RSA, ECDSA, Diffie-Hellman, and AES—all quantum-vulnerable algorithms. No evidence of Korean cryptographic algorithms, SSL/TLS, or migration logs. Protocol 2 (SSH) is present; Protocol 1 is disabled."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "ssl_legacy_banking_configuration",
      "file_name": "ssl_legacy_banking_configuration.conf",
      "response_time": 6.5748231410980225,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 6,
      "false_negatives": 5,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 사용된 인증서와 키 파일명(server-pk_crypto-1024.crt, banking-pk_crypto-1024.crt 등) 및 DH 파라미터(dhparam-1024.pem)가 모두 1024비트 전통적 공개키 암호(RSA 또는 DH) 기반임을 시사합니다. SSLCipherSuite, SignatureAlgorithms 등에서 PQC(양자내성암호) 관련 알고리즘은 언급되지 않았고, PublicKey, CurveKE, CurveSig 등은 모두 양자 취약한 RSA, ECDSA, DH, ECC 계열임이 명확합니다. 또한 CBC, SHA, GCM 등 기존 대칭/해시 알고리즘만 사용되고 있습니다.",
        "detected_algorithms": [
          "RSA",
          "DH",
          "ECDSA",
          "CBC",
          "SHA",
          "GCM"
        ],
        "recommendations": "모든 인증서, 키, DH 파라미터를 PQC(양자내성암호) 기반으로 교체하고, PQC 지원 cipher suite 및 signature algorithm을 명시적으로 설정하세요. 하이브리드 모드(전통+PQC)도 고려할 수 있습니다.",
        "evidence": "SSLCertificateFile /etc/ssl/certs/server-pk_crypto-1024.crt, SSLCertificateKeyFile /etc/ssl/private/server-pk_crypto-1024.key, SSLOpenSSLConfCmd DHParameters /etc/ssl/dhparam-1024.pem, SSLCipherSuite ...CurveKE-PublicKey-BlockCipher256-GCM-SHA384..., SSLOpenSSLConfCmd SignatureAlgorithms PublicKey+Hash160:CurveSig+Hash160",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "ssl_legacy_banking_configuration",
      "file_name": "ssl_legacy_banking_configuration.conf",
      "response_time": 5.708554029464722,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 3,
      "false_negatives": 4,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: SSLCertificateFile /etc/ssl/certs/server-pk_crypto-1024.crt, SSLCertificateKeyFile /etc/ssl/private/server-pk_crypto-1024.key, SSLCertificateFile /etc/ssl/certs/banking-pk_crypto-1024.crt, SSLCertificateKeyFile /etc/ssl/private/banking-pk_crypto-1024.key)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "NOT DETECTED",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: DH (Evidence: SSLOpenSSLConfCmd DHParameters /etc/ssl/dhparam-1024.pem)",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "NOT DETECTED",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: SSL/TLS with quantum-vulnerable cipher suites (Evidence: SSLCipherSuite includes LEGACY_CIPHER-CBC3-SHA, StreamCipher-SHA, and other non-post-quantum-safe ciphers)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "NOT DETECTED",
          "authentication_and_key_management_system_configurations": "NOT DETECTED",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "DETECTED: Deprecated SSL/TLS settings (Evidence: SSLInsecureRenegotiation on, use of 1024-bit keys, inclusion of LOW cipher suites)",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of RSA certificates with 1024-bit keys and Diffie-Hellman parameters with 1024-bit keys, both quantum-vulnerable. SSL/TLS configuration includes legacy and quantum-vulnerable cipher suites and deprecated settings such as insecure renegotiation and low/medium ciphers. No evidence of elliptic curve, Korean algorithms, or migration to quantum-resistant algorithms."
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "telecom_5g_network",
      "file_name": "telecom_5g_network.conf",
      "response_time": 6.575821876525879,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 8,
      "false_negatives": 11,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "설정 파일에서 CurveSig-P256, CurveKE-P256, PublicKey-2048, PublicKey-3072, PublicKey-4096, sha256WithECDSA, sha1WithRSA 등 ECC(ECDSA), RSA, DH 등 비양자내성암호(Non-PQC) 알고리즘이 인증, 키 교환, 서명, 인증서 등에 사용되고 있음. PQC(양자내성암호) 알고리즘 사용 흔적은 없음.",
        "detected_algorithms": [
          "CurveSig-P256",
          "CurveKE-P256",
          "PublicKey-2048",
          "PublicKey-3072",
          "PublicKey-4096",
          "sha256WithECDSA",
          "sha1WithRSA",
          "EC-K_SIG",
          "KEY_EX-Group-14"
        ],
        "recommendations": "양자내성암호(PQC) 기반의 키 교환, 서명, 인증서 알고리즘(예: Kyber, Dilithium, Falcon 등)으로 전환을 검토하고, 기존 ECC, RSA, DH 기반 알고리즘 사용을 단계적으로 중단하십시오. 하이브리드 모드(PQC+기존 알고리즘)도 고려할 수 있습니다.",
        "evidence": "SubscriberAuth=CurveSig-P256\nHomeNetworkAuth=PublicKey-3072\nPrimaryKeyExchange=CurveKE-P256\nSecondaryKeyExchange=KeyExchange-2048\nLegacyKeyExchange=PublicKey-2048\nBaseStationCert=CurveSig-P256\nCoreNetworkCert=PublicKey-4096\nCertSignature=sha256WithECDSA\nLegacySignature=sha1WithRSA\nEvent=UE_ATTACHMENT\nDetails=Device authenticated using EC-K_SIG",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "telecom_5g_network",
      "file_name": "telecom_5g_network.conf",
      "response_time": 11.853828191757202,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 12,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "tls_cipher_negotiation_warnings",
      "file_name": "tls_cipher_negotiation_warnings.log",
      "response_time": 7.542680740356445,
      "json_valid": true,
      "true_positives": 0,
      "false_positives": 7,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 PublicKey 기반(1024/2048비트), CurveSig P-256(ECDSA), TripleCipher-EDE-CBC-SHA(3DES), StreamCipher(RC4류 추정), Hash128/Hash-160(취약 해시), secp256r1 곡선(ECDH/ECDSA) 등 비양자내성암호가 다수 사용되고 있습니다. 특히 RSA/ECDSA/3DES/RC4류, 1024비트 키, 취약 해시(Hash128/Hash-160) 등은 양자컴퓨터에 취약하며, PQC(양자내성암호) 적용이 전혀 확인되지 않습니다.",
        "detected_algorithms": [
          "RSA (1024/2048-bit)",
          "ECDSA (P-256)",
          "3DES (TripleCipher-EDE-CBC-SHA)",
          "RC4-like (StreamCipher)",
          "SHA-1/Hash-160",
          "MD5-like (Hash128)",
          "ECDH (secp256r1)"
        ],
        "recommendations": "모든 인증서 및 키 교환, 서명 알고리즘에 대해 PQC(양자내성암호) 지원 알고리즘(예: Kyber, Dilithium 등)으로 전환을 검토하십시오. 3DES, RC4, 1024비트 키, SHA-1/Hash-160, MD5/Hash128 등은 즉시 사용 중단하고, PQC와 하이브리드 모드(TLS 1.3+PQC) 적용을 권장합니다.",
        "evidence": "2024-09-19 10:00:02 [INFO] Loading PublicKey-1024 server certificate from /etc/ssl/server.crt\n2024-09-19 10:00:05 [INFO] Initializing cipher suite: PublicKey-TripleCipher-EDE-CBC-SHA\n2024-09-19 10:00:06 [WARN] TripleCipher cipher suite enabled - known to be vulnerable\n2024-09-19 10:00:08 [ERROR] StreamCipher stream cipher detected - cryptographically broken\n2024-09-19 10:00:13 [INFO] CurveSig P-256 signature verification enabled\n2024-09-19 10:00:14 [INFO] CURVE_KE key exchange using secp256r1 curve\n2024-09-19 10:00:15 [INFO] KEY_EX key exchange using 1024-bit parameters\n2024-09-19 10:02:02 [INFO] CurveSig signature verification using P-256 curve",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "tls_cipher_negotiation_warnings",
      "file_name": "tls_cipher_negotiation_warnings.log",
      "response_time": 8.300901174545288,
      "json_valid": false,
      "true_positives": 0,
      "false_positives": 0,
      "false_negatives": 2,
      "raw_response": {}
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": true,
      "agent_type": "logs_config",
      "test_id": "vpn_server_runtime",
      "file_name": "vpn_server_runtime.log",
      "response_time": 6.7081379890441895,
      "json_valid": true,
      "true_positives": 1,
      "false_positives": 2,
      "false_negatives": 2,
      "raw_response": {
        "is_pqc_vulnerable": true,
        "vulnerability_details": "로그에서 TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 cipher suite가 선택되었으며, 2048-bit MODP 그룹(DH Group 14)과 RSA(2048비트) 공개키 알고리즘이 사용되고 있습니다. 이는 모두 양자컴퓨터에 취약한 비양자내성암호(Non-PQC) 방식입니다.",
        "detected_algorithms": [
          "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256",
          "RSA",
          "Diffie-Hellman (MODP 2048)"
        ],
        "recommendations": "PQC(양자내성암호) 알고리즘(예: Kyber, Dilithium 등) 기반의 키 교환 및 인증서 사용을 검토하고, 서버 및 클라이언트가 지원하는 경우 PQC cipher suite로 전환을 권장합니다.",
        "evidence": "2025-01-15 08:15:23.645 [TRACE] PublicKeyExtractor::GetKeyInfo() - Public key algorithm: modular arithmetic, key size: 2048 bits\n2025-01-15 08:15:23.712 [DEBUG] DHParams::Validate() - Group 14: 2048-bit MODP group, generator: 2\n2025-01-15 08:15:23.789 [DEBUG] CipherSelector::EvaluateSuites() - Selected: TLS_DHE_RSA_WITH_AES_256_CBC_SHA256",
        "confidence_score": 0.98,
        "orchestrator_summary": null
      }
    },
    {
      "base_model": "gpt-4.1",
      "with_rag": false,
      "agent_type": "logs_config",
      "test_id": "vpn_server_runtime",
      "file_name": "vpn_server_runtime.log",
      "response_time": 7.704492092132568,
      "json_valid": true,
      "true_positives": 2,
      "false_positives": 3,
      "false_negatives": 1,
      "raw_response": {
        "agent_type": "Configuration and Logs Vulnerable Crypto Analysis Agent",
        "analysis_results": {
          "rsa_certificate_configurations_and_key_specifications_in_config_files": "DETECTED: RSA (Evidence: PublicKeyExtractor::GetKeyInfo() - Public key algorithm: modular arithmetic, key size: 2048 bits; X509Parser::ParseCertificate() - Certificate subject)",
          "elliptic_curve_cipher_suite_configurations_and_ecc_parameter_settings": "NOT DETECTED",
          "discrete_logarithm_based_algorithm_configurations_dsa_dh_elgamal": "DETECTED: Diffie-Hellman (Evidence: DHKeyExchange::LoadParameters(), DHParams::Validate() - Group 14: 2048-bit MODP group, generator: 2; KeyExchangeHandler::GenerateEphemeralKey())",
          "korean_algorithm_configuration_parameters_seed_aria_hight_lea_kcdsa_has_160_lsh": "NOT DETECTED",
          "symmetric_cipher_configurations_vulnerable_to_quantum_attacks": "DETECTED: AES (Evidence: TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 selected; BlockCipher::Initialize() - BlockCipher-256-CBC initialized with 256-bit key)",
          "ssl_tls_configuration_with_quantum_vulnerable_cipher_suites_and_protocols": "DETECTED: TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 (Evidence: CipherSelector::EvaluateSuites() - Selected: TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)",
          "cryptographic_library_configuration_and_algorithm_selection_settings": "NOT DETECTED",
          "certificate_authority_and_pki_configurations_using_vulnerable_algorithms": "NOT DETECTED",
          "log_entries_indicating_quantum_vulnerable_cryptographic_operations": "DETECTED: RSA, Diffie-Hellman, AES (Evidence: PublicKeyExtractor::GetKeyInfo(), DHKeyExchange::LoadParameters(), BlockCipher::Initialize())",
          "authentication_and_key_management_system_configurations": "NOT DETECTED",
          "legacy_cryptographic_protocol_configurations_and_deprecated_settings": "NOT DETECTED",
          "korean_domestic_cryptographic_standard_compliance_configurations": "NOT DETECTED",
          "error_patterns_and_warnings_related_to_vulnerable_crypto_implementations": "NOT DETECTED",
          "migration_logs_showing_use_of_quantum_vulnerable_to_quantum_resistant_transitions": "NOT DETECTED"
        },
        "confidence_score": 0.98,
        "summary": "Detected explicit use of RSA (2048-bit), Diffie-Hellman (2048-bit MODP group), and AES-256-CBC in TLS cipher suites and VPN tunnel encryption. These are all quantum-vulnerable algorithms. No evidence of elliptic curve, Korean algorithms, or migration to quantum-resistant cryptography."
      }
    }
  ]
}