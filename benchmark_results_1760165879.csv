test_id,provider,model,agent_type,success,valid_json,confidence_score,detected_quantum_vulnerable_count,response_time,json_valid,summary,file_path,total_tokens,prompt_tokens,completion_tokens,timestamp,error
AdvancedComputationalFramework,ollama,llama3:8b,source_code,True,True,0.8,8,12.393831968307495,False,"The analyzed source code contains several vulnerable cryptographic implementations, including RSA, DSA, SEED, AES-128, 3DES, DES, RC4, MD5, SHA-1, and insecure random number generators. Additionally, legacy cryptographic libraries and deprecated cipher suites are detected.",data/test_files/source_code/AdvancedComputationalFramework.rb,0,0,0,1760151977.6466672,
AdvancedCryptographicOrchestrator,ollama,llama3:8b,source_code,True,True,0.8,5,7.356399297714233,False,"The code contains vulnerable RSA, ECC/ECDSA/ECDH, and DSA/DH/ElGamal implementations, as well as symmetric ciphers vulnerable to Grover's algorithm.",data/test_files/source_code/AdvancedCryptographicOrchestrator.java,0,0,0,1760151985.0034513,
AdvancedMathematicalFramework,ollama,llama3:8b,source_code,True,True,0.8,5,6.526256799697876,False,"The code contains vulnerable RSA implementations, DSA algorithms, and MD5 hash functions. It also uses AES-128 symmetric cipher.",data/test_files/source_code/AdvancedMathematicalFramework.rs,0,0,0,1760151991.5305061,
AutomotiveSecurityUnit,ollama,llama3:8b,source_code,True,True,0.8,4,6.2446722984313965,False,"The code contains vulnerable RSA and DSA implementations, as well as the use of MD5 hash function.",data/test_files/source_code/AutomotiveSecurityUnit.cpp,0,0,0,1760151997.775526,
BankingSecurityModule,ollama,llama3:8b,source_code,True,True,0.8,5,6.731717348098755,False,"The Banking Security Module contains vulnerable cryptographic implementations, including DSA and MD5 hash functions. Additionally, the use of DES and AES-128 symmetric ciphers is detected.",data/test_files/source_code/BankingSecurityModule.java,0,0,0,1760152004.5075796,
BlockchainCryptographyEngine,ollama,llama3:8b,source_code,True,True,0.8,4,6.173532247543335,False,"The code uses ECDSA and DSA algorithms, which are vulnerable to quantum attacks. Additionally, it uses AES-128 symmetric cipher, which is also vulnerable to Grover's algorithm. The SecureRandom class is used for generating random numbers.",data/test_files/source_code/BlockchainCryptographyEngine.java,0,0,0,1760152010.681563,
CorporateSecurityOrchestrator,ollama,llama3:8b,source_code,True,True,0.8,7,7.952443838119507,False,"The code contains several vulnerable cryptographic implementations and usage patterns, including RSA, DSA, SEED, AES-128, DES, MD5, SHA-1, and PKCS#1 v1.5. Additionally, it uses legacy cryptographic libraries.",data/test_files/source_code/CorporateSecurityOrchestrator.py,0,0,0,1760152018.6344724,
CorporateVPNManager,ollama,llama3:8b,source_code,True,True,0.85,4,7.269323110580444,False,"The code contains vulnerable cryptographic implementations and usage patterns, including DES and RC4 symmetric ciphers, PKCS#1 v1.5 padding scheme, and legacy cipher suites.",data/test_files/source_code/CorporateVPNManager.java,0,0,0,1760152025.904122,
DigitalCertificateValidator,ollama,llama3:8b,source_code,True,True,0.8,4,5.999908924102783,False,"The code contains vulnerable RSA and DSA implementations, as well as the use of MD5 hash function.",data/test_files/source_code/DigitalCertificateValidator.java,0,0,0,1760152031.9044077,
DistributedComputationEngine,ollama,llama3:8b,source_code,True,True,0.8,3,6.19001317024231,False,"This code contains vulnerable cryptographic implementations, including DSA and AES-128. It also uses the MD5 hash function.",data/test_files/source_code/DistributedComputationEngine.py,0,0,0,1760152038.0947611,
DistributedComputeManager,ollama,llama3:8b,source_code,True,True,0.8,5,6.763794898986816,False,"The code contains vulnerable RSA implementations, DSA algorithm usage, and insecure random number generation. It also uses legacy cryptographic libraries.",data/test_files/source_code/DistributedComputeManager.js,0,0,0,1760152044.858954,
EnterpriseDataSecurityFramework,ollama,llama3:8b,source_code,True,True,0.8,5,7.631643772125244,False,"The code contains vulnerable RSA, ECC/ECDSA/ECDH implementations, and uses SEED and AES-128/3DES/DES/RC4 algorithms. It also employs PKCS#1 v1.5 padding scheme.",data/test_files/source_code/EnterpriseDataSecurityFramework.c,0,0,0,1760152052.4910295,
EnterpriseSecurityGateway,ollama,llama3:8b,source_code,True,True,0.8,6,6.677982807159424,False,"The analyzed code contains vulnerable RSA, ECC/ECDSA/ECDH, DSA/DH/ElGamal implementations, as well as insecure random number generation using SecureRandom.",data/test_files/source_code/EnterpriseSecurityGateway.java,0,0,0,1760152059.1694298,
HardwareSecurity,ollama,llama3:8b,source_code,True,True,0.8,5,6.694944381713867,False,"This code contains vulnerable cryptographic implementations, including ECC and SHA-1 hash functions. Additionally, it uses the SecureRandom class for generating random numbers.",data/test_files/source_code/HardwareSecurity.java,0,0,0,1760152065.86477,
IoTDeviceSecurityController,ollama,llama3:8b,source_code,True,True,0.8,4,6.118783473968506,False,"The code contains vulnerable cryptographic implementations and usage patterns, including DSA and AES-128. Additionally, the KeyManager class is using an insecure key derivation function.",data/test_files/source_code/IoTDeviceSecurityController.go,0,0,0,1760152071.9840178,
LegacyPKISystem,ollama,llama3:8b,source_code,True,True,0.8,5,6.490321397781372,False,"The code contains vulnerable cryptographic implementations and usage patterns, including DSA, AES-128, MD5, and SecureRandom. It also uses legacy cryptographic libraries and deprecated cipher suites.",data/test_files/source_code/LegacyPKISystem.java,0,0,0,1760152078.4746704,
MathematicalTransformEngine,ollama,llama3:8b,source_code,True,True,0.8,7,7.954378604888916,False,"The code contains several vulnerable cryptographic implementations and usage patterns, including RSA, DSA, SEED, AES-128, DES, MD5, SHA-1, SecureRandom, and Legacy cryptographic libraries.",data/test_files/source_code/MathematicalTransformEngine.java,0,0,0,1760152086.4295669,
MediaStreamProtection,ollama,llama3:8b,source_code,True,True,0.8,4,6.324198961257935,False,"The code contains vulnerable cryptographic implementations and usage patterns, including DSA and RC4 algorithms, as well as insecure random number generation using SecureRandom.",data/test_files/source_code/MediaStreamProtection.java,0,0,0,1760152092.754121,
QuantumResistantMessaging,ollama,llama3:8b,source_code,False,True,0.8,4,5.784523248672485,False,"The code uses lattice-based cryptography and insecure random number generation, which are potential vulnerabilities.",data/test_files/source_code/QuantumResistantMessaging.java,0,0,0,1760152098.5389614,
QuantumSafeTransitionManager,ollama,llama3:8b,source_code,True,True,0.8,5,6.958189010620117,False,"The code contains vulnerable RSA implementations and usage patterns, as well as discrete logarithm based algorithms and symmetric ciphers vulnerable to Grover's algorithm.",data/test_files/source_code/QuantumSafeTransitionManager.cpp,0,0,0,1760152105.4974895,
SecureChatApplication,ollama,llama3:8b,source_code,False,True,0.8,3,6.130584001541138,False,"The Secure Chat Application uses DSA and AES-128 cryptographic algorithms, which are vulnerable to quantum attacks. Additionally, it employs the insecure SecureRandom class for generating random numbers.",data/test_files/source_code/SecureChatApplication.java,0,0,0,1760152111.6285212,
SecureCloudStorage,ollama,llama3:8b,source_code,True,True,0.8,3,6.229549169540405,False,"The code uses DSA and AES-128, which are vulnerable to quantum attacks. Additionally, it uses SecureRandom, which is not cryptographically secure.",data/test_files/source_code/SecureCloudStorage.java,0,0,0,1760152117.8584132,
SecureTransactionProcessor,ollama,llama3:8b,source_code,True,True,0.8,7,7.427194833755493,False,"The code contains several vulnerable cryptographic implementations and usage patterns, including RSA, DSA, SEED, AES-128, DES, MD5, SHA-1, and insecure random number generation.",data/test_files/source_code/SecureTransactionProcessor.go,0,0,0,1760152125.2861905,
StealthCryptographicLibrary,ollama,llama3:8b,source_code,True,True,0.8,8,8.908531665802002,False,"The analyzed code contains several vulnerable cryptographic implementations and usage patterns, including RSA, ECC/ECDSA/ECDH, SEED/ARIA/HIGHT/LEA/KCDSA/EC-KCDSA/HAS-160/LSH, AES-128/3DES/DES/RC4, PKCS#1 v1.5, and obfuscated/indirect RSA implementation. Additionally, the code uses legacy cryptographic libraries and has implementation-specific vulnerabilities in quantum-vulnerable algorithms.",data/test_files/source_code/StealthCryptographicLibrary.py,0,0,0,1760152134.19511,
TelecommunicationsSecurityHub,ollama,llama3:8b,source_code,True,True,0.8,4,6.419948101043701,False,"The analyzed code contains vulnerable RSA implementations, DSA-based algorithms, and insecure random number generators. It does not use elliptic curve cryptography, Korean domestic algorithms, or weak hash functions.",data/test_files/source_code/TelecommunicationsSecurityHub.java,0,0,0,1760152140.615393,
a5_trivium_stream_ciphers,ollama,llama3:8b,source_code,False,True,0.8,1,6.055214166641235,False,"The code contains a vulnerable RC4 implementation, but no other cryptographic vulnerabilities were detected.",data/test_files/source_code/a5_trivium_stream_ciphers.py,0,0,0,1760152146.6709473,
aes_advanced_encryption,ollama,llama3:8b,source_code,True,True,0.8,1,5.999947547912598,False,"The code contains a vulnerable implementation of AES-128, but no other cryptographic vulnerabilities were detected.",data/test_files/source_code/aes_advanced_encryption.java,0,0,0,1760152152.6712654,
aria_korean_block_cipher,ollama,llama3:8b,source_code,True,True,0.8,2,5.905967950820923,False,"The code contains a vulnerable implementation of the SEED algorithm and uses DES encryption, which are both considered quantum-vulnerable.",data/test_files/source_code/aria_korean_block_cipher.py,0,0,0,1760152158.577563,
aria_sha256_ecdsa_government,ollama,llama3:8b,source_code,False,True,0.8,2,4.966126441955566,False,The code contains vulnerable SEED algorithm and HAS-160 hash function implementations.,data/test_files/source_code/aria_sha256_ecdsa_government.py,0,0,0,1760152163.5440218,
blowfish_symmetric_encryption,ollama,llama3:8b,source_code,False,True,0.8,1,6.544527053833008,False,"The code appears to use RC4 symmetric cipher, which is vulnerable to Grover's algorithm.",data/test_files/source_code/blowfish_symmetric_encryption.c,0,0,0,1760152170.088989,
camellia_block_cipher,ollama,llama3:8b,source_code,True,True,0.8,3,6.828018665313721,False,"The code contains vulnerable cryptographic implementations, including DSA and SEED algorithms.",data/test_files/source_code/camellia_block_cipher.c,0,0,0,1760152176.917382,
cast_feistel_cipher,ollama,llama3:8b,source_code,False,True,0.8,4,6.723368406295776,False,"This code contains vulnerable cryptographic implementations, including DSA and DES/RC4 ciphers, as well as insecure random number generation and key derivation functions.",data/test_files/source_code/cast_feistel_cipher.c,0,0,0,1760152183.6411388,
chacha20_poly1305_aead,ollama,llama3:8b,source_code,True,True,0.8,2,6.119605302810669,False,The code contains vulnerable implementations of DSA and DES cryptographic algorithms.,data/test_files/source_code/chacha20_poly1305_aead.java,0,0,0,1760152189.761085,
cloud_security_orchestrator,ollama,llama3:8b,source_code,True,True,0.8,8,9.140175819396973,False,"The Cloud Security Orchestrator contains several vulnerable cryptographic implementations and usage patterns, including RSA, DSA, SEED, AES-128, DES, MD5, SHA-1, PKCS#1 v1.5, and weak OAEP. Additionally, the code uses insecure random number generators and key derivation functions.",data/test_files/source_code/cloud_security_orchestrator.py,0,0,0,1760152198.901623,
database_encryption_engine,ollama,llama3:8b,source_code,True,True,0.8,2,6.135852813720703,False,"The code uses a custom block cipher with a Feistel network, which is vulnerable to quantum attacks. Additionally, the use of DSA and AES-128 ciphers indicates potential vulnerabilities.",data/test_files/source_code/database_encryption_engine.c,0,0,0,1760152205.0378308,
diffie_hellman_key_exchange,ollama,llama3:8b,source_code,True,True,0.8,4,6.418095588684082,False,"The code contains vulnerable RSA implementations, DSA-based algorithms, and insecure random number generators.",data/test_files/source_code/diffie_hellman_key_exchange.java,0,0,0,1760152211.4562068,
digital_identity_platform,ollama,llama3:8b,source_code,True,True,0.8,5,6.2093236446380615,False,"The code contains vulnerable RSA implementations, elliptic curve cryptography, and insecure random number generation. It also uses the AES symmetric cipher.",data/test_files/source_code/digital_identity_platform.js,0,0,0,1760152217.66591,
elgamal_diffie_hellman_pki,ollama,llama3:8b,source_code,True,True,0.8,6,6.526503086090088,False,"The code contains vulnerable RSA implementations and usage patterns, as well as weak hash functions and insecure random number generators.",data/test_files/source_code/elgamal_diffie_hellman_pki.py,0,0,0,1760152224.1927598,
elliptic_curve_cryptography,ollama,llama3:8b,source_code,True,True,0.8,4,6.108865737915039,False,"The code contains vulnerable elliptic curve cryptography (ECDSA) and discrete logarithm based algorithms (DSA). Additionally, it uses the insecure SecureRandom class for generating random numbers.",data/test_files/source_code/elliptic_curve_cryptography.java,0,0,0,1760152230.3020031,
financial_risk_analyzer,ollama,llama3:8b,source_code,True,True,0.8,5,6.529021978378296,False,"The code contains vulnerable RSA implementations, DSA-based algorithms, and uses MD5 hash function. It also employs PKCS#1 v1.5 padding scheme.",data/test_files/source_code/financial_risk_analyzer.py,0,0,0,1760152236.8314142,
financial_transaction_processor,ollama,llama3:8b,source_code,True,True,0.8,3,6.161240577697754,False,"The code contains vulnerable cryptographic implementations, including DES and RC4 symmetric ciphers, as well as the SEED Korean domestic algorithm.",data/test_files/source_code/financial_transaction_processor.c,0,0,0,1760152242.9930081,
financial_transaction_security,ollama,llama3:8b,source_code,True,True,0.8,4,7.096938848495483,False,"The code contains vulnerable RSA implementations, DSA-based algorithms, and SEED-based hash functions. It also uses AES-128 symmetric cipher.",data/test_files/source_code/financial_transaction_security.c,0,0,0,1760152250.090329,
government_document_signer,ollama,llama3:8b,source_code,True,True,0.8,4,6.3354880809783936,False,"The code contains vulnerable ECDSA and DSA implementations, as well as the SEED algorithm. Additionally, MD5 is used for hashing.",data/test_files/source_code/government_document_signer.c,0,0,0,1760152256.4262495,
idea_international_encryption,ollama,llama3:8b,source_code,False,True,0.8,3,6.0603086948394775,False,"The code contains vulnerable RSA and DSA implementations, as well as AES-128 encryption.",data/test_files/source_code/idea_international_encryption.java,0,0,0,1760152262.4869387,
iot_device_security,ollama,llama3:8b,source_code,True,True,0.8,5,7.707971096038818,False,"The code contains vulnerable cryptographic implementations and usage patterns, including DSA, AES-128, RC4, MD5, SHA-1, insecure random number generators, and legacy cryptographic libraries.",data/test_files/source_code/iot_device_security.c,0,0,0,1760152270.1952724,
lattice_isogeny_postquantum,ollama,llama3:8b,source_code,True,True,0.8,1,5.9066002368927,False,"The code contains a vulnerable implementation of AES-128, but no other cryptographic vulnerabilities were detected.",data/test_files/source_code/lattice_isogeny_postquantum.py,0,0,0,1760152276.1021848,
legacy_authentication_system,ollama,llama3:8b,source_code,True,True,0.8,5,6.300219297409058,False,"This code contains vulnerable RSA implementations and usage patterns, as well as weak hash functions and legacy cryptographic libraries.",data/test_files/source_code/legacy_authentication_system.c,0,0,0,1760152282.402818,
md5_sha1_weak_hash,ollama,llama3:8b,source_code,True,True,0.8,4,6.6753034591674805,False,"This code contains vulnerable cryptographic implementations, including DSA and AES-128, as well as a legacy cryptographic library.",data/test_files/source_code/md5_sha1_weak_hash.py,0,0,0,1760152289.078568,
medical_device_encryption,ollama,llama3:8b,source_code,True,True,0.8,8,7.403676748275757,False,"The code contains several vulnerable cryptographic implementations, including RSA, DSA, and SEED. Additionally, it uses insecure random number generation and a legacy cryptographic library.",data/test_files/source_code/medical_device_encryption.rs,0,0,0,1760152296.482915,
military_communication_system,ollama,llama3:8b,source_code,False,True,0.8,4,6.479687929153442,False,"The code contains vulnerable cryptographic implementations, including DSA and SEED algorithms, as well as the DES symmetric cipher. Additionally, SHA-1 is used as a hash function.",data/test_files/source_code/military_communication_system.c,0,0,0,1760152302.9629326,
mobile_secure_messenger,ollama,llama3:8b,source_code,True,True,0.8,2,6.000223159790039,False,"The code contains a stream cipher implementation and an elliptic curve cryptography (ECC) point multiplication function, but no other vulnerable cryptographic algorithms or implementations were detected.",data/test_files/source_code/mobile_secure_messenger.c,0,0,0,1760152308.9635463,
network_infrastructure_monitor,ollama,llama3:8b,source_code,True,True,0.8,5,6.375316619873047,False,"The code contains vulnerable RSA implementations, elliptic curve cryptography (ECC/ECDSA/ECDH) implementations, and insecure random number generators.",data/test_files/source_code/network_infrastructure_monitor.cpp,0,0,0,1760152315.3392,
ntru_lattice_encryption,ollama,llama3:8b,source_code,True,True,0.8,2,5.7743072509765625,False,"The code contains vulnerable cryptographic implementations, including AES-128 and insecure random number generation using SecureRandom.",data/test_files/source_code/ntru_lattice_encryption.java,0,0,0,1760152321.1137953,
openssl_des_enc,ollama,llama3:8b,source_code,True,True,0.8,5,7.1575767993927,False,"The code contains vulnerable RSA implementations, DSA-based algorithms, and uses legacy cryptographic libraries.",data/test_files/source_code/openssl_des_enc.c,0,0,0,1760152328.271744,
quantum_resistant_messenger,ollama,llama3:8b,source_code,True,True,0.8,4,6.179266691207886,False,"This code uses DSA and AES-128 cryptographic algorithms, with potential vulnerabilities in random number generation and lattice-based key encapsulation.",data/test_files/source_code/quantum_resistant_messenger.py,0,0,0,1760152334.4513113,
rc4_stream_generator,ollama,llama3:8b,source_code,True,True,0.8,1,6.054504632949829,False,"The code contains a vulnerable RC4 implementation, but no other cryptographic vulnerabilities were detected.",data/test_files/source_code/rc4_stream_generator.c,0,0,0,1760152340.5061486,
rsa_gen,ollama,llama3:8b,source_code,True,True,0.8,4,6.823254108428955,False,"The code contains vulnerable RSA implementations and usage patterns, as well as discrete logarithm based algorithms (DSA). Additionally, symmetric ciphers vulnerable to Grover's algorithm (AES-128) are detected.",data/test_files/source_code/rsa_gen.c,0,0,0,1760152347.3297887,
rsa_modular_exponentiation,ollama,llama3:8b,source_code,True,True,0.8,5,6.774811506271362,False,"The code contains vulnerable RSA implementations, DSA-based algorithms, and uses MD5 hash function. It also employs PKCS#1 v1.5 padding scheme.",data/test_files/source_code/rsa_modular_exponentiation.py,0,0,0,1760152354.1049635,
rsa_public_key_system,ollama,llama3:8b,source_code,True,True,0.8,6,6.6297430992126465,False,"The code contains vulnerable implementations of RSA and AES-128 algorithms, as well as insecure random number generation using SecureRandom.",data/test_files/source_code/rsa_public_key_system.java,0,0,0,1760152360.7350795,
salsa20_stream_cipher,ollama,llama3:8b,source_code,True,True,0.8,1,6.209734201431274,False,"The code contains a vulnerable implementation of AES-128, but no other cryptographic vulnerabilities were detected.",data/test_files/source_code/salsa20_stream_cipher.c,0,0,0,1760152366.9451573,
secure_messaging_protocol,ollama,llama3:8b,source_code,True,True,0.8,5,6.629144906997681,False,"The code uses RSA and DSA cryptographic algorithms, which are vulnerable to quantum attacks. Additionally, it employs the PKCS#1 v1.5 padding scheme, which is also vulnerable.",data/test_files/source_code/secure_messaging_protocol.rb,0,0,0,1760152373.5746605,
secure_video_streaming,ollama,llama3:8b,source_code,False,True,0.8,2,5.947905778884888,False,"The code contains a vulnerable implementation of DSA and AES-128, which are susceptible to quantum attacks.",data/test_files/source_code/secure_video_streaming.c,0,0,0,1760152379.5229213,
seed_aes_hybrid_banking,ollama,llama3:8b,source_code,True,True,0.8,3,6.3337812423706055,False,"The code contains vulnerable cryptographic implementations, including DSA and SEED algorithms. Additionally, the use of DES cipher in the encrypt_banking_block function is detected.",data/test_files/source_code/seed_aes_hybrid_banking.py,0,0,0,1760152385.8570504,
seed_stream_cipher,ollama,llama3:8b,source_code,True,True,0.8,2,5.921958923339844,False,"The code contains a vulnerable implementation of the DSA algorithm and uses AES-128 symmetric cipher, which are both quantum-vulnerable.",data/test_files/source_code/seed_stream_cipher.py,0,0,0,1760152391.7793953,
serpent_substitution_network,ollama,llama3:8b,source_code,False,True,0.8,2,6.857391357421875,False,"The code contains a DSA implementation and uses AES-128 symmetric cipher, but no other vulnerable cryptographic algorithms or implementations were detected.",data/test_files/source_code/serpent_substitution_network.c,0,0,0,1760152398.6371255,
sha1_rsa_legacy_documents,ollama,llama3:8b,source_code,True,True,0.8,3,6.339123964309692,False,"The code contains vulnerable cryptographic implementations, including DSA and MD5 hash functions.",data/test_files/source_code/sha1_rsa_legacy_documents.py,0,0,0,1760152404.9766343,
skipjack_government_cipher,ollama,llama3:8b,source_code,False,True,0.8,1,6.505046129226685,False,"The code contains a vulnerable RC4 implementation, but no other cryptographic vulnerabilities were detected.",data/test_files/source_code/skipjack_government_cipher.c,0,0,0,1760152411.4820414,
smart_card_security,ollama,llama3:8b,source_code,True,True,0.8,3,6.017459392547607,False,"The code contains a vulnerable implementation of the TEA-like cipher algorithm, which is susceptible to attacks by quantum computers.",data/test_files/source_code/smart_card_security.c,0,0,0,1760152417.499874,
tiger_hash_function,ollama,llama3:8b,source_code,False,True,0.8,1,6.444715261459351,False,"The code contains RC4 keystream generation, which is vulnerable to Grover's algorithm.",data/test_files/source_code/tiger_hash_function.c,0,0,0,1760152423.9449267,
twofish_advanced_encryption,ollama,llama3:8b,source_code,True,True,0.8,2,6.604605197906494,False,"The code contains a vulnerable implementation of the ElGamal algorithm and the Twofish symmetric cipher, which are both susceptible to quantum attacks.",data/test_files/source_code/twofish_advanced_encryption.c,0,0,0,1760152430.549906,
whirlpool_hash_digest,ollama,llama3:8b,source_code,False,True,0.8,1,6.312174558639526,False,"The code contains a vulnerable implementation of AES encryption, but no other cryptographic vulnerabilities were detected.",data/test_files/source_code/whirlpool_hash_digest.c,0,0,0,1760152436.8624556,
wireless_network_encryption,ollama,llama3:8b,source_code,True,True,0.8,1,5.591825485229492,False,"The code uses a stream cipher similar to RC4, which is vulnerable to Grover's algorithm.",data/test_files/source_code/wireless_network_encryption.c,0,0,0,1760152442.4546843,
adaptive_multi_tenant_crypto_orchestrator,ollama,llama3:8b,assembly_binary,True,True,0.8,7,6.704626560211182,False,"The analysis detected several vulnerable cryptographic algorithms, including RSA, DSA, SEED S-boxes, DES, and SHA-1. The confidence score is 0.8 due to the presence of explicit evidence for these algorithms.",data/test_files/assembly_binary/adaptive_multi_tenant_crypto_orchestrator.s,0,0,0,1760152449.1599793,
advanced_block_standard_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,6,6.299906969070435,False,"Detected vulnerable cryptographic algorithms: RSA, DES, SEED. Confident in the detection of these algorithms.",data/test_files/assembly_binary/advanced_block_standard_operations.s,0,0,0,1760152455.460245,
aes_key_expansion_module,ollama,llama3:8b,assembly_binary,True,True,0.8,4,6.084643125534058,False,"The code contains vulnerable RSA and AES-128 implementations, as well as potential use of FastBlockCipher for big integer arithmetic operations.",data/test_files/assembly_binary/aes_key_expansion_module.s,0,0,0,1760152461.5453658,
aria_encryption_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,4,6.275027751922607,False,"Detected vulnerable algorithms: SEED, AES-128. Detected cryptographic library calls and API signatures: transform_substitution_s1, transform_substitution_s2.",data/test_files/assembly_binary/aria_encryption_engine.s,0,0,0,1760152467.8208237,
automotive_ecu_cryptographic_unit,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.8603901863098145,False,The analysis detected vulnerable cryptographic algorithms and implementations in the provided assembly binary code.,data/test_files/assembly_binary/automotive_ecu_cryptographic_unit.s,0,0,0,1760152474.6815443,
banking_transaction_processor,ollama,llama3:8b,assembly_binary,False,False,0.0,0,7.846941709518433,False,Failed to parse JSON response,data/test_files/assembly_binary/banking_transaction_processor.s,0,0,0,1760152482.528691,
biometric_authentication_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,6,7.194812774658203,False,"Detected vulnerable cryptographic algorithms: RSA, DSA, DES, and big integer library. Detected cryptographic library calls: domesticn_biometric_cipher and template_protection.",data/test_files/assembly_binary/biometric_authentication_engine.s,0,0,0,1760152489.7238069,
blake2b_hash_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,4,6.397186994552612,False,"The analyzed assembly code contains vulnerable cryptographic implementations, including RSA and SHA-1. The detected algorithms are likely to be affected by quantum attacks.",data/test_files/assembly_binary/blake2b_hash_engine.s,0,0,0,1760152496.121282,
block_cipher_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,6,6.317021369934082,False,"Vulnerable crypto algorithms detected: RSA, SEED, DES. Korean algorithm implementation and big integer library usage observed.",data/test_files/assembly_binary/block_cipher_operations.s,0,0,0,1760152502.4386203,
blockchain_consensus_validator,ollama,llama3:8b,assembly_binary,False,True,0.8,5,6.961976528167725,False,"Detected vulnerable cryptographic algorithms: RSA, DSA, DES, MD5.",data/test_files/assembly_binary/blockchain_consensus_validator.s,0,0,0,1760152509.4009671,
chacha20_stream_processor,ollama,llama3:8b,assembly_binary,False,True,0.8,4,6.22819709777832,False,"Vulnerable crypto algorithms detected: RSA, AES-128. No evidence of other vulnerable algorithms.",data/test_files/assembly_binary/chacha20_stream_processor.s,0,0,0,1760152515.6295187,
cloud_storage_encryption_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.688615798950195,False,"Detected vulnerable cryptographic algorithms: RSA, DSA, DES. No evidence of other vulnerable algorithms.",data/test_files/assembly_binary/cloud_storage_encryption_processor.s,0,0,0,1760152522.3184545,
crypto_trading_platform_engine,ollama,llama3:8b,assembly_binary,False,True,0.8,5,6.596376657485962,False,"Detected vulnerable cryptographic algorithms: RSA, DSA, DES. Recommendation: Upgrade to quantum-resistant alternatives.",data/test_files/assembly_binary/crypto_trading_platform_engine.s,0,0,0,1760152528.9153159,
cryptographic_wallet_manager,ollama,llama3:8b,assembly_binary,False,False,0.0,0,7.691605091094971,False,Failed to parse JSON response,data/test_files/assembly_binary/cryptographic_wallet_manager.s,0,0,0,1760152536.6071842,
diffie_hellman_key_exchange,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.154301881790161,False,"This assembly binary contains vulnerable cryptographic implementations, including RSA and DSA algorithms, as well as symmetric cipher patterns vulnerable to quantum attacks.",data/test_files/assembly_binary/diffie_hellman_key_exchange.s,0,0,0,1760152542.7618077,
digital_signature_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,4,6.453327178955078,False,"Vulnerable crypto algorithms detected: RSA, AES-128; potential side-channel vulnerabilities found.",data/test_files/assembly_binary/digital_signature_processor.s,0,0,0,1760152549.215455,
distributed_blockchain_consensus_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.539700031280518,False,"This code contains vulnerable cryptographic algorithms, including RSA and DSA. It also uses big integer libraries for modular arithmetic operations.",data/test_files/assembly_binary/distributed_blockchain_consensus_engine.s,0,0,0,1760152555.7555246,
dsa_signature_verification,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.361424446105957,False,"This code contains vulnerable cryptographic implementations, including RSA and DSA algorithms, as well as SHA-1 hash function. DES encryption is also detected.",data/test_files/assembly_binary/dsa_signature_verification.s,0,0,0,1760152562.1173124,
elliptic_curve_point_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,4,5.6143388748168945,False,"Detected RSA and AES-128 cryptographic algorithms, as well as big integer library usage.",data/test_files/assembly_binary/elliptic_curve_point_operations.s,0,0,0,1760152567.7320309,
elliptic_curve_scalar_multiplication,ollama,llama3:8b,assembly_binary,False,True,0.8,5,6.442338228225708,False,"This code contains vulnerable cryptographic algorithms, including RSA and AES-128. It also uses elliptic curve point operations and big integer libraries.",data/test_files/assembly_binary/elliptic_curve_scalar_multiplication.s,0,0,0,1760152574.1748362,
elliptic_mathematical_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,3,6.3849992752075195,False,"Detected vulnerable RSA and AES-128 algorithms, as well as big integer library usage.",data/test_files/assembly_binary/elliptic_mathematical_operations.s,0,0,0,1760152580.5602624,
ellipticsignature_securehashalgo1_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,3,5.597729921340942,False,"The analysis detected RSA and DES cryptographic algorithms, which are vulnerable to quantum attacks.",data/test_files/assembly_binary/ellipticsignature_securehashalgo1_operations.s,0,0,0,1760152586.1583269,
embedded_authentication_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,3,6.320023059844971,False,"Vulnerable crypto algorithms detected: RSA, AES-128. Lightweight key schedule and feistel round function implementations found.",data/test_files/assembly_binary/embedded_authentication_processor.s,0,0,0,1760152592.4787328,
embedded_iot_security_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.538952350616455,False,"The analysis detected vulnerable cryptographic algorithms, including RSA and AES-128, as well as big integer library usage. No evidence of Korean algorithm signatures or side-channel vulnerabilities was found.",data/test_files/assembly_binary/embedded_iot_security_processor.s,0,0,0,1760152599.0180213,
enterprise_data_protection_engine,ollama,llama3:8b,assembly_binary,False,False,0.0,0,7.341479778289795,False,Failed to parse JSON response,data/test_files/assembly_binary/enterprise_data_protection_engine.s,0,0,0,1760152606.3597207,
feistel_network_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,6,6.3521645069122314,False,"Detected vulnerable cryptographic algorithms: RSA, SEED, DES. Confident in detection.",data/test_files/assembly_binary/feistel_network_operations.s,0,0,0,1760152612.7122416,
financial_cryptographic_accelerator,ollama,llama3:8b,assembly_binary,True,True,0.8,5,7.095180511474609,False,"This binary contains vulnerable cryptographic implementations, including RSA and DES. It also uses a big integer library for modular arithmetic operations.",data/test_files/assembly_binary/financial_cryptographic_accelerator.s,0,0,0,1760152619.8077757,
government_classified_system_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,6,7.4799580574035645,False,"Detected vulnerable cryptographic algorithms: RSA, DSA, DES. Detected potential side-channel vulnerabilities.",data/test_files/assembly_binary/government_classified_system_processor.s,0,0,0,1760152627.2880971,
hash_digest_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,3,6.45261812210083,False,"This code contains vulnerable RSA and DES implementations, as well as some cryptographic library calls.",data/test_files/assembly_binary/hash_digest_operations.s,0,0,0,1760152633.7410452,
hight_lightweight_cipher,ollama,llama3:8b,assembly_binary,True,True,0.8,1,5.616961479187012,False,The code contains a vulnerable implementation of the DES symmetric cipher algorithm.,data/test_files/assembly_binary/hight_lightweight_cipher.s,0,0,0,1760152639.358437,
hybrid_banking_security_system,ollama,llama3:8b,assembly_binary,True,True,0.8,4,6.210622310638428,False,"Vulnerable crypto algorithms detected: RSA, AES-128. Potential side-channel vulnerabilities and optimization patterns not detected.",data/test_files/assembly_binary/hybrid_banking_security_system.s,0,0,0,1760152645.5695658,
industrial_control_security,ollama,llama3:8b,assembly_binary,True,True,0.8,3,6.226779222488403,False,Vulnerable crypto algorithms detected: RSA and AES-128. No evidence of other vulnerable algorithms.,data/test_files/assembly_binary/industrial_control_security.s,0,0,0,1760152651.796682,
industrial_security_coprocessor,ollama,llama3:8b,assembly_binary,True,True,0.8,7,7.787639617919922,False,"This binary contains vulnerable cryptographic implementations, including RSA and DSA algorithms, as well as SEED S-boxes and DES symmetric cipher patterns.",data/test_files/assembly_binary/industrial_security_coprocessor.s,0,0,0,1760152659.584682,
kcdsa_signature_generator,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.510699510574341,False,"The analysis detected vulnerable cryptographic algorithms, including RSA and DSA, as well as potential side-channel vulnerabilities.",data/test_files/assembly_binary/kcdsa_signature_generator.s,0,0,0,1760152666.0957553,
keyexchange_protocol_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,5.627284288406372,False,"Vulnerable crypto algorithms detected: RSA, AES-128; no evidence of other vulnerable algorithms found.",data/test_files/assembly_binary/keyexchange_protocol_operations.s,0,0,0,1760152671.7233617,
korean_blockcipher_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,5.798056364059448,False,"Vulnerable crypto algorithms detected: RSA, DES; potential side-channel vulnerabilities found.",data/test_files/assembly_binary/korean_blockcipher_operations.s,0,0,0,1760152677.521798,
lea_block_cipher_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,6,6.61255407333374,False,"The analyzed assembly code contains vulnerable cryptographic algorithms, including RSA and SEED. The DES cipher is also detected as vulnerable to quantum attacks.",data/test_files/assembly_binary/lea_block_cipher_engine.s,0,0,0,1760152684.1348646,
legacy_hash_computation,ollama,llama3:8b,assembly_binary,True,True,0.8,5,7.0855913162231445,False,"The analysis detected vulnerable cryptographic algorithms, including RSA and DSA, as well as the use of DES and MD5 hash functions.",data/test_files/assembly_binary/legacy_hash_computation.s,0,0,0,1760152691.2208822,
legacy_pki_certificate_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.542469263076782,False,"Vulnerable crypto algorithms detected: RSA, DSA, DES, MD5. Recommendation: Upgrade to quantum-resistant alternatives.",data/test_files/assembly_binary/legacy_pki_certificate_processor.s,0,0,0,1760152697.7636914,
md5_sha1_hash_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,4,6.172245264053345,False,"This code contains vulnerable cryptographic implementations, including RSA and DES. It also uses the MD5 hash function.",data/test_files/assembly_binary/md5_sha1_hash_processor.s,0,0,0,1760152703.9363182,
medical_device_security_controller,ollama,llama3:8b,assembly_binary,True,True,0.8,5,7.269640207290649,False,"Vulnerable cryptographic algorithms detected: RSA, DSA, DES. Recommendation: upgrade to quantum-resistant alternatives.",data/test_files/assembly_binary/medical_device_security_controller.s,0,0,0,1760152711.2063396,
message_digest_128bit_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,5.597861289978027,False,"Detected vulnerable RSA and SHA-1 cryptographic implementations, with potential AES-128 usage.",data/test_files/assembly_binary/message_digest_128bit_operations.s,0,0,0,1760152716.8045666,
mobile_cipher_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.768553256988525,False,"Detected vulnerable cryptographic algorithms: RSA, DSA, DES. No evidence of other vulnerable algorithms.",data/test_files/assembly_binary/mobile_cipher_engine.s,0,0,0,1760152723.573472,
mobile_payment_security_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,3,6.424754619598389,False,"Vulnerable crypto algorithms detected: RSA, AES-128; potential side-channel vulnerabilities in domesticn_mobile_cipher implementation.",data/test_files/assembly_binary/mobile_payment_security_engine.s,0,0,0,1760152729.9986556,
network_security_gateway,ollama,llama3:8b,assembly_binary,True,True,0.8,6,7.110491037368774,False,"Detected RSA, DSA, and DES cryptographic algorithms with evidence from specific code locations.",data/test_files/assembly_binary/network_security_gateway.s,0,0,0,1760152737.1094623,
neural_network_inference_accelerator,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.6897430419921875,False,"The analysis detected vulnerable cryptographic algorithms including RSA, DSA, and DES. Additionally, big integer library usage was identified.",data/test_files/assembly_binary/neural_network_inference_accelerator.s,0,0,0,1760152743.7995472,
ntru_polynomial_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,3,6.310539484024048,False,"This code snippet appears to be implementing a lattice-based cryptographic algorithm, specifically polynomial ring operations for post-quantum secure encryption. Additionally, AES-128 symmetric cipher patterns are detected.",data/test_files/assembly_binary/ntru_polynomial_processor.s,0,0,0,1760152750.1104364,
obfuscated_crypto_library_dispatcher,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.417676210403442,False,Vulnerable crypto algorithms detected: RSA and AES. Obfuscated cryptographic operations and modular arithmetic implementation found.,data/test_files/assembly_binary/obfuscated_crypto_library_dispatcher.s,0,0,0,1760152756.5284843,
openssl_des_enc,ollama,llama3:8b,assembly_binary,True,True,0.8,3,6.319809675216675,False,"Vulnerable crypto algorithms detected: RSA, AES-128; potential side-channel vulnerabilities present.",data/test_files/assembly_binary/openssl_des_enc.asm,0,0,0,1760152762.8486233,
openssl_des_enc,ollama,llama3:8b,assembly_binary,True,True,0.8,4,7.169854402542114,False,"The provided assembly code contains vulnerable RSA and AES-128 cryptographic implementations, as well as big integer library usage.",data/test_files/assembly_binary/openssl_des_enc.bin,0,0,0,1760152770.0198264,
poly1305_authenticator,ollama,llama3:8b,assembly_binary,True,True,0.8,4,6.338464975357056,False,"The code contains vulnerable RSA and AES-128 implementations, as well as the Poly1305 cryptographic library.",data/test_files/assembly_binary/poly1305_authenticator.s,0,0,0,1760152776.3586824,
polymorphic_malware_crypto_engine,ollama,llama3:8b,assembly_binary,True,True,0.9,8,6.706562519073486,False,"The analyzed assembly binary code contains several vulnerable cryptographic algorithms and implementations, including RSA, DSA, SEED, DES, and big integer library usage.",data/test_files/assembly_binary/polymorphic_malware_crypto_engine.s,0,0,0,1760152783.0655978,
polynomial_field_arithmetic_engine,ollama,llama3:8b,assembly_binary,False,False,0.0,0,8.058281421661377,False,Failed to parse JSON response,data/test_files/assembly_binary/polynomial_field_arithmetic_engine.s,0,0,0,1760152791.1241474,
postquantum_multimodal_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,6,6.015563726425171,False,"Detected vulnerable cryptographic algorithms: RSA, DES, SEED. Confident in detection due to explicit evidence of function calls and library imports.",data/test_files/assembly_binary/postquantum_multimodal_operations.s,0,0,0,1760152797.1400156,
publickey_encryption_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,4,5.490727663040161,False,"Vulnerable crypto algorithms detected: RSA, DES; potential big integer library usage and cryptographic library calls.",data/test_files/assembly_binary/publickey_encryption_operations.s,0,0,0,1760152802.6310506,
publickey_modular_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,5.697245121002197,False,"The analysis detected RSA and AES-128 cryptographic algorithms, as well as big integer library usage.",data/test_files/assembly_binary/publickey_modular_operations.s,0,0,0,1760152808.3285804,
publickeyalgo_messagedigest5_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,5.715590476989746,False,"Vulnerable cryptographic algorithms detected: RSA, DES; potential vulnerabilities in MD5 hash function implementation.",data/test_files/assembly_binary/publickeyalgo_messagedigest5_operations.s,0,0,0,1760152814.0445297,
quantum_communication_relay,ollama,llama3:8b,assembly_binary,True,True,0.8,5,7.117501258850098,False,"The analysis detected vulnerable cryptographic algorithms, including RSA and DSA, as well as potential use of DES and big integer libraries.",data/test_files/assembly_binary/quantum_communication_relay.s,0,0,0,1760152821.1624167,
quantum_cryptanalysis_simulation,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.409544467926025,False,"Detected vulnerable cryptographic algorithms: RSA, NIST P-256 (secp256r1), DSA, DES, MD5.",data/test_files/assembly_binary/quantum_cryptanalysis_simulation.s,0,0,0,1760152827.572387,
quantum_migration_bridge_processor,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.803067922592163,False,"The analysis detected vulnerable cryptographic algorithms, including RSA and DSA, as well as potential use of DES and big integer libraries.",data/test_files/assembly_binary/quantum_migration_bridge_processor.s,0,0,0,1760152834.3757927,
quantum_resistant_lattice_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,3,6.253424167633057,False,The code contains vulnerable AES-128 symmetric cipher pattern and uses FastBlockCipherq library for big integer operations.,data/test_files/assembly_binary/quantum_resistant_lattice_operations.s,0,0,0,1760152840.6295056,
quantum_resistant_migration_bridge,ollama,llama3:8b,assembly_binary,True,True,0.8,7,7.928639650344849,False,"This code contains legacy cryptographic algorithms, including RSA, DSA, and DES, which are vulnerable to quantum attacks. Additionally, it uses MD5 and SHA-1 hash functions, which are also vulnerable.",data/test_files/assembly_binary/quantum_resistant_migration_bridge.s,0,0,0,1760152848.5585523,
quantum_safe_communicator,ollama,llama3:8b,assembly_binary,False,True,0.8,4,6.3853919506073,False,"Vulnerable crypto algorithms detected: RSA, AES-128; potential side-channel vulnerabilities identified.",data/test_files/assembly_binary/quantum_safe_communicator.s,0,0,0,1760152854.9442773,
rsa_key_generation_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,4,5.905828475952148,False,"The code contains vulnerable RSA and AES-128 implementations, as well as big integer library usage.",data/test_files/assembly_binary/rsa_key_generation_engine.s,0,0,0,1760152860.8504143,
salsa20_stream_cipher,ollama,llama3:8b,assembly_binary,False,True,0.8,4,6.530904293060303,False,"The analyzed assembly code contains vulnerable cryptographic implementations, including RSA and AES-128. The detected algorithms are used for keystream generation and encryption.",data/test_files/assembly_binary/salsa20_stream_cipher.s,0,0,0,1760152867.3817234,
satellite_communication_security,ollama,llama3:8b,assembly_binary,True,True,0.8,6,6.858889579772949,False,"Detected vulnerable cryptographic algorithms: RSA, SEED, DES. Confident in detection.",data/test_files/assembly_binary/satellite_communication_security.s,0,0,0,1760152874.2410243,
secure_boot_verification_processor,ollama,llama3:8b,assembly_binary,False,True,0.8,5,6.7463037967681885,False,"Detected vulnerable RSA and AES-128 algorithms, as well as potential use of big integer library and domestic algorithm implementation.",data/test_files/assembly_binary/secure_boot_verification_processor.s,0,0,0,1760152880.9876885,
secure_communication_protocol,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.760960102081299,False,"The code contains vulnerable cryptographic algorithms, including RSA and DES. The DSA algorithm is also detected. MD5 hash function implementation is found.",data/test_files/assembly_binary/secure_communication_protocol.s,0,0,0,1760152887.7489254,
secure_hash_256bit_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,4,5.903378486633301,False,"Vulnerable crypto algorithms detected: RSA, AES-128. No evidence of other vulnerable algorithms.",data/test_files/assembly_binary/secure_hash_256bit_operations.s,0,0,0,1760152893.65272,
secure_matrix_transformation_unit,ollama,llama3:8b,assembly_binary,True,True,0.8,3,6.228255748748779,False,"Vulnerable crypto algorithms detected: RSA, DES, AES.",data/test_files/assembly_binary/secure_matrix_transformation_unit.s,0,0,0,1760152899.8813002,
siphash_prf_function,ollama,llama3:8b,assembly_binary,True,True,0.8,2,6.02392840385437,False,The code contains vulnerable AES-128 symmetric cipher pattern and SipHash cryptographic library calls.,data/test_files/assembly_binary/siphash_prf_function.s,0,0,0,1760152905.9056277,
smart_card_authenticator,ollama,llama3:8b,assembly_binary,True,True,0.8,5,6.654096841812134,False,"Vulnerable crypto algorithms detected: RSA, DSA, DES. Evidence found in assembly code.",data/test_files/assembly_binary/smart_card_authenticator.s,0,0,0,1760152912.560124,
smart_card_security_module,ollama,llama3:8b,assembly_binary,True,True,0.8,7,7.351932048797607,False,"Detected vulnerable cryptographic algorithms: RSA, DSA, SEED, DES. Confident in the detection of these algorithms based on explicit evidence.",data/test_files/assembly_binary/smart_card_security_module.s,0,0,0,1760152919.9124112,
sphincs_signature_scheme,ollama,llama3:8b,assembly_binary,True,True,0.8,7,6.516889810562134,False,"This code contains vulnerable cryptographic algorithms, including RSA and DSA, as well as Korean algorithms like SEED. Additionally, it uses SHA-1 for hashing and DES for symmetric encryption.",data/test_files/assembly_binary/sphincs_signature_scheme.s,0,0,0,1760152926.429631,
steganographic_crypto_covert_channel,ollama,llama3:8b,assembly_binary,True,True,0.8,8,6.7592854499816895,False,"Vulnerable cryptographic algorithms detected: RSA, DSA, SEED S-boxes, AES-128. Potential side-channel vulnerabilities and assembly-level obfuscation observed.",data/test_files/assembly_binary/steganographic_crypto_covert_channel.s,0,0,0,1760152933.189308,
stream_cipher_generator,ollama,llama3:8b,assembly_binary,False,False,0.0,0,6.599121809005737,False,Failed to parse JSON response,data/test_files/assembly_binary/stream_cipher_generator.s,0,0,0,1760152939.7886462,
stream_generator_operations,ollama,llama3:8b,assembly_binary,True,True,0.8,6,6.435527563095093,False,"Detected vulnerable cryptographic algorithms: RSA, SEED, DES; potential side-channel vulnerabilities in memory allocation patterns for cryptographic key storage.",data/test_files/assembly_binary/stream_generator_operations.s,0,0,0,1760152946.2245026,
stream_keygeneration_operations,ollama,llama3:8b,assembly_binary,False,True,0.8,4,5.474685192108154,False,"Vulnerable crypto algorithms detected: RSA, DES. No evidence of other vulnerable algorithms.",data/test_files/assembly_binary/stream_keygeneration_operations.s,0,0,0,1760152951.6995196,
triple_des_encryption_module,ollama,llama3:8b,assembly_binary,True,True,0.8,2,5.964707374572754,False,"The detected vulnerable algorithm is DES, which is used in the triple block cipher encryption module.",data/test_files/assembly_binary/triple_des_encryption_module.s,0,0,0,1760152957.6645799,
vpn_tunnel_encryption_engine,ollama,llama3:8b,assembly_binary,True,True,0.8,6,6.871876239776611,False,"Vulnerable crypto algorithms detected: RSA, SEED, DES.",data/test_files/assembly_binary/vpn_tunnel_encryption_engine.s,0,0,0,1760152964.5368288,
x25519_key_agreement,ollama,llama3:8b,assembly_binary,True,True,0.8,4,6.40311336517334,False,Detected vulnerable crypto algorithms: Curve25519 and AES-128. Montgomery ladder for scalar multiplication was also detected.,data/test_files/assembly_binary/x25519_key_agreement.s,0,0,0,1760152970.940271,
apache_legacy_ssl,ollama,llama3:8b,logs_config,False,True,0.8,6,7.66450834274292,False,"This configuration contains several vulnerable cryptographic algorithms, including RSA and DSA, as well as legacy protocols like SSLv3. It is recommended to upgrade to quantum-resistant alternatives.",data/test_files/logs_config/apache_legacy_ssl.conf,0,0,0,1760152978.6054742,
automotive_v2x_system,ollama,llama3:8b,logs_config,True,True,0.8,8,8.658235311508179,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, CurveSig-P256, K_CIPHER_1-128, BlockCipher-256-GCM, TLS-CurveKE-PublicKey-BlockCipher256, and LEGACY_CIPHER-EDE3.",data/test_files/logs_config/automotive_v2x_system.yaml,0,0,0,1760152987.2650614,
blockchain_node_security,ollama,llama3:8b,logs_config,True,True,0.8,5,7.574991226196289,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including elliptic curve cipher suites, symmetric ciphers, and legacy protocols. Additionally, it found evidence of planned post-quantum migration and hybrid mode configuration.",data/test_files/logs_config/blockchain_node_security.conf,0,0,0,1760152994.8407152,
cloud_hsm_operations,ollama,llama3:8b,logs_config,True,True,0.8,7,8.137118339538574,False,"This system uses RSA and ECDSA cryptographic algorithms, which are vulnerable to quantum attacks. Additionally, AES symmetric cipher is used, but it is not vulnerable to quantum attacks.",data/test_files/logs_config/cloud_hsm_operations.log,0,0,0,1760153002.9782233,
cloud_storage_encryption,ollama,llama3:8b,logs_config,True,True,0.8,9,8.910364151000977,False,"This system uses RSA and DSA algorithms for certificate configurations and key specifications. It also employs BlockCipher-256-GCM for symmetric encryption and TLS_AES_256_GCM_SHA384 for SSL/TLS. Additionally, it has legacy support for TripleCipher-EDE3 and uses K_CIPHER_2-256 for Korean domestic cryptographic standard compliance.",data/test_files/logs_config/cloud_storage_encryption.conf,0,0,0,1760153011.889011,
cryptographic_operations_detailed,ollama,llama3:8b,logs_config,True,True,0.8,10,10.970275163650513,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, elliptic curve cryptography, DSA, DH, ElGamal, SEED, ARIA, HIGHT, LEA, KCDSA, HAS-160, LSH, AES, TLS, and legacy protocols.",data/test_files/logs_config/cryptographic_operations_detailed.log,0,0,0,1760153022.8596833,
database_encryption_setup,ollama,llama3:8b,logs_config,True,True,0.8,8,8.932223796844482,False,"This system uses vulnerable cryptographic algorithms, including K_CIPHER_1 and ARIA. It also has legacy protocol configurations and deprecated settings that need to be updated.",data/test_files/logs_config/database_encryption_setup.log,0,0,0,1760153031.7924,
email_server_crypto,ollama,llama3:8b,logs_config,False,True,0.8,5,8.079407215118408,False,"The analysis detected RSA, DSA, and AES cryptographic algorithms, as well as LEGACY_CIPHER. The confidence score is 0.8 due to the presence of explicit evidence for these algorithms.",data/test_files/logs_config/email_server_crypto.conf,0,0,0,1760153039.872506,
enterprise_banking_pki_configuration,ollama,llama3:8b,logs_config,True,True,0.8,10,9.606470346450806,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, DSA, AES, TLS 1.2, and SHA1. Additionally, legacy cryptographic protocol configurations and deprecated settings were identified.",data/test_files/logs_config/enterprise_banking_pki_configuration.conf,0,0,0,1760153049.4797325,
financial_payment_gateway,ollama,llama3:8b,logs_config,False,True,0.8,6,6.824656009674072,False,"This system uses RSA certificates, DSA signature algorithm, TripleCipher encryption, and Hash128 integrity checks. It also employs LEGACY_CIPHER-EDE3 for database field encryption.",data/test_files/logs_config/financial_payment_gateway.conf,0,0,0,1760153056.3047402,
healthcare_ehr_system,ollama,llama3:8b,logs_config,True,True,0.8,7,7.924211263656616,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, DSA, BlockCipher-128-CBC, CurveKE-PublicKey-BlockCipher128-GCM-Hash256, PublicKey, and Legacy KeyExchange-DSA.",data/test_files/logs_config/healthcare_ehr_system.yaml,0,0,0,1760153064.229354,
iot_device_firmware_config,ollama,llama3:8b,logs_config,True,True,0.8,4,7.347543478012085,False,"This device uses elliptic curve cryptography for public key operations and has some legacy cryptographic protocols enabled. It also uses the mbedTLS library, which is vulnerable to quantum attacks.",data/test_files/logs_config/iot_device_firmware_config.yaml,0,0,0,1760153071.5778003,
korean_crypto_library_config,ollama,llama3:8b,logs_config,True,True,0.8,8,8.615315675735474,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including SEED, ARIA, HIGHT, LEA, KCDSA, HAS-160, LSH, DSA, DH, ElGamal, and MD5/SHA1. The KISA Crypto API v2.5 is also used, which may require migration to quantum-resistant alternatives.",data/test_files/logs_config/korean_crypto_library_config.ini,0,0,0,1760153080.1937492,
military_secure_comms,ollama,llama3:8b,logs_config,True,True,0.8,9,10.77552843093872,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, EC-K_SIG, SEED, ARIA, K_CIPHER_1-256-GCM, K_CIPHER_4-256-CBC, TLS-1.3, LEGACY_CIPHER-EDE3, and Blowfish-128.",data/test_files/logs_config/military_secure_comms.conf,0,0,0,1760153090.9697073,
mobile_app_security_audit,ollama,llama3:8b,logs_config,True,True,0.8,7,7.9373939037323,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA certificate configurations, DSA-based cipher suites, and TLS 1.2 protocol usage. Additionally, a critical error was found related to the use of StreamCipher-SHA.",data/test_files/logs_config/mobile_app_security_audit.log,0,0,0,1760153098.9074974,
nginx_mixed_security_gateway,ollama,llama3:8b,logs_config,False,True,0.8,6,7.423084735870361,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, DSA, ARIA, TLSv1.1, and legacy protocols.",data/test_files/logs_config/nginx_mixed_security_gateway.conf,0,0,0,1760153106.3313134,
quantum_safe_migration_plan,ollama,llama3:8b,logs_config,True,True,0.8,7,8.076375007629395,False,"Detected vulnerable cryptographic algorithms and configurations, including RSA, ecdsa_p256, dsa_2048, and bc_128_gcm. Also detected potential post-quantum algorithm implementations using liboqs.",data/test_files/logs_config/quantum_safe_migration_plan.yaml,0,0,0,1760153114.4082868,
security_scanner_findings,ollama,llama3:8b,logs_config,True,True,0.8,7,7.354971885681152,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA certificate configurations, elliptic curve cipher suite configurations, and symmetric cipher configurations. It also identified legacy cryptographic protocol configurations and deprecated settings.",data/test_files/logs_config/security_scanner_findings.log,0,0,0,1760153121.7639756,
ssh_server_hardened,ollama,llama3:8b,logs_config,True,True,0.8,5,7.466456890106201,False,"This OpenSSH server configuration uses RSA certificates, Curve25519 key exchange, and Chacha20-Poly1305 ciphers. It also disables weak algorithms like SSH1 and DSA.",data/test_files/logs_config/ssh_server_hardened.conf,0,0,0,1760153129.2310762,
ssl_legacy_banking_configuration,ollama,llama3:8b,logs_config,False,True,0.8,5,6.628520250320435,False,"The analysis detected RSA, DH, and AES cryptographic algorithms in use. Additionally, SSLv3 protocol is still enabled, which is vulnerable to quantum attacks.",data/test_files/logs_config/ssl_legacy_banking_configuration.conf,0,0,0,1760153135.8615882,
telecom_5g_network,ollama,llama3:8b,logs_config,True,True,0.8,12,10.93312406539917,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, EC-K_SIG, K_SIG, KeyExchange-2048, PublicKey-2048, and others.",data/test_files/logs_config/telecom_5g_network.conf,0,0,0,1760153146.795143,
tls_cipher_negotiation_warnings,ollama,llama3:8b,logs_config,False,True,0.8,9,7.681325435638428,False,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA, DSA, SEED, StreamCipher-SHA, TripleCipher-EDE-CBC-SHA, Hash-160, KEY_EX, K_CIPHER_1-CBC-SHA, and Hash128.",data/test_files/logs_config/tls_cipher_negotiation_warnings.log,0,0,0,1760153154.476866,
vpn_server_runtime,ollama,llama3:8b,logs_config,True,True,0.8,5,6.662482261657715,False,"Detected vulnerable cryptographic algorithms and configurations, including RSA, DH, AES, and modular arithmetic.",data/test_files/logs_config/vpn_server_runtime.log,0,0,0,1760153161.1397054,
AdvancedComputationalFramework,ollama,qwen3:8b,source_code,True,True,0.95,0,18.39281415939331,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS,data/test_files/source_code/AdvancedComputationalFramework.rb,0,0,0,1760153179.5330393,
AdvancedCryptographicOrchestrator,ollama,qwen3:8b,source_code,True,True,0.85,4,27.27894639968872,True,Detected elliptic curve cryptography (ECC) implementation and vulnerable PKCS1Padding scheme. Obfuscated modular arithmetic implementation suspected. Hybrid system structure identified.,data/test_files/source_code/AdvancedCryptographicOrchestrator.java,0,0,0,1760153206.8123038,
AdvancedMathematicalFramework,ollama,qwen3:8b,source_code,True,True,0.0,0,12.420895338058472,True,NOT DETECTED,data/test_files/source_code/AdvancedMathematicalFramework.rs,0,0,0,1760153219.233832,
AutomotiveSecurityUnit,ollama,qwen3:8b,source_code,True,True,0.0,0,13.923110246658325,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. The code contains a custom Feistel cipher implementation without explicit references to any known cryptographic libraries, algorithms, or vulnerable patterns. No evidence of RSA, ECC, DSA, AES-128, MD5, SHA-1, or other vulnerable algorithms was found.",data/test_files/source_code/AutomotiveSecurityUnit.cpp,0,0,0,1760153233.1572044,
BankingSecurityModule,ollama,qwen3:8b,source_code,True,True,0.0,0,17.18900966644287,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. The code contains a custom block cipher implementation with no explicit references to RSA, ECC, DSA, Korean domestic algorithms, AES-128, weak hashes, vulnerable padding schemes, insecure RNGs, or hybrid systems. The cryptographic operations are implemented internally without using standard cryptographic libraries or algorithms.",data/test_files/source_code/BankingSecurityModule.java,0,0,0,1760153250.3465285,
BlockchainCryptographyEngine,ollama,qwen3:8b,source_code,False,True,0.0,0,21.05941939353943,True,No explicit cryptographic algorithms or libraries were detected in the provided code. The implementation appears to be a manual elliptic curve cryptography (ECC) key generation system without direct usage of specific cryptographic APIs or protocols.,data/test_files/source_code/BlockchainCryptographyEngine.java,0,0,0,1760153271.4062574,
CorporateSecurityOrchestrator,ollama,qwen3:8b,source_code,True,True,0.0,0,21.289104223251343,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS,data/test_files/source_code/CorporateSecurityOrchestrator.py,0,0,0,1760153292.695594,
CorporateVPNManager,ollama,qwen3:8b,source_code,True,True,1.0,0,19.397176265716553,True,"No explicit references to vulnerable cryptographic algorithms or patterns were detected in the provided code. The implementation uses a custom Feistel network structure with a 24-byte key, but no standard cryptographic primitives (RSA, ECC, AES, etc.) or known vulnerable patterns (weak hashes, padding schemes, etc.) were identified.",data/test_files/source_code/CorporateVPNManager.java,0,0,0,1760153312.0931563,
DigitalCertificateValidator,ollama,qwen3:8b,source_code,True,True,0.85,2,23.209886074066162,True,The code implements RSA with 1024-bit keys (quantum-vulnerable) and uses modular arithmetic for key generation. No other cryptographic algorithms or hybrid systems are detected.,data/test_files/source_code/DigitalCertificateValidator.java,0,0,0,1760153335.3033907,
DistributedComputationEngine,ollama,qwen3:8b,source_code,True,True,0.0,0,11.746742963790894,True,"NO cryptographic algorithms or vulnerable patterns detected in the provided code. The implementation focuses on custom hash processing without explicit references to any cryptographic libraries, protocols, or vulnerable algorithms.",data/test_files/source_code/DistributedComputationEngine.py,0,0,0,1760153347.0503652,
DistributedComputeManager,ollama,qwen3:8b,source_code,True,True,0.0,0,11.65874171257019,True,No cryptographic algorithms or implementations were detected in the provided code. The code appears to be a distributed computing framework without explicit cryptographic function calls or library usage.,data/test_files/source_code/DistributedComputeManager.js,0,0,0,1760153358.7093759,
EnterpriseDataSecurityFramework,ollama,qwen3:8b,source_code,True,True,0.0,0,15.360488414764404,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS,data/test_files/source_code/EnterpriseDataSecurityFramework.c,0,0,0,1760153374.070198,
EnterpriseSecurityGateway,ollama,qwen3:8b,source_code,True,True,0.85,1,20.575313568115234,True,"Detected RSA implementation with 2048-bit key size (quantum-vulnerable). No evidence of ECC, DSA, DH, Korean algorithms, symmetric ciphers, hash functions, padding schemes, or hybrid systems. SecureRandom is used for entropy generation.",data/test_files/source_code/EnterpriseSecurityGateway.java,0,0,0,1760153394.6457708,
HardwareSecurity,ollama,qwen3:8b,source_code,True,True,0.85,1,16.441340446472168,True,"The code uses SHA-1 (DigestFunction160Hash) for cryptographic hashing operations, which is considered a weak hash function. No other quantum-vulnerable algorithms or specific cryptographic implementations were detected.",data/test_files/source_code/HardwareSecurity.java,0,0,0,1760153411.087357,
IoTDeviceSecurityController,ollama,qwen3:8b,source_code,True,True,0.0,0,13.030359506607056,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. The code contains custom cryptographic implementations (CompactCipherEngine, DigestCalculator) but lacks explicit references to any of the targeted vulnerable algorithms (RSA, ECC, DSA, AES-128, MD5, etc.). All cryptographic operations are implemented internally without using standard library functions or documented cryptographic APIs.",data/test_files/source_code/IoTDeviceSecurityController.go,0,0,0,1760153424.1181734,
LegacyPKISystem,ollama,qwen3:8b,source_code,True,True,0.95,3,19.521904945373535,True,"The code implements DSA with 1024-bit keys, which is vulnerable to quantum attacks. No other cryptographic algorithms or hybrid systems were detected.",data/test_files/source_code/LegacyPKISystem.java,0,0,0,1760153443.6403878,
MathematicalTransformEngine,ollama,qwen3:8b,source_code,True,True,0.0,0,12.197596549987793,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS,data/test_files/source_code/MathematicalTransformEngine.java,0,0,0,1760153455.8382657,
MediaStreamProtection,ollama,qwen3:8b,source_code,False,True,0.1,0,15.54252552986145,True,"No explicit cryptographic algorithms or vulnerable patterns detected in the provided code. The implementation uses custom stream ciphers (StreamCipher, MobileStreamCipher) without direct references to known vulnerable algorithms, and no cryptographic libraries beyond java.security.SecureRandom are utilized.",data/test_files/source_code/MediaStreamProtection.java,0,0,0,1760153471.381162,
QuantumResistantMessaging,ollama,qwen3:8b,source_code,False,True,1.0,0,20.43992042541504,True,"The code implements a lattice-based post-quantum cryptographic protocol with no evidence of quantum-vulnerable algorithms, weak hash functions, insecure RNGs, or hybrid systems. All cryptographic operations are based on lattice mathematics and secure random number generation.",data/test_files/source_code/QuantumResistantMessaging.java,0,0,0,1760153491.8213253,
QuantumSafeTransitionManager,ollama,qwen3:8b,source_code,True,True,0.1,0,17.492263078689575,True,NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS DETECTED. THE CODE REFERENCES ABSTRACT CRYPTOGRAPHIC ENGINES WITHOUT SPECIFIC ALGORITHM NAMES OR FUNCTION CALLS TO KNOWN VULNERABLE ALGORITHMS.,data/test_files/source_code/QuantumSafeTransitionManager.cpp,0,0,0,1760153509.3138776,
SecureChatApplication,ollama,qwen3:8b,source_code,False,True,1.0,0,18.355106353759766,True,"The code implements ChaCha20 stream cipher (quantum-resistant) with SecureRandom for key generation. No vulnerable cryptographic algorithms (RSA, ECC, DSA, AES-128, MD5, SHA-1, etc.) are explicitly detected. All cryptographic operations use modern, secure algorithms without obfuscation or legacy components.",data/test_files/source_code/SecureChatApplication.java,0,0,0,1760153527.6693022,
SecureCloudStorage,ollama,qwen3:8b,source_code,True,True,0.9,0,21.314956665039062,True,"No explicit references to quantum-vulnerable algorithms, cryptographic libraries, or vulnerable patterns were found. The code implements a custom block cipher with a 256-bit key but does not use standard cryptographic libraries or algorithms.",data/test_files/source_code/SecureCloudStorage.java,0,0,0,1760153548.9845016,
SecureTransactionProcessor,ollama,qwen3:8b,source_code,True,True,0.0,0,16.55791687965393,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. THE CODE CONTAINS A FRAMEWORK STRUCTURE WITHOUT EXPLICIT CRYPTOGRAPHIC FUNCTION CALLS OR LIBRARY USAGE. ALL CRYPTOGRAPHIC ELEMENTS ARE EITHER ABSTRACTED OR NOT IMPLEMENTED IN THE PROVIDED SOURCE CODE.,data/test_files/source_code/SecureTransactionProcessor.go,0,0,0,1760153565.5429254,
StealthCryptographicLibrary,ollama,qwen3:8b,source_code,True,True,0.6,1,17.031893014907837,True,"The code contains obfuscated cryptographic operations through its transformation registry (LIAP/ECT/BMP/DCU/AKDP/RIA) but lacks explicit references to specific vulnerable algorithms. No direct evidence of RSA, ECC, DSA, Korean algorithms, weak hashes, or padding schemes was found.",data/test_files/source_code/StealthCryptographicLibrary.py,0,0,0,1760153582.5750823,
TelecommunicationsSecurityHub,ollama,qwen3:8b,source_code,True,True,0.0,0,20.737797498703003,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS,data/test_files/source_code/TelecommunicationsSecurityHub.java,0,0,0,1760153603.3131552,
a5_trivium_stream_ciphers,ollama,qwen3:8b,source_code,False,True,0.0,0,13.4090735912323,True,"NO cryptographic algorithms or libraries detected in the provided code. The implementation appears to be a custom stream cipher design without explicit references to any cryptographic standards, protocols, or vulnerable algorithms.",data/test_files/source_code/a5_trivium_stream_ciphers.py,0,0,0,1760153616.7224977,
aes_advanced_encryption,ollama,qwen3:8b,source_code,True,True,0.95,1,15.75300407409668,True,"Detected AES implementation with quantum-vulnerable symmetric cipher (AES-128) based on SBOX/INV_SBOX arrays, RCON constants, and roundKeys/numRounds variables. No evidence of other cryptographic algorithms or vulnerabilities.",data/test_files/source_code/aes_advanced_encryption.java,0,0,0,1760153632.4757938,
aria_korean_block_cipher,ollama,qwen3:8b,source_code,True,True,0.0,0,14.301620244979858,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS,data/test_files/source_code/aria_korean_block_cipher.py,0,0,0,1760153646.7778986,
aria_sha256_ecdsa_government,ollama,qwen3:8b,source_code,True,True,0.0,0,15.089053630828857,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC ALGORITHMS,data/test_files/source_code/aria_sha256_ecdsa_government.py,0,0,0,1760153661.8673055,
blowfish_symmetric_encryption,ollama,qwen3:8b,source_code,False,True,0.0,0,15.16890001296997,True,"The code implements a custom block cipher (fish) with Feistel network structure and s-boxes, but contains no explicit references to any of the specified cryptographic algorithms or vulnerabilities. No cryptographic libraries or standard algorithm implementations are detected.",data/test_files/source_code/blowfish_symmetric_encryption.c,0,0,0,1760153677.0364783,
camellia_block_cipher,ollama,qwen3:8b,source_code,False,True,0.95,0,13.684558391571045,True,"The code implements Camellia cipher key scheduling but does not contain explicit references to any of the specified vulnerable algorithms or categories. No cryptographic APIs, libraries, or explicit algorithm names matching the detection criteria were found.",data/test_files/source_code/camellia_block_cipher.c,0,0,0,1760153690.7214022,
cast_feistel_cipher,ollama,qwen3:8b,source_code,False,True,0.0,0,13.242785215377808,True,"No cryptographic elements detected. The code implements a Feistel cipher structure but lacks explicit references to any cryptographic libraries, algorithms, or functions.",data/test_files/source_code/cast_feistel_cipher.c,0,0,0,1760153703.9644773,
chacha20_poly1305_aead,ollama,qwen3:8b,source_code,False,True,0.0,0,12.977360725402832,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS,data/test_files/source_code/chacha20_poly1305_aead.java,0,0,0,1760153716.9420848,
cloud_security_orchestrator,ollama,qwen3:8b,source_code,True,True,0.1,0,13.505060911178589,True,"No explicit cryptographic algorithm implementations detected in the provided code. The code references abstract cryptographic components (KeyDerivationEngine, SymmetricProcessor, etc.) without specifying vulnerable algorithms. KoreanCipherEngine may imply domestic algorithms but lacks explicit implementation details. No vulnerable padding schemes, hash functions, or symmetric ciphers were directly identified.",data/test_files/source_code/cloud_security_orchestrator.py,0,0,0,1760153730.4474397,
database_encryption_engine,ollama,qwen3:8b,source_code,True,True,0.0,0,14.502395391464233,True,"NO cryptographic algorithms or libraries detected in the provided code. The implementation contains a custom block cipher with Feistel network and S-boxes, but no explicit references to RSA, ECC, DSA, DH, ElGamal, Korean domestic algorithms, AES, 3DES, DES, RC4, MD5, SHA-1, SHA-256, PKCS#1 v1.5, OAEP, RNGs, or key derivation functions.",data/test_files/source_code/database_encryption_engine.c,0,0,0,1760153744.9501266,
diffie_hellman_key_exchange,ollama,qwen3:8b,source_code,True,True,0.95,1,14.818207025527954,True,Detected classical Diffie-Hellman key exchange implementation with 1024/2048-bit parameters. No other cryptographic algorithms or vulnerabilities detected.,data/test_files/source_code/diffie_hellman_key_exchange.java,0,0,0,1760153759.7686198,
digital_identity_platform,ollama,qwen3:8b,source_code,True,True,0.0,0,16.315396785736084,True,NOT DETECTED,data/test_files/source_code/digital_identity_platform.js,0,0,0,1760153776.0843587,
elgamal_diffie_hellman_pki,ollama,qwen3:8b,source_code,True,True,0.0,0,23.288009881973267,True,"No explicit cryptographic algorithms or vulnerable patterns detected in the provided code. The implementation uses generic modular arithmetic and random number generation without specific references to RSA, ECC, DH, or other targeted algorithms.",data/test_files/source_code/elgamal_diffie_hellman_pki.py,0,0,0,1760153799.3727796,
elliptic_curve_cryptography,ollama,qwen3:8b,source_code,True,True,0.0,0,20.64506459236145,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED,data/test_files/source_code/elliptic_curve_cryptography.java,0,0,0,1760153820.0181828,
financial_risk_analyzer,ollama,qwen3:8b,source_code,True,True,0.85,2,15.005788803100586,True,Detected quantum-vulnerable RSA implementation with PKCS#1 v1.5 padding. No other cryptographic vulnerabilities identified.,data/test_files/source_code/financial_risk_analyzer.py,0,0,0,1760153835.024325,
financial_transaction_processor,ollama,qwen3:8b,source_code,True,True,0.0,0,12.957769393920898,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS,data/test_files/source_code/financial_transaction_processor.c,0,0,0,1760153847.9824677,
financial_transaction_security,ollama,qwen3:8b,source_code,True,True,0.0,0,18.290228605270386,True,NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC ALGORITHMS OR IMPLEMENTATIONS DETECTED,data/test_files/source_code/financial_transaction_security.c,0,0,0,1760153866.2730992,
government_document_signer,ollama,qwen3:8b,source_code,True,True,0.85,2,19.91888976097107,True,Detected insecure random number generation and potential implementation flaws in elliptic curve operations. No explicit references to quantum-vulnerable algorithms or other cryptographic primitives were found.,data/test_files/source_code/government_document_signer.c,0,0,0,1760153886.19232,
idea_international_encryption,ollama,qwen3:8b,source_code,False,True,1.0,0,17.728565454483032,True,NOT DETECTED,data/test_files/source_code/idea_international_encryption.java,0,0,0,1760153903.921315,
iot_device_security,ollama,qwen3:8b,source_code,True,True,0.0,0,18.239626169204712,True,No cryptographic algorithms or libraries were detected in the provided code. The implementation appears to be a custom lightweight cipher without explicit references to any vulnerable cryptographic primitives.,data/test_files/source_code/iot_device_security.c,0,0,0,1760153922.1613345,
lattice_isogeny_postquantum,ollama,qwen3:8b,source_code,True,True,0.85,1,23.384361505508423,True,"The code implements lattice-based post-quantum cryptography without using quantum-vulnerable algorithms. However, it uses Python's standard random module for random number generation, which is not cryptographically secure.",data/test_files/source_code/lattice_isogeny_postquantum.py,0,0,0,1760153945.545953,
legacy_authentication_system,ollama,qwen3:8b,source_code,True,True,0.95,4,17.52341341972351,True,"Detected vulnerable cryptographic implementations: RSA with weak primes (61, 53) and simplified key generation, MD5 hash function with legacy algorithm, and legacy cryptographic library usage. No evidence of ECC, DSA, Korean domestic algorithms, or Grover-vulnerable symmetric ciphers.",data/test_files/source_code/legacy_authentication_system.c,0,0,0,1760153963.0697129,
md5_sha1_weak_hash,ollama,qwen3:8b,source_code,False,True,0.0,0,12.69943380355835,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC ALGORITHMS,data/test_files/source_code/md5_sha1_weak_hash.py,0,0,0,1760153975.7694645,
medical_device_encryption,ollama,qwen3:8b,source_code,True,True,0.0,0,19.160431623458862,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED,data/test_files/source_code/medical_device_encryption.rs,0,0,0,1760153994.930416,
military_communication_system,ollama,qwen3:8b,source_code,False,True,0.0,0,19.530151844024658,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC ALGORITHMS,data/test_files/source_code/military_communication_system.c,0,0,0,1760154014.460907,
mobile_secure_messenger,ollama,qwen3:8b,source_code,False,True,0.0,0,13.70631742477417,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS,data/test_files/source_code/mobile_secure_messenger.c,0,0,0,1760154028.1675677,
network_infrastructure_monitor,ollama,qwen3:8b,source_code,True,True,0.0,0,15.468484163284302,True,NOT DETECTED,data/test_files/source_code/network_infrastructure_monitor.cpp,0,0,0,1760154043.63636,
ntru_lattice_encryption,ollama,qwen3:8b,source_code,True,True,1.0,0,15.299460649490356,True,"The analyzed code implements NTRU lattice-based cryptography (post-quantum resistant) and does not contain any quantum-vulnerable algorithms, weak hash functions, insecure RNGs, or other cryptographic vulnerabilities listed in the criteria. All cryptographic operations are based on secure, modern cryptographic principles.",data/test_files/source_code/ntru_lattice_encryption.java,0,0,0,1760154058.9360857,
openssl_des_enc,ollama,qwen3:8b,source_code,True,True,0.0,0,19.115721940994263,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC ELEMENTS,data/test_files/source_code/openssl_des_enc.c,0,0,0,1760154078.0521255,
quantum_resistant_messenger,ollama,qwen3:8b,source_code,True,True,1.0,0,12.044437170028687,True,"The provided code implements a lattice-based post-quantum cryptographic system and does not contain any explicit references to quantum-vulnerable algorithms, weak hash functions, insecure random number generators, or other cryptographic vulnerabilities listed in the analysis criteria.",data/test_files/source_code/quantum_resistant_messenger.py,0,0,0,1760154090.0968556,
rc4_stream_generator,ollama,qwen3:8b,source_code,True,True,0.95,3,16.8229660987854,True,"Detected RC4 implementation (symmetric cipher vulnerable to Grover's algorithm) and legacy cipher suite usage. No evidence of RSA, ECC, discrete logarithm algorithms, Korean domestic algorithms, weak hash functions, padding schemes, insecure RNG/KDF, obfuscation, hybrid systems, or other legacy libraries.",data/test_files/source_code/rc4_stream_generator.c,0,0,0,1760154106.9201143,
rsa_gen,ollama,qwen3:8b,source_code,True,True,0.0,0,15.413696527481079,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS,data/test_files/source_code/rsa_gen.c,0,0,0,1760154122.3341184,
rsa_modular_exponentiation,ollama,qwen3:8b,source_code,True,True,0.95,3,22.473495721817017,True,"Detected 512-bit RSA implementation with weak padding scheme. No elliptic curve cryptography, discrete logarithm algorithms, or Korean domestic algorithms. Custom hash function not using standard weak hashes. Insecure key size and padding vulnerabilities identified.",data/test_files/source_code/rsa_modular_exponentiation.py,0,0,0,1760154144.8079314,
rsa_public_key_system,ollama,qwen3:8b,source_code,True,True,0.95,1,22.62576651573181,True,Detected quantum-vulnerable RSA implementation with standard key generation and modular exponentiation. No evidence of other cryptographic algorithms or vulnerabilities.,data/test_files/source_code/rsa_public_key_system.java,0,0,0,1760154167.43397,
salsa20_stream_cipher,ollama,qwen3:8b,source_code,True,True,1.0,0,18.60128378868103,True,"The provided code implements a stream cipher (Salsa20/ChaCha20) but does not contain explicit references to any of the specified vulnerable algorithms (RSA, ECC, DSA, Korean domestic algorithms, AES-128, MD5, PKCS#1 v1.5, etc.). No cryptographic libraries, function calls, or documented implementations of the targeted algorithms were found.",data/test_files/source_code/salsa20_stream_cipher.c,0,0,0,1760154186.0356483,
secure_messaging_protocol,ollama,qwen3:8b,source_code,True,True,0.85,3,20.63478684425354,True,"Detected vulnerable RSA implementation with PKCS#1 v1.5 padding, no quantum-resistant algorithms, and no use of elliptic curve or symmetric cryptography. Random number generation is secure but no key derivation functions are present.",data/test_files/source_code/secure_messaging_protocol.rb,0,0,0,1760154206.6707168,
secure_video_streaming,ollama,qwen3:8b,source_code,False,True,1.0,0,17.4031720161438,True,"NO vulnerable cryptographic algorithms detected. The code implements a custom Salsa20-like stream cipher (quantum-resistant) with no references to RSA, ECC, DSA, Korean domestic algorithms, weak hashes, or insecure RNGs. All cryptographic operations are internally implemented without external library dependencies.",data/test_files/source_code/secure_video_streaming.c,0,0,0,1760154224.0743554,
seed_aes_hybrid_banking,ollama,qwen3:8b,source_code,True,True,0.0,0,16.02843928337097,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. THE CODE CONTAINS CUSTOM CIPHER LOGIC WITHOUT REFERENCES TO KNOWN VULNERABLE ALGORITHMS, LIBRARIES, OR STANDARD CRYPTOGRAPHIC FUNCTIONS.",data/test_files/source_code/seed_aes_hybrid_banking.py,0,0,0,1760154240.103055,
seed_stream_cipher,ollama,qwen3:8b,source_code,True,True,0.0,0,14.347166776657104,True,NOT DETECTED,data/test_files/source_code/seed_stream_cipher.py,0,0,0,1760154254.4504964,
serpent_substitution_network,ollama,qwen3:8b,source_code,False,True,0.0,0,16.213117837905884,True,NO vulnerable cryptographic algorithms detected. The code appears to implement a symmetric cipher (Serpent) key schedule but lacks explicit references to any of the targeted algorithms or patterns.,data/test_files/source_code/serpent_substitution_network.c,0,0,0,1760154270.6639314,
sha1_rsa_legacy_documents,ollama,qwen3:8b,source_code,True,True,0.6,1,19.642616510391235,True,"Detected basic RSA implementation with small primes (1009, 1013) and no secure random number generator, which is vulnerable to quantum attacks. No other cryptographic algorithms or vulnerabilities were found.",data/test_files/source_code/sha1_rsa_legacy_documents.py,0,0,0,1760154290.3068275,
skipjack_government_cipher,ollama,qwen3:8b,source_code,False,True,1.0,0,18.506945848464966,True,NO vulnerable cryptographic algorithms detected in the provided code. The implementation appears to be a custom block cipher (Skipjack) without explicit references to any of the listed vulnerable algorithms or libraries.,data/test_files/source_code/skipjack_government_cipher.c,0,0,0,1760154308.8140664,
smart_card_security,ollama,qwen3:8b,source_code,False,True,0.0,0,22.360703468322754,True,"NO vulnerable cryptographic algorithms detected in the provided code. The implementation uses a TEA-like block cipher, which is not explicitly listed in the target vulnerable algorithm categories. No cryptographic libraries, padding schemes, hash functions, or key derivation functions were identified.",data/test_files/source_code/smart_card_security.c,0,0,0,1760154331.175102,
tiger_hash_function,ollama,qwen3:8b,source_code,False,True,0.0,0,14.690049171447754,True,"No cryptographic algorithms or vulnerable patterns detected in the provided code. The code appears to implement the TIGER hash function, but none of the targeted vulnerable algorithms (RSA, ECC, DSA, weak hashes, etc.) are present.",data/test_files/source_code/tiger_hash_function.c,0,0,0,1760154345.8654752,
twofish_advanced_encryption,ollama,qwen3:8b,source_code,False,True,0.0,0,23.432816982269287,True,"NO vulnerable cryptographic algorithms detected in the provided code. The implementation appears to be a symmetric block cipher (Twofish) without explicit references to RSA, ECC, discrete logarithm algorithms, Korean domestic algorithms, or other vulnerable cryptographic primitives.",data/test_files/source_code/twofish_advanced_encryption.c,0,0,0,1760154369.2986271,
whirlpool_hash_digest,ollama,qwen3:8b,source_code,False,True,1.0,0,11.918225049972534,True,"The code implements a custom cryptographic hash function (likely Whirlpool) but contains no explicit references to RSA, ECC, DSA, Korean domestic algorithms, weak hashes, vulnerable padding schemes, insecure RNGs, or other specified vulnerable algorithms. All detected elements are internal operations of a hash function.",data/test_files/source_code/whirlpool_hash_digest.c,0,0,0,1760154381.2172039,
wireless_network_encryption,ollama,qwen3:8b,source_code,True,True,0.95,1,23.689417839050293,True,"The code implements a custom RC4 stream cipher, which is vulnerable to quantum attacks via Grover's algorithm. No other cryptographic algorithms or libraries are explicitly used.",data/test_files/source_code/wireless_network_encryption.c,0,0,0,1760154404.9069505,
adaptive_multi_tenant_crypto_orchestrator,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,22.828062772750854,True,"No explicit cryptographic algorithm references, library calls, or implementation patterns were detected in the provided assembly binary. All analysis categories remain undetermined due to lack of concrete evidence.",data/test_files/assembly_binary/adaptive_multi_tenant_crypto_orchestrator.s,0,0,0,1760154427.7354076,
advanced_block_standard_operations,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,18.01569437980652,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED,data/test_files/assembly_binary/advanced_block_standard_operations.s,0,0,0,1760154445.7514114,
aes_key_expansion_module,ollama,qwen3:8b,assembly_binary,True,True,0.85,1,19.738478899002075,True,"Detected AES-128 implementation compliant with FIPS 197 standards, which is vulnerable to quantum attacks due to its symmetric cipher nature. No other cryptographic algorithms or vulnerabilities were found.",data/test_files/assembly_binary/aes_key_expansion_module.s,0,0,0,1760154465.490221,
aria_encryption_engine,ollama,qwen3:8b,assembly_binary,True,True,0.85,2,21.638333559036255,True,Detected Korean domestic algorithm implementation (likely SEED) with substitution S-boxes and 128-bit block size. No explicit evidence for other cryptographic algorithms or vulnerabilities.,data/test_files/assembly_binary/aria_encryption_engine.s,0,0,0,1760154487.1288533,
automotive_ecu_cryptographic_unit,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,13.600096702575684,True,No explicit cryptographic algorithm implementations or library calls detected. The code appears to perform custom block cipher operations with no clear evidence of specific cryptographic primitives or vulnerable patterns.,data/test_files/assembly_binary/automotive_ecu_cryptographic_unit.s,0,0,0,1760154500.7292397,
banking_transaction_processor,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,17.35914945602417,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. THE CODE CONTAINS GENERIC STRUCTURAL ELEMENTS (FEISTEL NETWORK, KEY SCHEDULING) WITHOUT EXPLICIT REFERENCES TO SPECIFIC CRYPTOGRAPHIC LIBRARIES, ALGORITHMS, OR VULNERABLE IMPLEMENTATIONS.",data/test_files/assembly_binary/banking_transaction_processor.s,0,0,0,1760154518.0886803,
biometric_authentication_engine,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,15.542814016342163,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARIES DETECTED. ALL ANALYSIS POINTS LACK EXPLICIT FUNCTION CALLS, LIBRARY IMPORTS, OR DOCUMENTED CRYPTOGRAPHIC OPERATIONS.",data/test_files/assembly_binary/biometric_authentication_engine.s,0,0,0,1760154533.631806,
blake2b_hash_engine,ollama,qwen3:8b,assembly_binary,True,True,0.8,1,17.0402250289917,True,Detected BLAKE2b-512 cryptographic hash function implementation with explicit evidence in the code. No other cryptographic algorithms or vulnerabilities were found.,data/test_files/assembly_binary/blake2b_hash_engine.s,0,0,0,1760154550.6725302,
block_cipher_operations,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,13.060863018035889,True,"No explicit cryptographic algorithm implementations, library calls, or API signatures detected. The code contains generic bitwise operations and data processing patterns that do not match specific vulnerable algorithms or cryptographic primitives.",data/test_files/assembly_binary/block_cipher_operations.s,0,0,0,1760154563.7337096,
blockchain_consensus_validator,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,16.055150747299194,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARIES DETECTED. ALL ANALYSIS POINTS LACK EXPLICIT FUNCTION CALLS, LIBRARY IMPORTS, OR DOCUMENTED IMPLEMENTATIONS.",data/test_files/assembly_binary/blockchain_consensus_validator.s,0,0,0,1760154579.7891858,
chacha20_stream_processor,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,20.754216194152832,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS DETECTED. THE CODE APPEARS TO IMPLEMENT A CUSTOM STREAM CIPHER OR STATE-BASED ENCRYPTION MECHANISM WITHOUT EXPLICIT REFERENCES TO KNOWN VULNERABLE ALGORITHMS OR LIBRARIES.,data/test_files/assembly_binary/chacha20_stream_processor.s,0,0,0,1760154600.5436835,
cloud_storage_encryption_processor,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,14.253897666931152,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC ELEMENTS,data/test_files/assembly_binary/cloud_storage_encryption_processor.s,0,0,0,1760154614.7978394,
crypto_trading_platform_engine,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,15.30294156074524,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED,data/test_files/assembly_binary/crypto_trading_platform_engine.s,0,0,0,1760154630.1010926,
cryptographic_wallet_manager,ollama,qwen3:8b,assembly_binary,False,True,0.85,8,21.784505605697632,True,"Detected elliptic curve scalar multiplication (Curve25519), HIGHT, ARIA, SHA-1, MD5, and potential side-channel vulnerabilities. No direct evidence of RSA, DSA, DH, ElGamal, or vulnerable symmetric ciphers.",data/test_files/assembly_binary/cryptographic_wallet_manager.s,0,0,0,1760154651.8859375,
diffie_hellman_key_exchange,ollama,qwen3:8b,assembly_binary,True,True,0.95,2,15.046814918518066,True,Detected Diffie-Hellman key exchange implementation with modular exponentiation and 2048-bit prime parameters. Identified big integer modular arithmetic operations. No evidence of other cryptographic algorithms or libraries.,data/test_files/assembly_binary/diffie_hellman_key_exchange.s,0,0,0,1760154666.933017,
digital_signature_processor,ollama,qwen3:8b,assembly_binary,True,True,0.85,2,17.753508806228638,True,Detected RSA modular exponentiation and big integer operations. No explicit evidence for other cryptographic algorithms or libraries.,data/test_files/assembly_binary/digital_signature_processor.s,0,0,0,1760154684.6868114,
distributed_blockchain_consensus_engine,ollama,qwen3:8b,assembly_binary,False,True,0.1,0,14.685274362564087,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. The provided assembly code contains consensus protocol logic with cryptographic system initialization calls (BLS, VDF, Merkle trees, curve signatures) but lacks explicit references to vulnerable algorithms (RSA, DES, MD5, etc.) or cryptographic library implementations. All detected elements are either protocol-specific functions or placeholder names without concrete cryptographic implementation evidence.",data/test_files/assembly_binary/distributed_blockchain_consensus_engine.s,0,0,0,1760154699.3724115,
dsa_signature_verification,ollama,qwen3:8b,assembly_binary,True,True,0.95,3,27.56325626373291,True,"Detected DSA (discrete logarithm) implementation and SHA-256 hash function. Evidence includes modular arithmetic operations, DSA verification steps, and hash function calls. No explicit RSA, elliptic curve, or Korean algorithm implementations found.",data/test_files/assembly_binary/dsa_signature_verification.s,0,0,0,1760154726.9359233,
elliptic_curve_point_operations,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,15.516910076141357,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC ALGORITHMS OR PATTERNS,data/test_files/assembly_binary/elliptic_curve_point_operations.s,0,0,0,1760154742.453119,
elliptic_curve_scalar_multiplication,ollama,qwen3:8b,assembly_binary,False,True,0.85,1,19.381383657455444,True,"Detected elliptic curve scalar multiplication operations (ec_scalar_multiplication, elliptic_point_double, elliptic_point_add) which are foundational to ECC but not inherently vulnerable to quantum attacks. No other cryptographic primitives or vulnerable patterns were found.",data/test_files/assembly_binary/elliptic_curve_scalar_multiplication.s,0,0,0,1760154761.8347924,
elliptic_mathematical_operations,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,17.33640146255493,True,NOT DETECTED,data/test_files/assembly_binary/elliptic_mathematical_operations.s,0,0,0,1760154779.171571,
ellipticsignature_securehashalgo1_operations,ollama,qwen3:8b,assembly_binary,False,True,0.6,1,23.692394971847534,True,Detected MD5 hash function implementation with standard round constants and processing logic. No explicit evidence for other cryptographic algorithms or libraries. Potential elliptic curve operations inferred from data sections but not confirmed by code.,data/test_files/assembly_binary/ellipticsignature_securehashalgo1_operations.s,0,0,0,1760154802.8643508,
embedded_authentication_processor,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,20.353004932403564,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED,data/test_files/assembly_binary/embedded_authentication_processor.s,0,0,0,1760154823.2176466,
embedded_iot_security_processor,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,19.584035396575928,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED,data/test_files/assembly_binary/embedded_iot_security_processor.s,0,0,0,1760154842.8019946,
enterprise_data_protection_engine,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,17.45425581932068,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED,data/test_files/assembly_binary/enterprise_data_protection_engine.s,0,0,0,1760154860.2565458,
feistel_network_operations,ollama,qwen3:8b,assembly_binary,True,True,0.95,2,16.75256896018982,True,"Detected SEED cipher implementation through matching S-box values in data_402000, which corresponds to the standard 8x8 S-box used in the Korean SEED algorithm.",data/test_files/assembly_binary/feistel_network_operations.s,0,0,0,1760154877.0093915,
financial_cryptographic_accelerator,ollama,qwen3:8b,assembly_binary,True,True,0.85,5,18.21847915649414,True,Detected RSA modular exponentiation with large integer operations and a potential Korean domestic cryptographic algorithm implementation. No explicit evidence for other vulnerable algorithms.,data/test_files/assembly_binary/financial_cryptographic_accelerator.s,0,0,0,1760154895.228172,
government_classified_system_processor,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,14.335958242416382,True,NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS FOUND. ALL DETECTIONS REQUIRE EXPLICIT API REFERENCES OR IMPLEMENTATION SIGNATURES WHICH ARE ABSENT IN THE PROVIDED CODE.,data/test_files/assembly_binary/government_classified_system_processor.s,0,0,0,1760154909.5646298,
hash_digest_operations,ollama,qwen3:8b,assembly_binary,False,True,0.95,1,14.614020586013794,True,Detected MD5 hash function implementation with 512-bit block processing and round constants. No evidence of other cryptographic algorithms or libraries.,data/test_files/assembly_binary/hash_digest_operations.s,0,0,0,1760154924.1789951,
hight_lightweight_cipher,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,16.20864462852478,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. The provided code implements a lightweight block cipher (LIGHTWEIGHT_BLOCK) with no explicit references to RSA, ECC, DSA, DH, ElGamal, SEED, ARIA, HIGHT, LEA, DES, 3DES, RC4, AES-128, MD5, SHA-1, or other vulnerable algorithms. The code contains no cryptographic library calls, hash functions, or side-channel vulnerable patterns. The cipher appears to be a custom implementation with no direct matches to the specified vulnerable algorithms.",data/test_files/assembly_binary/hight_lightweight_cipher.s,0,0,0,1760154940.3880002,
hybrid_banking_security_system,ollama,qwen3:8b,assembly_binary,True,True,0.75,2,17.094144344329834,True,Detected RSA modular exponentiation and large integer arithmetic patterns in the authentication phase. No other quantum-vulnerable algorithms or patterns were found with explicit evidence.,data/test_files/assembly_binary/hybrid_banking_security_system.s,0,0,0,1760154957.482582,
industrial_control_security,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,16.927337646484375,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. NO EXPlicit cryptographic function calls, library imports, or algorithm names were found in the provided assembly code. All analysis points lack clear evidence required for detection.",data/test_files/assembly_binary/industrial_control_security.s,0,0,0,1760154974.4102926,
industrial_security_coprocessor,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,13.712502479553223,True,"No explicit cryptographic algorithm implementations or library calls detected. The code appears to contain low-level operations that may be part of a custom or proprietary implementation, but no vulnerable algorithms (RSA, ECC, symmetric ciphers, hashes) are confirmed.",data/test_files/assembly_binary/industrial_security_coprocessor.s,0,0,0,1760154988.1231582,
kcdsa_signature_generator,ollama,qwen3:8b,assembly_binary,True,True,0.8,1,16.84713912010193,True,"Detected DSA discrete logarithm computation signatures with domain parameters (p/q/g), private key validation, and ephemeral key generation. No explicit evidence for other cryptographic algorithms or libraries.",data/test_files/assembly_binary/kcdsa_signature_generator.s,0,0,0,1760155004.9706511,
keyexchange_protocol_operations,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,14.213122129440308,True,"NO cryptographic algorithm signatures, library calls, or implementation patterns detected in the provided assembly code. The code contains generic arithmetic operations without explicit cryptographic function calls or references to vulnerable algorithms.",data/test_files/assembly_binary/keyexchange_protocol_operations.s,0,0,0,1760155019.1841323,
korean_blockcipher_operations,ollama,qwen3:8b,assembly_binary,True,True,0.65,1,23.091140508651733,True,Detected potential SEED algorithm implementation through S-box patterns in data sections. No other cryptographic algorithms or patterns were explicitly identified.,data/test_files/assembly_binary/korean_blockcipher_operations.s,0,0,0,1760155042.2757335,
lea_block_cipher_engine,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,17.22205352783203,True,"No explicit cryptographic algorithms, library calls, or implementation patterns detected in the provided assembly code. The code appears to implement a custom block cipher (FAST_BLOCK) without direct references to known vulnerable algorithms or cryptographic libraries.",data/test_files/assembly_binary/lea_block_cipher_engine.s,0,0,0,1760155059.4981587,
legacy_hash_computation,ollama,qwen3:8b,assembly_binary,True,True,0.95,1,17.17947220802307,True,Detected MD5 and SHA-1 hash implementations through explicit constant values in the disassembled code. No other cryptographic algorithms or libraries were found.,data/test_files/assembly_binary/legacy_hash_computation.s,0,0,0,1760155076.6779842,
legacy_pki_certificate_processor,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,14.55142068862915,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. THE CODE SHOWS CERTIFICATE VALIDATION STRUCTURE WITH ALGORITHM REGISTRIES BUT LACKS EXPLICIT CRYPTOGRAPHIC FUNCTION CALLS, LIBRARY IMPORTS, OR IMPLEMENTATION SIGNATURES FOR ANY SPECIFIC ALGORITHMS. ALL DETECTIONS REQUIRE EXPLICIT EVIDENCE WHICH IS ABSENT IN THE PROVIDED TEST DATA.",data/test_files/assembly_binary/legacy_pki_certificate_processor.s,0,0,0,1760155091.2297263,
md5_sha1_hash_processor,ollama,qwen3:8b,assembly_binary,True,True,0.95,1,17.560667514801025,True,"Detected legacy hash implementations using MD5 and SHA-1 algorithms, which are vulnerable to quantum attacks via Grover's algorithm and collision attacks. No evidence of other quantum-vulnerable algorithms or cryptographic libraries.",data/test_files/assembly_binary/md5_sha1_hash_processor.s,0,0,0,1760155108.7907624,
medical_device_security_controller,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,21.556995630264282,True,NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARIES DETECTED,data/test_files/assembly_binary/medical_device_security_controller.s,0,0,0,1760155130.3481724,
message_digest_128bit_operations,ollama,qwen3:8b,assembly_binary,True,True,0.95,1,15.642062902450562,True,Detected MD5 cryptographic hash function implementation with explicit initial hash values and compression constants. No other cryptographic algorithms or patterns detected.,data/test_files/assembly_binary/message_digest_128bit_operations.s,0,0,0,1760155145.9905987,
mobile_cipher_engine,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,14.998453617095947,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED,data/test_files/assembly_binary/mobile_cipher_engine.s,0,0,0,1760155160.989381,
mobile_payment_security_engine,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,19.88579273223877,True,No explicit cryptographic algorithm implementations or library calls detected in the provided assembly code. All analysis points lack clear evidence of vulnerable cryptographic patterns.,data/test_files/assembly_binary/mobile_payment_security_engine.s,0,0,0,1760155180.8756406,
network_security_gateway,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,16.95676827430725,True,"No explicit cryptographic algorithm implementations or library calls detected. The code appears to handle block cipher scheduling/encryption operations, but no specific vulnerable algorithms (RSA, ECC, DES, AES-128, MD5, SHA-1, etc.) were identified through explicit API calls, library imports, or documented function signatures.",data/test_files/assembly_binary/network_security_gateway.s,0,0,0,1760155197.8327239,
neural_network_inference_accelerator,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,14.60851240158081,True,NO cryptographic algorithms or library calls detected in the provided assembly code. All analysis points lack explicit evidence of cryptographic functionality.,data/test_files/assembly_binary/neural_network_inference_accelerator.s,0,0,0,1760155212.441623,
ntru_polynomial_processor,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,21.191354036331177,True,No explicit cryptographic algorithms or library references detected. The code implements polynomial-based post-quantum cryptography operations without direct use of vulnerable algorithms or external cryptographic libraries.,data/test_files/assembly_binary/ntru_polynomial_processor.s,0,0,0,1760155233.6332805,
obfuscated_crypto_library_dispatcher,ollama,qwen3:8b,assembly_binary,True,True,0.85,1,19.239377975463867,True,"No explicit cryptographic algorithm implementations detected. The code contains assembly-level obfuscation techniques (XOR decoding, bit rotation, indirect function calls) to hide cryptographic operations, but no direct references to specific vulnerable algorithms or libraries were found.",data/test_files/assembly_binary/obfuscated_crypto_library_dispatcher.s,0,0,0,1760155252.873144,
openssl_des_enc,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,15.70673394203186,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED,data/test_files/assembly_binary/openssl_des_enc.asm,0,0,0,1760155268.580301,
openssl_des_enc,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,13.815647840499878,True,NOT DETECTED,data/test_files/assembly_binary/openssl_des_enc.bin,0,0,0,1760155282.3968885,
poly1305_authenticator,ollama,qwen3:8b,assembly_binary,False,True,1.0,0,15.314415216445923,True,"NOT DETECTED - The analyzed code implements Poly1305 MAC algorithm with no explicit references to vulnerable cryptographic algorithms, libraries, or quantum-attack susceptible patterns. All operations are part of a secure MAC construction and do not exhibit characteristics of RSA, ECC, DSA, DES, 3DES, RC4, AES-128, MD5, SHA-1, or other quantum-vulnerable algorithms.",data/test_files/assembly_binary/poly1305_authenticator.s,0,0,0,1760155297.711631,
polymorphic_malware_crypto_engine,ollama,qwen3:8b,assembly_binary,True,True,0.6,1,17.09897494316101,True,"The code exhibits obfuscation techniques such as self-modifying code and XOR-encoded function pointers, which may hide cryptographic operations. No explicit references to specific vulnerable algorithms (RSA, ECC, DSA, etc.) or cryptographic libraries were found. Korean algorithm signatures and vulnerable symmetric ciphers were not directly detected.",data/test_files/assembly_binary/polymorphic_malware_crypto_engine.s,0,0,0,1760155314.8109562,
polynomial_field_arithmetic_engine,ollama,qwen3:8b,assembly_binary,False,True,0.6,1,17.379812955856323,True,Detected elliptic curve scalar multiplication operations (likely ECC) but no explicit evidence for other cryptographic algorithms or libraries.,data/test_files/assembly_binary/polynomial_field_arithmetic_engine.s,0,0,0,1760155332.1912045,
postquantum_multimodal_operations,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,20.096450567245483,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC ELEMENTS,data/test_files/assembly_binary/postquantum_multimodal_operations.s,0,0,0,1760155352.2879694,
publickey_encryption_operations,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,14.892592668533325,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. THE CODE CONTAINS GENERAL ARITHMETIC OPERATIONS AND DATA CONSTANTS WITHOUT EXPLICIT CRYPTOGRAPHIC FUNCTION CALLS OR LIBRARY REFERENCES.,data/test_files/assembly_binary/publickey_encryption_operations.s,0,0,0,1760155367.1808536,
publickey_modular_operations,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,12.580554246902466,True,"NO cryptographic algorithm implementations or library calls detected in the provided assembly code. The code contains generic arithmetic operations without explicit references to known cryptographic algorithms, libraries, or vulnerable patterns.",data/test_files/assembly_binary/publickey_modular_operations.s,0,0,0,1760155379.7616978,
publickeyalgo_messagedigest5_operations,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,17.05409598350525,True,NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS DETECTED,data/test_files/assembly_binary/publickeyalgo_messagedigest5_operations.s,0,0,0,1760155396.8161442,
quantum_communication_relay,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,12.385969638824463,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS DETECTED. ALL ELEMENTS ARE EITHER OBFUSCATED, GENERAL PURPOSE, OR LACK EXPLICIT CRYPTOGRAPHIC API REFERENCES.",data/test_files/assembly_binary/quantum_communication_relay.s,0,0,0,1760155409.2024598,
quantum_cryptanalysis_simulation,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,18.25333833694458,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS,data/test_files/assembly_binary/quantum_cryptanalysis_simulation.s,0,0,0,1760155427.4561799,
quantum_migration_bridge_processor,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,17.71266269683838,True,NO VULNERABLE CRYPTOGRAPHIC ELEMENTS DETECTED,data/test_files/assembly_binary/quantum_migration_bridge_processor.s,0,0,0,1760155445.1691654,
quantum_resistant_lattice_operations,ollama,qwen3:8b,assembly_binary,True,True,1.0,0,16.208664894104004,True,"The analyzed code implements lattice-based post-quantum cryptographic operations (Ring-LWE, basis reduction, Gram-Schmidt orthogonalization) with no explicit references to vulnerable cryptographic algorithms, libraries, or implementations. All detected elements are part of secure, quantum-resistant cryptographic protocols.",data/test_files/assembly_binary/quantum_resistant_lattice_operations.s,0,0,0,1760155461.3780925,
quantum_resistant_migration_bridge,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,15.276096820831299,True,"NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC IMPLEMENTATIONS DETECTED. THE CODE REFERENCES LEGACY PROCESSING FUNCTIONS BUT LACKS SPECIFIC ALGORITHM NAMES, LIBRARY CALLS, OR IMPLEMENTATION DETAILS THAT WOULD CONFIRM QUANTUM-VULNERABLE ALGORITHMS (RSA, DSA, DES, MD5, ETC.).",data/test_files/assembly_binary/quantum_resistant_migration_bridge.s,0,0,0,1760155476.6545448,
quantum_safe_communicator,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,26.908340454101562,True,NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED,data/test_files/assembly_binary/quantum_safe_communicator.s,0,0,0,1760155503.563171,
rsa_key_generation_engine,ollama,qwen3:8b,assembly_binary,True,True,0.95,2,20.92638921737671,True,"Detected RSA key generation with 2048-bit modular arithmetic operations. No evidence of elliptic curve cryptography, discrete logarithm algorithms, Korean algorithms, symmetric ciphers, hash functions, or side-channel vulnerabilities.",data/test_files/assembly_binary/rsa_key_generation_engine.s,0,0,0,1760155524.4899144,
salsa20_stream_cipher,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,20.13910436630249,True,"No explicit cryptographic algorithms, library calls, or implementation patterns were detected in the provided assembly code. The code appears to implement a custom stream cipher without direct references to known vulnerable algorithms or cryptographic libraries.",data/test_files/assembly_binary/salsa20_stream_cipher.s,0,0,0,1760155544.6293154,
satellite_communication_security,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,16.760154247283936,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARIES DETECTED. ALL ANALYSIS POINTS LACK EXPLICIT FUNCTION CALLS, LIBRARY IMPORTS, OR DOCUMENTED API SIGNATURES.",data/test_files/assembly_binary/satellite_communication_security.s,0,0,0,1760155561.3897262,
secure_boot_verification_processor,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,16.457577228546143,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC ELEMENTS,data/test_files/assembly_binary/secure_boot_verification_processor.s,0,0,0,1760155577.847653,
secure_communication_protocol,ollama,qwen3:8b,assembly_binary,True,True,0.95,10,22.266198873519897,True,"Detected RSA, Diffie-Hellman, AES-128, RC4, SHA-1, MD5, and side-channel vulnerabilities with explicit function calls and library usage. Korean algorithms and elliptic curve operations not detected.",data/test_files/assembly_binary/secure_communication_protocol.s,0,0,0,1760155600.1142318,
secure_hash_256bit_operations,ollama,qwen3:8b,assembly_binary,True,True,0.85,1,19.692744255065918,True,Detected SHA-256 cryptographic hash function implementation through explicit use of SHA-256 initial hash values in data_403100. No other cryptographic algorithms or vulnerable patterns were found.,data/test_files/assembly_binary/secure_hash_256bit_operations.s,0,0,0,1760155619.8072217,
secure_matrix_transformation_unit,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,15.137365579605103,True,"NO CLEAR EVIDENCE OF CRYPTOGRAPHIC ALGORITHMS OR LIBRARIES DETECTED. ALL ANALYSIS POINTS LACK EXPLICIT FUNCTION CALLS, LIBRARY IMPORTS, OR DOCUMENTED API USAGE.",data/test_files/assembly_binary/secure_matrix_transformation_unit.s,0,0,0,1760155634.944896,
siphash_prf_function,ollama,qwen3:8b,assembly_binary,False,True,1.0,0,16.639347314834595,True,"No explicit cryptographic algorithms or library calls detected. The code implements SipHash (a secure hash function) but does not contain evidence of vulnerable algorithms (RSA, DES, MD5, etc.) or specific cryptographic library usage.",data/test_files/assembly_binary/siphash_prf_function.s,0,0,0,1760155651.584554,
smart_card_authenticator,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,14.102697849273682,True,"NO cryptographic algorithms or library calls detected in the provided assembly code. All analysis points lack explicit evidence of cryptographic operations, library usage, or algorithm-specific patterns.",data/test_files/assembly_binary/smart_card_authenticator.s,0,0,0,1760155665.6875365,
smart_card_security_module,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,20.182791471481323,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC ELEMENTS,data/test_files/assembly_binary/smart_card_security_module.s,0,0,0,1760155685.8706899,
sphincs_signature_scheme,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,14.52902889251709,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. The code implements a hash-based post-quantum signature system (SPHINCS+) with custom Korean cipher naming conventions, but contains no explicit references to vulnerable cryptographic algorithms, libraries, or implementations. All cryptographic operations appear to be abstracted through custom function calls and do not directly invoke known vulnerable algorithms (RSA, DES, MD5, etc.).",data/test_files/assembly_binary/sphincs_signature_scheme.s,0,0,0,1760155700.4000192,
steganographic_crypto_covert_channel,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,18.653552770614624,True,"NO VULNERABLE CRYPTOGRAPHIC ALGORITHMS DETECTED. The code contains obfuscated image processing operations disguised as cryptographic functions, but no explicit cryptographic API calls, library imports, or algorithm implementations were found. All detected functions are generic image processing operations without cryptographic signatures.",data/test_files/assembly_binary/steganographic_crypto_covert_channel.s,0,0,0,1760155719.0539024,
stream_cipher_generator,ollama,qwen3:8b,assembly_binary,True,True,0.95,1,15.77932596206665,True,Detected RC4 stream cipher implementation (rc4_encrypt_stream function) with key scheduling patterns. No evidence of other cryptographic algorithms or libraries.,data/test_files/assembly_binary/stream_cipher_generator.s,0,0,0,1760155734.83369,
stream_generator_operations,ollama,qwen3:8b,assembly_binary,True,True,0.0,0,19.68413782119751,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC ELEMENTS,data/test_files/assembly_binary/stream_generator_operations.s,0,0,0,1760155754.5180874,
stream_keygeneration_operations,ollama,qwen3:8b,assembly_binary,False,True,0.0,0,14.578764200210571,True,NO cryptographic algorithms or library calls detected in the provided assembly code. The code contains generic data manipulation and arithmetic operations without explicit cryptographic function signatures or algorithm implementations.,data/test_files/assembly_binary/stream_keygeneration_operations.s,0,0,0,1760155769.0971687,
triple_des_encryption_module,ollama,qwen3:8b,assembly_binary,True,True,0.95,1,14.77943229675293,True,Detected 3DES (Triple DES) implementation with EDE structure and Grover's vulnerability indication. No other cryptographic algorithms or libraries detected.,data/test_files/assembly_binary/triple_des_encryption_module.s,0,0,0,1760155783.877029,
vpn_tunnel_encryption_engine,ollama,qwen3:8b,assembly_binary,True,True,0.1,0,16.234221935272217,True,NO CLEAR EVIDENCE OF VULNERABLE CRYPTOGRAPHIC ALGORITHMS OR LIBRARY CALLS DETECTED,data/test_files/assembly_binary/vpn_tunnel_encryption_engine.s,0,0,0,1760155800.1115544,
x25519_key_agreement,ollama,qwen3:8b,assembly_binary,False,True,1.0,0,19.3084237575531,True,"No vulnerable cryptographic algorithms or patterns detected. The code implements Curve25519 elliptic curve operations using a Montgomery ladder, which is quantum-resistant and secure against side-channel attacks. No references to SHA-1, MD5, DES, 3DES, RC4, AES-128, or other vulnerable algorithms were found.",data/test_files/assembly_binary/x25519_key_agreement.s,0,0,0,1760155819.4203286,
apache_legacy_ssl,ollama,qwen3:8b,logs_config,True,True,0.95,6,22.605586290359497,True,"Detected multiple quantum-vulnerable configurations: 1024-bit RSA keys, 1024-bit DH parameters, deprecated SSLv3/TLSv1.0 protocols, and weak cipher suites (StreamCipher, LEGACY_CIPHER). No evidence of Korean algorithms or migration to quantum-resistant algorithms.",data/test_files/logs_config/apache_legacy_ssl.conf,0,0,0,1760155842.0265796,
automotive_v2x_system,ollama,qwen3:8b,logs_config,False,False,0.0,0,29.970090627670288,False,Failed to parse JSON response,data/test_files/logs_config/automotive_v2x_system.yaml,0,0,0,1760155871.9979765,
blockchain_node_security,ollama,qwen3:8b,logs_config,True,True,0.85,5,26.918951749801636,True,"Detected quantum-vulnerable elliptic curve configurations (secp256k1, secp256r1) and legacy SHA1 deprecation. Migration plans to post-quantum algorithms (kyber768, dilithium3) are in place. No direct use of RSA certificates or Korean-specific algorithms found.",data/test_files/logs_config/blockchain_node_security.conf,0,0,0,1760155898.9177048,
cloud_hsm_operations,ollama,qwen3:8b,logs_config,True,True,0.95,1,19.27934718132019,True,Detected RSA key generation with 3072-bit size (quantum-vulnerable) in log entries. No other vulnerable algorithms or configurations found.,data/test_files/logs_config/cloud_hsm_operations.log,0,0,0,1760155918.197366,
cloud_storage_encryption,ollama,qwen3:8b,logs_config,False,False,0.0,0,30.162081480026245,False,Failed to parse JSON response,data/test_files/logs_config/cloud_storage_encryption.conf,0,0,0,1760155948.3597739,
cryptographic_operations_detailed,ollama,qwen3:8b,logs_config,False,False,0.0,0,30.145235538482666,False,Failed to parse JSON response,data/test_files/logs_config/cryptographic_operations_detailed.log,0,0,0,1760155978.5053468,
database_encryption_setup,ollama,qwen3:8b,logs_config,False,False,0.0,0,30.13894510269165,False,Failed to parse JSON response,data/test_files/logs_config/database_encryption_setup.log,0,0,0,1760156008.6445417,
email_server_crypto,ollama,qwen3:8b,logs_config,False,False,0.0,0,30.056557655334473,False,Failed to parse JSON response,data/test_files/logs_config/email_server_crypto.conf,0,0,0,1760156038.7016218,
enterprise_banking_pki_configuration,,,,False,False,0,0,61.82075333595276,False,,,0,0,0,0,Ollama API Error for qwen3:8b: Empty response from qwen3:8b after retry
financial_payment_gateway,ollama,qwen3:8b,logs_config,False,True,0.0,0,17.025301933288574,True,NO DETECTED VULNERABLE CRYPTOGRAPHIC ELEMENTS,data/test_files/logs_config/financial_payment_gateway.conf,0,0,0,1760156117.5487585,
healthcare_ehr_system,ollama,qwen3:8b,logs_config,True,True,0.95,8,27.809476375579834,True,"Detected vulnerable algorithms: RSA (certificates), DSA (legacy ciphers), symmetric BlockCipher-128. SSL/TLS uses TLS 1.2 and DSA. Legacy protocols include deprecated algorithms. Korean algorithms not detected.",data/test_files/logs_config/healthcare_ehr_system.yaml,0,0,0,1760156145.3585806,
iot_device_firmware_config,,,,False,False,0,0,62.21346354484558,False,,,0,0,0,0,Ollama API Error for qwen3:8b: Empty response from qwen3:8b after retry
korean_crypto_library_config,ollama,qwen3:8b,logs_config,False,False,0.0,0,30.037949323654175,False,Failed to parse JSON response,data/test_files/logs_config/korean_crypto_library_config.ini,0,0,0,1760156237.6112816,
military_secure_comms,ollama,qwen3:8b,logs_config,True,True,0.0,0,24.397887706756592,True,NO DETECTED VULNERABLE ALGORITHMS,data/test_files/logs_config/military_secure_comms.conf,0,0,0,1760156262.0095234,
mobile_app_security_audit,,,,False,False,0,0,65.45359492301941,False,,,0,0,0,0,Ollama API Error for qwen3:8b: Empty response from qwen3:8b after retry
nginx_mixed_security_gateway,,,,False,False,0,0,64.38967394828796,False,,,0,0,0,0,Ollama API Error for qwen3:8b: Empty response from qwen3:8b after retry
quantum_safe_migration_plan,,,,False,False,0,0,62.31708216667175,False,,,0,0,0,0,Ollama API Error for qwen3:8b: Empty response from qwen3:8b after retry
security_scanner_findings,ollama,qwen3:8b,logs_config,True,True,0.95,8,27.828402757644653,True,"Detected vulnerable algorithms: RSA 1024-bit, ECC P-192, StreamCipher-SHA, Hash-160 HMAC, Hash128. Log entries indicate quantum-vulnerable operations and legacy protocols.",data/test_files/logs_config/security_scanner_findings.log,0,0,0,1760156481.9998536,
ssh_server_hardened,ollama,qwen3:8b,logs_config,True,True,0.85,2,26.92732286453247,True,"RSA certificate configurations detected in host keys. Elliptic curve (Curve25519) used for key exchange. No evidence of discrete logarithm algorithms (DSA/DH/ElGamal), Korean algorithms, or quantum-vulnerable symmetric ciphers. SSL/TLS protocols and cryptographic libraries show no vulnerable configurations.",data/test_files/logs_config/ssh_server_hardened.conf,0,0,0,1760156508.9277875,
ssl_legacy_banking_configuration,ollama,qwen3:8b,logs_config,False,True,0.85,6,21.301953554153442,True,"Detected RSA 1024-bit keys, DH 1024-bit parameters, Triple DES (CBC3-SHA) ciphers, and SHA-1 signatures. SSL/TLS configuration includes deprecated protocols and vulnerable ciphers. No evidence of quantum-resistant algorithms or migration logs.",data/test_files/logs_config/ssl_legacy_banking_configuration.conf,0,0,0,1760156530.2304938,
telecom_5g_network,ollama,qwen3:8b,logs_config,False,False,0.0,0,30.00236964225769,False,Failed to parse JSON response,data/test_files/logs_config/telecom_5g_network.conf,0,0,0,1760156560.233131,
tls_cipher_negotiation_warnings,ollama,qwen3:8b,logs_config,False,False,0.0,0,29.8245370388031,False,Failed to parse JSON response,data/test_files/logs_config/tls_cipher_negotiation_warnings.log,0,0,0,1760156590.0578725,
vpn_server_runtime,ollama,qwen3:8b,logs_config,True,True,0.85,3,26.127875804901123,True,Detected Diffie-Hellman configurations (discrete logarithm algorithm) and TLS cipher suites using Diffie-Hellman Ephemeral. No explicit evidence for other algorithms.,data/test_files/logs_config/vpn_server_runtime.log,0,0,0,1760156616.1860626,
AdvancedComputationalFramework,ollama,codellama:7b,source_code,False,False,0.0,0,8.821737289428711,False,Failed to parse JSON response,data/test_files/source_code/AdvancedComputationalFramework.rb,0,0,0,1760156625.0080585,
AdvancedCryptographicOrchestrator,ollama,codellama:7b,source_code,False,False,0.0,0,19.88870596885681,False,Failed to parse JSON response,data/test_files/source_code/AdvancedCryptographicOrchestrator.java,0,0,0,1760156644.8970358,
AdvancedMathematicalFramework,ollama,codellama:7b,source_code,False,False,0.0,0,8.409936666488647,False,Failed to parse JSON response,data/test_files/source_code/AdvancedMathematicalFramework.rs,0,0,0,1760156653.3075187,
AutomotiveSecurityUnit,ollama,codellama:7b,source_code,False,False,0.0,0,7.901683807373047,False,Failed to parse JSON response,data/test_files/source_code/AutomotiveSecurityUnit.cpp,0,0,0,1760156661.209528,
BankingSecurityModule,ollama,codellama:7b,source_code,False,False,0.0,0,7.38104248046875,False,Failed to parse JSON response,data/test_files/source_code/BankingSecurityModule.java,0,0,0,1760156668.59079,
BlockchainCryptographyEngine,ollama,codellama:7b,source_code,False,False,0.0,0,8.126197576522827,False,Failed to parse JSON response,data/test_files/source_code/BlockchainCryptographyEngine.java,0,0,0,1760156676.7171688,
CorporateSecurityOrchestrator,ollama,codellama:7b,source_code,False,False,0.0,0,12.239103078842163,False,Failed to parse JSON response,data/test_files/source_code/CorporateSecurityOrchestrator.py,0,0,0,1760156688.9565399,
CorporateVPNManager,ollama,codellama:7b,source_code,False,False,0.0,0,7.336927890777588,False,Failed to parse JSON response,data/test_files/source_code/CorporateVPNManager.java,0,0,0,1760156696.2936952,
DigitalCertificateValidator,ollama,codellama:7b,source_code,False,False,0.0,0,7.671994924545288,False,Failed to parse JSON response,data/test_files/source_code/DigitalCertificateValidator.java,0,0,0,1760156703.9659054,
DistributedComputationEngine,ollama,codellama:7b,source_code,False,False,0.0,0,8.736320972442627,False,Failed to parse JSON response,data/test_files/source_code/DistributedComputationEngine.py,0,0,0,1760156712.702416,
DistributedComputeManager,ollama,codellama:7b,source_code,False,False,0.0,0,6.766307353973389,False,Failed to parse JSON response,data/test_files/source_code/DistributedComputeManager.js,0,0,0,1760156719.468943,
EnterpriseDataSecurityFramework,ollama,codellama:7b,source_code,False,False,0.0,0,6.105097532272339,False,Failed to parse JSON response,data/test_files/source_code/EnterpriseDataSecurityFramework.c,0,0,0,1760156725.5744147,
EnterpriseSecurityGateway,ollama,codellama:7b,source_code,False,False,0.0,0,7.530520677566528,False,Failed to parse JSON response,data/test_files/source_code/EnterpriseSecurityGateway.java,0,0,0,1760156733.1051414,
HardwareSecurity,ollama,codellama:7b,source_code,False,False,0.0,0,1.7599670886993408,False,Failed to parse JSON response,data/test_files/source_code/HardwareSecurity.java,0,0,0,1760156734.865311,
IoTDeviceSecurityController,ollama,codellama:7b,source_code,False,False,0.0,0,8.984257221221924,False,Failed to parse JSON response,data/test_files/source_code/IoTDeviceSecurityController.go,0,0,0,1760156743.849981,
LegacyPKISystem,ollama,codellama:7b,source_code,False,False,0.0,0,5.673388242721558,False,Failed to parse JSON response,data/test_files/source_code/LegacyPKISystem.java,0,0,0,1760156749.523592,
MathematicalTransformEngine,ollama,codellama:7b,source_code,False,False,0.0,0,15.090331315994263,False,Failed to parse JSON response,data/test_files/source_code/MathematicalTransformEngine.java,0,0,0,1760156764.6141365,
MediaStreamProtection,ollama,codellama:7b,source_code,False,False,0.0,0,7.461932897567749,False,Failed to parse JSON response,data/test_files/source_code/MediaStreamProtection.java,0,0,0,1760156772.076277,
QuantumResistantMessaging,ollama,codellama:7b,source_code,False,False,0.0,0,6.629441976547241,False,Failed to parse JSON response,data/test_files/source_code/QuantumResistantMessaging.java,0,0,0,1760156778.7059119,
QuantumSafeTransitionManager,ollama,codellama:7b,source_code,False,False,0.0,0,21.081002235412598,False,Failed to parse JSON response,data/test_files/source_code/QuantumSafeTransitionManager.cpp,0,0,0,1760156799.7873201,
SecureChatApplication,ollama,codellama:7b,source_code,False,False,0.0,0,3.798227310180664,False,Failed to parse JSON response,data/test_files/source_code/SecureChatApplication.java,0,0,0,1760156803.5858548,
SecureCloudStorage,ollama,codellama:7b,source_code,False,False,0.0,0,9.642715215682983,False,Failed to parse JSON response,data/test_files/source_code/SecureCloudStorage.java,0,0,0,1760156813.2287924,
SecureTransactionProcessor,ollama,codellama:7b,source_code,False,False,0.0,0,6.839977264404297,False,Failed to parse JSON response,data/test_files/source_code/SecureTransactionProcessor.go,0,0,0,1760156820.069151,
StealthCryptographicLibrary,ollama,codellama:7b,source_code,False,False,0.0,0,10.108160972595215,False,Failed to parse JSON response,data/test_files/source_code/StealthCryptographicLibrary.py,0,0,0,1760156830.1775236,
TelecommunicationsSecurityHub,ollama,codellama:7b,source_code,False,False,0.0,0,7.243558406829834,False,Failed to parse JSON response,data/test_files/source_code/TelecommunicationsSecurityHub.java,0,0,0,1760156837.4212792,
a5_trivium_stream_ciphers,ollama,codellama:7b,source_code,False,False,0.0,0,7.1171183586120605,False,Failed to parse JSON response,data/test_files/source_code/a5_trivium_stream_ciphers.py,0,0,0,1760156844.5385711,
aes_advanced_encryption,ollama,codellama:7b,source_code,False,False,0.0,0,18.115447282791138,False,Failed to parse JSON response,data/test_files/source_code/aes_advanced_encryption.java,0,0,0,1760156862.6542237,
aria_korean_block_cipher,ollama,codellama:7b,source_code,False,False,0.0,0,8.303236484527588,False,Failed to parse JSON response,data/test_files/source_code/aria_korean_block_cipher.py,0,0,0,1760156870.9576685,
aria_sha256_ecdsa_government,ollama,codellama:7b,source_code,False,False,0.0,0,20.342224597930908,False,Failed to parse JSON response,data/test_files/source_code/aria_sha256_ecdsa_government.py,0,0,0,1760156891.3000848,
blowfish_symmetric_encryption,ollama,codellama:7b,source_code,False,False,0.0,0,2.365466833114624,False,Failed to parse JSON response,data/test_files/source_code/blowfish_symmetric_encryption.c,0,0,0,1760156893.6657841,
camellia_block_cipher,ollama,codellama:7b,source_code,False,True,0.5,0,8.206540584564209,True,No evidence of vulnerable cryptographic algorithms detected.,data/test_files/source_code/camellia_block_cipher.c,0,0,0,1760156901.8729417,
cast_feistel_cipher,ollama,codellama:7b,source_code,False,False,0.0,0,20.7368004322052,False,Failed to parse JSON response,data/test_files/source_code/cast_feistel_cipher.c,0,0,0,1760156922.6099248,
chacha20_poly1305_aead,ollama,codellama:7b,source_code,False,False,0.0,0,7.823063135147095,False,Failed to parse JSON response,data/test_files/source_code/chacha20_poly1305_aead.java,0,0,0,1760156930.433222,
cloud_security_orchestrator,ollama,codellama:7b,source_code,False,False,0.0,0,4.6250317096710205,False,Failed to parse JSON response,data/test_files/source_code/cloud_security_orchestrator.py,0,0,0,1760156935.0584667,
database_encryption_engine,ollama,codellama:7b,source_code,False,False,0.0,0,8.491671562194824,False,Failed to parse JSON response,data/test_files/source_code/database_encryption_engine.c,0,0,0,1760156943.5503538,
diffie_hellman_key_exchange,ollama,codellama:7b,source_code,False,False,0.0,0,7.475955963134766,False,Failed to parse JSON response,data/test_files/source_code/diffie_hellman_key_exchange.java,0,0,0,1760156951.0264945,
digital_identity_platform,ollama,codellama:7b,source_code,False,False,0.0,0,10.091937780380249,False,Failed to parse JSON response,data/test_files/source_code/digital_identity_platform.js,0,0,0,1760156961.1186383,
elgamal_diffie_hellman_pki,ollama,codellama:7b,source_code,False,False,0.0,0,6.839033603668213,False,Failed to parse JSON response,data/test_files/source_code/elgamal_diffie_hellman_pki.py,0,0,0,1760156967.95786,
elliptic_curve_cryptography,ollama,codellama:7b,source_code,False,False,0.0,0,9.912808895111084,False,Failed to parse JSON response,data/test_files/source_code/elliptic_curve_cryptography.java,0,0,0,1760156977.8708675,
financial_risk_analyzer,ollama,codellama:7b,source_code,False,False,0.0,0,20.571815967559814,False,Failed to parse JSON response,data/test_files/source_code/financial_risk_analyzer.py,0,0,0,1760156998.4429035,
financial_transaction_processor,ollama,codellama:7b,source_code,False,False,0.0,0,22.99832773208618,False,Failed to parse JSON response,data/test_files/source_code/financial_transaction_processor.c,0,0,0,1760157021.441539,
financial_transaction_security,ollama,codellama:7b,source_code,False,False,0.0,0,18.42660117149353,False,Failed to parse JSON response,data/test_files/source_code/financial_transaction_security.c,0,0,0,1760157039.8684478,
government_document_signer,ollama,codellama:7b,source_code,False,False,0.0,0,3.2314414978027344,False,Failed to parse JSON response,data/test_files/source_code/government_document_signer.c,0,0,0,1760157043.100334,
idea_international_encryption,ollama,codellama:7b,source_code,False,False,0.0,0,10.165266513824463,False,Failed to parse JSON response,data/test_files/source_code/idea_international_encryption.java,0,0,0,1760157053.2658706,
iot_device_security,ollama,codellama:7b,source_code,False,False,0.0,0,18.490190982818604,False,Failed to parse JSON response,data/test_files/source_code/iot_device_security.c,0,0,0,1760157071.7563837,
lattice_isogeny_postquantum,ollama,codellama:7b,source_code,False,False,0.0,0,8.936331510543823,False,Failed to parse JSON response,data/test_files/source_code/lattice_isogeny_postquantum.py,0,0,0,1760157080.693022,
legacy_authentication_system,ollama,codellama:7b,source_code,False,False,0.0,0,9.383434772491455,False,Failed to parse JSON response,data/test_files/source_code/legacy_authentication_system.c,0,0,0,1760157090.0767274,
md5_sha1_weak_hash,ollama,codellama:7b,source_code,False,False,0.0,0,22.597761869430542,False,Failed to parse JSON response,data/test_files/source_code/md5_sha1_weak_hash.py,0,0,0,1760157112.6748338,
medical_device_encryption,ollama,codellama:7b,source_code,True,True,0.0,0,8.15511679649353,False,No vulnerable algorithms detected.,data/test_files/source_code/medical_device_encryption.rs,0,0,0,1760157120.8304942,
military_communication_system,ollama,codellama:7b,source_code,False,False,0.0,0,12.258309841156006,False,Failed to parse JSON response,data/test_files/source_code/military_communication_system.c,0,0,0,1760157133.0890512,
mobile_secure_messenger,ollama,codellama:7b,source_code,False,False,0.0,0,9.203472137451172,False,Failed to parse JSON response,data/test_files/source_code/mobile_secure_messenger.c,0,0,0,1760157142.292804,
network_infrastructure_monitor,ollama,codellama:7b,source_code,False,False,0.0,0,16.39903998374939,False,Failed to parse JSON response,data/test_files/source_code/network_infrastructure_monitor.cpp,0,0,0,1760157158.6920674,
ntru_lattice_encryption,ollama,codellama:7b,source_code,False,False,0.0,0,7.697137832641602,False,Failed to parse JSON response,data/test_files/source_code/ntru_lattice_encryption.java,0,0,0,1760157166.3893878,
openssl_des_enc,ollama,codellama:7b,source_code,False,False,0.0,0,5.584275007247925,False,Failed to parse JSON response,data/test_files/source_code/openssl_des_enc.c,0,0,0,1760157171.9740107,
quantum_resistant_messenger,ollama,codellama:7b,source_code,True,True,0.8,4,9.834492683410645,False,"The source code contains several potential vulnerabilities related to cryptography, including the use of RSA and AES. However, there is no clear evidence of other vulnerabilities.",data/test_files/source_code/quantum_resistant_messenger.py,0,0,0,1760157181.8088884,
rc4_stream_generator,ollama,codellama:7b,source_code,False,False,0.0,0,7.5642242431640625,False,Failed to parse JSON response,data/test_files/source_code/rc4_stream_generator.c,0,0,0,1760157189.3734877,
rsa_gen,ollama,codellama:7b,source_code,False,False,0.0,0,6.257385015487671,False,Failed to parse JSON response,data/test_files/source_code/rsa_gen.c,0,0,0,1760157195.6311295,
rsa_modular_exponentiation,ollama,codellama:7b,source_code,False,False,0.0,0,6.869066476821899,False,Failed to parse JSON response,data/test_files/source_code/rsa_modular_exponentiation.py,0,0,0,1760157202.500364,
rsa_public_key_system,ollama,codellama:7b,source_code,False,False,0.0,0,6.669597864151001,False,Failed to parse JSON response,data/test_files/source_code/rsa_public_key_system.java,0,0,0,1760157209.1701376,
salsa20_stream_cipher,ollama,codellama:7b,source_code,False,False,0.0,0,4.9409472942352295,False,Failed to parse JSON response,data/test_files/source_code/salsa20_stream_cipher.c,0,0,0,1760157214.111263,
secure_messaging_protocol,ollama,codellama:7b,source_code,False,False,0.0,0,9.221783876419067,False,Failed to parse JSON response,data/test_files/source_code/secure_messaging_protocol.rb,0,0,0,1760157223.3332477,
secure_video_streaming,ollama,codellama:7b,source_code,False,False,0.0,0,8.163208246231079,False,Failed to parse JSON response,data/test_files/source_code/secure_video_streaming.c,0,0,0,1760157231.496647,
seed_aes_hybrid_banking,ollama,codellama:7b,source_code,False,False,0.0,0,13.667993307113647,False,Failed to parse JSON response,data/test_files/source_code/seed_aes_hybrid_banking.py,0,0,0,1760157245.1648376,
seed_stream_cipher,ollama,codellama:7b,source_code,False,False,0.0,0,2.124533176422119,False,Failed to parse JSON response,data/test_files/source_code/seed_stream_cipher.py,0,0,0,1760157247.2895937,
serpent_substitution_network,ollama,codellama:7b,source_code,False,False,0.0,0,19.47597050666809,False,Failed to parse JSON response,data/test_files/source_code/serpent_substitution_network.c,0,0,0,1760157266.7658055,
sha1_rsa_legacy_documents,ollama,codellama:7b,source_code,False,False,0.0,0,3.764819860458374,False,Failed to parse JSON response,data/test_files/source_code/sha1_rsa_legacy_documents.py,0,0,0,1760157270.5308151,
skipjack_government_cipher,ollama,codellama:7b,source_code,False,False,0.0,0,1.9389317035675049,False,Failed to parse JSON response,data/test_files/source_code/skipjack_government_cipher.c,0,0,0,1760157272.47001,
smart_card_security,ollama,codellama:7b,source_code,False,False,0.0,0,7.789400100708008,False,Failed to parse JSON response,data/test_files/source_code/smart_card_security.c,0,0,0,1760157280.2596142,
tiger_hash_function,ollama,codellama:7b,source_code,False,False,0.0,0,9.615171432495117,False,Failed to parse JSON response,data/test_files/source_code/tiger_hash_function.c,0,0,0,1760157289.8750372,
twofish_advanced_encryption,ollama,codellama:7b,source_code,False,True,0.5,1,8.547290086746216,True,Detected RC4 vulnerability in keystream generation using a similar algorithm.,data/test_files/source_code/twofish_advanced_encryption.c,0,0,0,1760157298.4227476,
whirlpool_hash_digest,ollama,codellama:7b,source_code,False,False,0.0,0,8.822638273239136,False,Failed to parse JSON response,data/test_files/source_code/whirlpool_hash_digest.c,0,0,0,1760157307.2458465,
wireless_network_encryption,ollama,codellama:7b,source_code,False,False,0.0,0,8.270089149475098,False,Failed to parse JSON response,data/test_files/source_code/wireless_network_encryption.c,0,0,0,1760157315.516147,
adaptive_multi_tenant_crypto_orchestrator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,5.845557928085327,False,Failed to parse JSON response,data/test_files/assembly_binary/adaptive_multi_tenant_crypto_orchestrator.s,0,0,0,1760157321.3620439,
advanced_block_standard_operations,ollama,codellama:7b,assembly_binary,True,True,0.8,4,10.376065492630005,False,"The provided assembly binary file contains several vulnerabilities related to cryptography, including RSA modular exponentiation and large integer arithmetic patterns, DSA discrete logarithm computation signatures, DES symmetric cipher patterns, and BigInteger big integer libraries and modular arithmetic operations.",data/test_files/assembly_binary/advanced_block_standard_operations.s,0,0,0,1760157331.738468,
aes_key_expansion_module,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.296406984329224,False,Failed to parse JSON response,data/test_files/assembly_binary/aes_key_expansion_module.s,0,0,0,1760157339.0350723,
aria_encryption_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,8.983888387680054,False,Failed to parse JSON response,data/test_files/assembly_binary/aria_encryption_engine.s,0,0,0,1760157348.0191817,
automotive_ecu_cryptographic_unit,ollama,codellama:7b,assembly_binary,False,False,0.0,0,8.10072135925293,False,Failed to parse JSON response,data/test_files/assembly_binary/automotive_ecu_cryptographic_unit.s,0,0,0,1760157356.1200976,
banking_transaction_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,19.81217932701111,False,Failed to parse JSON response,data/test_files/assembly_binary/banking_transaction_processor.s,0,0,0,1760157375.932631,
biometric_authentication_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,9.243839502334595,False,Failed to parse JSON response,data/test_files/assembly_binary/biometric_authentication_engine.s,0,0,0,1760157385.1768537,
blake2b_hash_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.163509368896484,False,Failed to parse JSON response,data/test_files/assembly_binary/blake2b_hash_engine.s,0,0,0,1760157392.340572,
block_cipher_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,2.089787006378174,False,Failed to parse JSON response,data/test_files/assembly_binary/block_cipher_operations.s,0,0,0,1760157394.4305222,
blockchain_consensus_validator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,14.012953042984009,False,Failed to parse JSON response,data/test_files/assembly_binary/blockchain_consensus_validator.s,0,0,0,1760157408.443782,
chacha20_stream_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,6.55631685256958,False,Failed to parse JSON response,data/test_files/assembly_binary/chacha20_stream_processor.s,0,0,0,1760157415.0004177,
cloud_storage_encryption_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,10.15737533569336,False,Failed to parse JSON response,data/test_files/assembly_binary/cloud_storage_encryption_processor.s,0,0,0,1760157425.1579862,
crypto_trading_platform_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.693073511123657,False,Failed to parse JSON response,data/test_files/assembly_binary/crypto_trading_platform_engine.s,0,0,0,1760157432.8512397,
cryptographic_wallet_manager,ollama,codellama:7b,assembly_binary,False,False,0.0,0,2.754673480987549,False,Failed to parse JSON response,data/test_files/assembly_binary/cryptographic_wallet_manager.s,0,0,0,1760157435.6060634,
diffie_hellman_key_exchange,ollama,codellama:7b,assembly_binary,False,False,0.0,0,6.596993923187256,False,Failed to parse JSON response,data/test_files/assembly_binary/diffie_hellman_key_exchange.s,0,0,0,1760157442.20334,
digital_signature_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,10.074363946914673,False,Failed to parse JSON response,data/test_files/assembly_binary/digital_signature_processor.s,0,0,0,1760157452.27811,
distributed_blockchain_consensus_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,10.371986865997314,False,Failed to parse JSON response,data/test_files/assembly_binary/distributed_blockchain_consensus_engine.s,0,0,0,1760157462.6502647,
dsa_signature_verification,ollama,codellama:7b,assembly_binary,False,False,0.0,0,6.259387731552124,False,Failed to parse JSON response,data/test_files/assembly_binary/dsa_signature_verification.s,0,0,0,1760157468.9098222,
elliptic_curve_point_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,17.36257004737854,False,Failed to parse JSON response,data/test_files/assembly_binary/elliptic_curve_point_operations.s,0,0,0,1760157486.2726195,
elliptic_curve_scalar_multiplication,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.401195287704468,False,Failed to parse JSON response,data/test_files/assembly_binary/elliptic_curve_scalar_multiplication.s,0,0,0,1760157493.6740437,
elliptic_mathematical_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,23.159563779830933,False,Failed to parse JSON response,data/test_files/assembly_binary/elliptic_mathematical_operations.s,0,0,0,1760157516.8337815,
ellipticsignature_securehashalgo1_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,5.969969987869263,False,Failed to parse JSON response,data/test_files/assembly_binary/ellipticsignature_securehashalgo1_operations.s,0,0,0,1760157522.8039548,
embedded_authentication_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,20.731974124908447,False,Failed to parse JSON response,data/test_files/assembly_binary/embedded_authentication_processor.s,0,0,0,1760157543.5361717,
embedded_iot_security_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,3.6333682537078857,False,Failed to parse JSON response,data/test_files/assembly_binary/embedded_iot_security_processor.s,0,0,0,1760157547.169797,
enterprise_data_protection_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.539701700210571,False,Failed to parse JSON response,data/test_files/assembly_binary/enterprise_data_protection_engine.s,0,0,0,1760157554.70974,
feistel_network_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,2.4280829429626465,False,Failed to parse JSON response,data/test_files/assembly_binary/feistel_network_operations.s,0,0,0,1760157557.1380434,
financial_cryptographic_accelerator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,1.6470067501068115,False,Failed to parse JSON response,data/test_files/assembly_binary/financial_cryptographic_accelerator.s,0,0,0,1760157558.785258,
government_classified_system_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,10.298887491226196,False,Failed to parse JSON response,data/test_files/assembly_binary/government_classified_system_processor.s,0,0,0,1760157569.084316,
hash_digest_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,8.264867544174194,False,Failed to parse JSON response,data/test_files/assembly_binary/hash_digest_operations.s,0,0,0,1760157577.3493903,
hight_lightweight_cipher,ollama,codellama:7b,assembly_binary,False,False,0.0,0,10.77897047996521,False,Failed to parse JSON response,data/test_files/assembly_binary/hight_lightweight_cipher.s,0,0,0,1760157588.1285164,
hybrid_banking_security_system,ollama,codellama:7b,assembly_binary,False,False,0.0,0,3.7489817142486572,False,Failed to parse JSON response,data/test_files/assembly_binary/hybrid_banking_security_system.s,0,0,0,1760157591.8777633,
industrial_control_security,ollama,codellama:7b,assembly_binary,False,False,0.0,0,10.127108335494995,False,Failed to parse JSON response,data/test_files/assembly_binary/industrial_control_security.s,0,0,0,1760157602.0050828,
industrial_security_coprocessor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,8.263772010803223,False,Failed to parse JSON response,data/test_files/assembly_binary/industrial_security_coprocessor.s,0,0,0,1760157610.2690427,
kcdsa_signature_generator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.782020807266235,False,Failed to parse JSON response,data/test_files/assembly_binary/kcdsa_signature_generator.s,0,0,0,1760157618.0513203,
keyexchange_protocol_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,6.548981666564941,False,Failed to parse JSON response,data/test_files/assembly_binary/keyexchange_protocol_operations.s,0,0,0,1760157624.6005955,
korean_blockcipher_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,5.4112372398376465,False,Failed to parse JSON response,data/test_files/assembly_binary/korean_blockcipher_operations.s,0,0,0,1760157630.0120778,
lea_block_cipher_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,6.1524128913879395,False,Failed to parse JSON response,data/test_files/assembly_binary/lea_block_cipher_engine.s,0,0,0,1760157636.1648872,
legacy_hash_computation,ollama,codellama:7b,assembly_binary,False,False,0.0,0,23.285899877548218,False,Failed to parse JSON response,data/test_files/assembly_binary/legacy_hash_computation.s,0,0,0,1760157659.4510036,
legacy_pki_certificate_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,12.65373420715332,False,Failed to parse JSON response,data/test_files/assembly_binary/legacy_pki_certificate_processor.s,0,0,0,1760157672.1049106,
md5_sha1_hash_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,6.514525413513184,False,Failed to parse JSON response,data/test_files/assembly_binary/md5_sha1_hash_processor.s,0,0,0,1760157678.6196768,
medical_device_security_controller,ollama,codellama:7b,assembly_binary,False,False,0.0,0,20.333885192871094,False,Failed to parse JSON response,data/test_files/assembly_binary/medical_device_security_controller.s,0,0,0,1760157698.95397,
message_digest_128bit_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,5.083148002624512,False,Failed to parse JSON response,data/test_files/assembly_binary/message_digest_128bit_operations.s,0,0,0,1760157704.0373418,
mobile_cipher_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.5569703578948975,False,Failed to parse JSON response,data/test_files/assembly_binary/mobile_cipher_engine.s,0,0,0,1760157711.594554,
mobile_payment_security_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,19.829341173171997,False,Failed to parse JSON response,data/test_files/assembly_binary/mobile_payment_security_engine.s,0,0,0,1760157731.42416,
network_security_gateway,ollama,codellama:7b,assembly_binary,False,False,0.0,0,13.78651213645935,False,Failed to parse JSON response,data/test_files/assembly_binary/network_security_gateway.s,0,0,0,1760157745.2108471,
neural_network_inference_accelerator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.463461399078369,False,Failed to parse JSON response,data/test_files/assembly_binary/neural_network_inference_accelerator.s,0,0,0,1760157752.6744702,
ntru_polynomial_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,6.7494590282440186,False,Failed to parse JSON response,data/test_files/assembly_binary/ntru_polynomial_processor.s,0,0,0,1760157759.4241712,
obfuscated_crypto_library_dispatcher,ollama,codellama:7b,assembly_binary,False,False,0.0,0,5.991300821304321,False,Failed to parse JSON response,data/test_files/assembly_binary/obfuscated_crypto_library_dispatcher.s,0,0,0,1760157765.4157302,
openssl_des_enc,ollama,codellama:7b,assembly_binary,False,False,0.0,0,12.881996631622314,False,Failed to parse JSON response,data/test_files/assembly_binary/openssl_des_enc.asm,0,0,0,1760157778.297919,
openssl_des_enc,ollama,codellama:7b,assembly_binary,False,False,0.0,0,10.510752201080322,False,Failed to parse JSON response,data/test_files/assembly_binary/openssl_des_enc.bin,0,0,0,1760157788.8093865,
poly1305_authenticator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.694886207580566,False,Failed to parse JSON response,data/test_files/assembly_binary/poly1305_authenticator.s,0,0,0,1760157796.5044532,
polymorphic_malware_crypto_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,6.4661993980407715,False,Failed to parse JSON response,data/test_files/assembly_binary/polymorphic_malware_crypto_engine.s,0,0,0,1760157802.9708836,
polynomial_field_arithmetic_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,1.697291612625122,False,Failed to parse JSON response,data/test_files/assembly_binary/polynomial_field_arithmetic_engine.s,0,0,0,1760157804.6683931,
postquantum_multimodal_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,3.1786534786224365,False,Failed to parse JSON response,data/test_files/assembly_binary/postquantum_multimodal_operations.s,0,0,0,1760157807.8472524,
publickey_encryption_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.054506063461304,False,Failed to parse JSON response,data/test_files/assembly_binary/publickey_encryption_operations.s,0,0,0,1760157814.901982,
publickey_modular_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,5.040550708770752,False,Failed to parse JSON response,data/test_files/assembly_binary/publickey_modular_operations.s,0,0,0,1760157819.9427087,
publickeyalgo_messagedigest5_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,1.7276034355163574,False,Failed to parse JSON response,data/test_files/assembly_binary/publickeyalgo_messagedigest5_operations.s,0,0,0,1760157821.670528,
quantum_communication_relay,ollama,codellama:7b,assembly_binary,False,False,0.0,0,9.011947393417358,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_communication_relay.s,0,0,0,1760157830.6826665,
quantum_cryptanalysis_simulation,ollama,codellama:7b,assembly_binary,False,False,0.0,0,3.5291645526885986,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_cryptanalysis_simulation.s,0,0,0,1760157834.2121809,
quantum_migration_bridge_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,8.460376977920532,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_migration_bridge_processor.s,0,0,0,1760157842.6727867,
quantum_resistant_lattice_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,18.74766993522644,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_resistant_lattice_operations.s,0,0,0,1760157861.4208193,
quantum_resistant_migration_bridge,ollama,codellama:7b,assembly_binary,False,False,0.0,0,5.538640737533569,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_resistant_migration_bridge.s,0,0,0,1760157866.9596732,
quantum_safe_communicator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,8.34516191482544,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_safe_communicator.s,0,0,0,1760157875.305005,
rsa_key_generation_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,9.200246572494507,False,Failed to parse JSON response,data/test_files/assembly_binary/rsa_key_generation_engine.s,0,0,0,1760157884.5054233,
salsa20_stream_cipher,ollama,codellama:7b,assembly_binary,False,False,0.0,0,15.340364694595337,False,Failed to parse JSON response,data/test_files/assembly_binary/salsa20_stream_cipher.s,0,0,0,1760157899.8459942,
satellite_communication_security,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.600675582885742,False,Failed to parse JSON response,data/test_files/assembly_binary/satellite_communication_security.s,0,0,0,1760157907.4468253,
secure_boot_verification_processor,ollama,codellama:7b,assembly_binary,False,False,0.0,0,2.205796003341675,False,Failed to parse JSON response,data/test_files/assembly_binary/secure_boot_verification_processor.s,0,0,0,1760157909.6527796,
secure_communication_protocol,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.052031993865967,False,Failed to parse JSON response,data/test_files/assembly_binary/secure_communication_protocol.s,0,0,0,1760157916.7049901,
secure_hash_256bit_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,9.707166194915771,False,Failed to parse JSON response,data/test_files/assembly_binary/secure_hash_256bit_operations.s,0,0,0,1760157926.4123263,
secure_matrix_transformation_unit,ollama,codellama:7b,assembly_binary,False,False,0.0,0,10.048181772232056,False,Failed to parse JSON response,data/test_files/assembly_binary/secure_matrix_transformation_unit.s,0,0,0,1760157936.4607055,
siphash_prf_function,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.9406657218933105,False,Failed to parse JSON response,data/test_files/assembly_binary/siphash_prf_function.s,0,0,0,1760157944.4015415,
smart_card_authenticator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.379633188247681,False,Failed to parse JSON response,data/test_files/assembly_binary/smart_card_authenticator.s,0,0,0,1760157951.7814224,
smart_card_security_module,ollama,codellama:7b,assembly_binary,False,False,0.0,0,18.058952569961548,False,Failed to parse JSON response,data/test_files/assembly_binary/smart_card_security_module.s,0,0,0,1760157969.8407078,
sphincs_signature_scheme,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.538249254226685,False,Failed to parse JSON response,data/test_files/assembly_binary/sphincs_signature_scheme.s,0,0,0,1760157977.3793273,
steganographic_crypto_covert_channel,ollama,codellama:7b,assembly_binary,False,False,0.0,0,2.8766672611236572,False,Failed to parse JSON response,data/test_files/assembly_binary/steganographic_crypto_covert_channel.s,0,0,0,1760157980.2562,
stream_cipher_generator,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.229617595672607,False,Failed to parse JSON response,data/test_files/assembly_binary/stream_cipher_generator.s,0,0,0,1760157987.4860508,
stream_generator_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,5.3425352573394775,False,Failed to parse JSON response,data/test_files/assembly_binary/stream_generator_operations.s,0,0,0,1760157992.8287635,
stream_keygeneration_operations,ollama,codellama:7b,assembly_binary,False,False,0.0,0,4.197128772735596,False,Failed to parse JSON response,data/test_files/assembly_binary/stream_keygeneration_operations.s,0,0,0,1760157997.026045,
triple_des_encryption_module,ollama,codellama:7b,assembly_binary,False,False,0.0,0,13.213975429534912,False,Failed to parse JSON response,data/test_files/assembly_binary/triple_des_encryption_module.s,0,0,0,1760158010.2402525,
vpn_tunnel_encryption_engine,ollama,codellama:7b,assembly_binary,False,False,0.0,0,7.134469032287598,False,Failed to parse JSON response,data/test_files/assembly_binary/vpn_tunnel_encryption_engine.s,0,0,0,1760158017.3750265,
x25519_key_agreement,ollama,codellama:7b,assembly_binary,False,False,0.0,0,6.496368408203125,False,Failed to parse JSON response,data/test_files/assembly_binary/x25519_key_agreement.s,0,0,0,1760158023.8716094,
apache_legacy_ssl,ollama,codellama:7b,logs_config,False,False,0.0,0,6.244073867797852,False,Failed to parse JSON response,data/test_files/logs_config/apache_legacy_ssl.conf,0,0,0,1760158030.1160681,
automotive_v2x_system,ollama,codellama:7b,logs_config,False,False,0.0,0,3.742746353149414,False,Failed to parse JSON response,data/test_files/logs_config/automotive_v2x_system.yaml,0,0,0,1760158033.859477,
blockchain_node_security,ollama,codellama:7b,logs_config,False,False,0.0,0,3.4311091899871826,False,Failed to parse JSON response,data/test_files/logs_config/blockchain_node_security.conf,0,0,0,1760158037.2910285,
cloud_hsm_operations,ollama,codellama:7b,logs_config,False,False,0.0,0,1.815068006515503,False,Failed to parse JSON response,data/test_files/logs_config/cloud_hsm_operations.log,0,0,0,1760158039.106265,
cloud_storage_encryption,ollama,codellama:7b,logs_config,False,False,0.0,0,7.4032957553863525,False,Failed to parse JSON response,data/test_files/logs_config/cloud_storage_encryption.conf,0,0,0,1760158046.5097697,
cryptographic_operations_detailed,ollama,codellama:7b,logs_config,False,False,0.0,0,7.294103622436523,False,Failed to parse JSON response,data/test_files/logs_config/cryptographic_operations_detailed.log,0,0,0,1760158053.8040104,
database_encryption_setup,ollama,codellama:7b,logs_config,False,False,0.0,0,3.0276565551757812,False,Failed to parse JSON response,data/test_files/logs_config/database_encryption_setup.log,0,0,0,1760158056.831857,
email_server_crypto,ollama,codellama:7b,logs_config,False,False,0.0,0,23.31753659248352,False,Failed to parse JSON response,data/test_files/logs_config/email_server_crypto.conf,0,0,0,1760158080.1498227,
enterprise_banking_pki_configuration,ollama,codellama:7b,logs_config,False,False,0.0,0,7.580803394317627,False,Failed to parse JSON response,data/test_files/logs_config/enterprise_banking_pki_configuration.conf,0,0,0,1760158087.7312052,
financial_payment_gateway,ollama,codellama:7b,logs_config,False,False,0.0,0,3.314131498336792,False,Failed to parse JSON response,data/test_files/logs_config/financial_payment_gateway.conf,0,0,0,1760158091.0454805,
healthcare_ehr_system,ollama,codellama:7b,logs_config,False,False,0.0,0,13.562294960021973,False,Failed to parse JSON response,data/test_files/logs_config/healthcare_ehr_system.yaml,0,0,0,1760158104.607937,
iot_device_firmware_config,ollama,codellama:7b,logs_config,False,False,0.0,0,20.97224760055542,False,Failed to parse JSON response,data/test_files/logs_config/iot_device_firmware_config.yaml,0,0,0,1760158125.5810668,
korean_crypto_library_config,ollama,codellama:7b,logs_config,False,False,0.0,0,13.633388042449951,False,Failed to parse JSON response,data/test_files/logs_config/korean_crypto_library_config.ini,0,0,0,1760158139.2149212,
military_secure_comms,ollama,codellama:7b,logs_config,False,False,0.0,0,12.47843861579895,False,Failed to parse JSON response,data/test_files/logs_config/military_secure_comms.conf,0,0,0,1760158151.693584,
mobile_app_security_audit,ollama,codellama:7b,logs_config,False,False,0.0,0,23.273701429367065,False,Failed to parse JSON response,data/test_files/logs_config/mobile_app_security_audit.log,0,0,0,1760158174.9675484,
nginx_mixed_security_gateway,ollama,codellama:7b,logs_config,False,True,0.8,2,9.238683223724365,True,DETECTED: TLSv1.3 (Evidence: ssl_protocols TLSv1.3; line 20),data/test_files/logs_config/nginx_mixed_security_gateway.conf,0,0,0,1760158184.206804,
quantum_safe_migration_plan,ollama,codellama:7b,logs_config,True,True,0.8,4,11.01207184791565,False,"DETECTED: RSA (Evidence: import RSA from Crypto.PublicKey, line 5), DSA (Evidence: DSA.generate() call, line 12), AES (Evidence: Cipher.AES.new() call, line 23)",data/test_files/logs_config/quantum_safe_migration_plan.yaml,0,0,0,1760158195.2195876,
security_scanner_findings,ollama,codellama:7b,logs_config,False,False,0.0,0,10.806861639022827,False,Failed to parse JSON response,data/test_files/logs_config/security_scanner_findings.log,0,0,0,1760158206.0266535,
ssh_server_hardened,ollama,codellama:7b,logs_config,False,False,0.0,0,3.8774125576019287,False,Failed to parse JSON response,data/test_files/logs_config/ssh_server_hardened.conf,0,0,0,1760158209.904461,
ssl_legacy_banking_configuration,ollama,codellama:7b,logs_config,False,False,0.0,0,4.928212404251099,False,Failed to parse JSON response,data/test_files/logs_config/ssl_legacy_banking_configuration.conf,0,0,0,1760158214.833571,
telecom_5g_network,ollama,codellama:7b,logs_config,False,False,0.0,0,3.667438268661499,False,Failed to parse JSON response,data/test_files/logs_config/telecom_5g_network.conf,0,0,0,1760158218.5011976,
tls_cipher_negotiation_warnings,ollama,codellama:7b,logs_config,False,False,0.0,0,10.058075428009033,False,Failed to parse JSON response,data/test_files/logs_config/tls_cipher_negotiation_warnings.log,0,0,0,1760158228.5594735,
vpn_server_runtime,ollama,codellama:7b,logs_config,False,False,0.0,0,5.3154284954071045,False,Failed to parse JSON response,data/test_files/logs_config/vpn_server_runtime.log,0,0,0,1760158233.8750534,
AdvancedComputationalFramework,google,gemini-2.0-flash,source_code,True,True,0.8,4,4.0101611614227295,True,The code uses RSA with a fixed public exponent and potentially insecure random number generation. It also uses SHA-256. The RSA implementation is vulnerable due to the fixed exponent. The use of 'rand' in generate_large_prime is a potential vulnerability.,data/test_files/source_code/AdvancedComputationalFramework.rb,0,0,0,1760158237.8902225,
AdvancedCryptographicOrchestrator,google,gemini-2.0-flash,source_code,True,True,0.8,2,3.2703962326049805,True,"The code uses Elliptic Curve Cryptography (ECC) and PKCS#1 v1.5 padding, which are potentially vulnerable. No other vulnerable algorithms were explicitly detected.",data/test_files/source_code/AdvancedCryptographicOrchestrator.java,0,0,0,1760158242.1616,
AdvancedMathematicalFramework,google,gemini-2.0-flash,source_code,True,True,0.9,1,3.3910021781921387,True,SHA-256 hash function detected.,data/test_files/source_code/AdvancedMathematicalFramework.rs,0,0,0,1760158246.5537026,
AutomotiveSecurityUnit,google,gemini-2.0-flash,source_code,True,True,1.0,0,3.039485216140747,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/AutomotiveSecurityUnit.cpp,0,0,0,1760158250.5951145,
BankingSecurityModule,google,gemini-2.0-flash,source_code,True,True,0.7,1,3.0546751022338867,True,"The code uses java.security.SecureRandom for random number generation. A custom block cipher implementation is present, but without explicit algorithm identification, it's not possible to determine its vulnerability status.",data/test_files/source_code/BankingSecurityModule.java,0,0,0,1760158254.6511095,
BlockchainCryptographyEngine,google,gemini-2.0-flash,source_code,True,True,0.75,2,3.831592559814453,True,"The code implements Elliptic Curve Cryptography (ECC) using custom ECPoint class and point arithmetic functions. It also uses SecureRandom for key generation. The specific curve used (identified by CURVE_P, CURVE_A, CURVE_B, CURVE_N) needs further investigation to determine its security level and potential vulnerabilities. The hash function implementation appears to be a simplified version of SHA-256, but without explicit SHA-256 API calls, it's not definitively detectable as a vulnerable SHA-256 implementation.",data/test_files/source_code/BlockchainCryptographyEngine.java,0,0,0,1760158259.484661,
CorporateSecurityOrchestrator,google,gemini-2.0-flash,source_code,True,True,0.9,4,3.1445412635803223,True,"Detected ECC, SHA-256, padding, and secrets module usage. Further analysis is needed to determine if these implementations are vulnerable.",data/test_files/source_code/CorporateSecurityOrchestrator.py,0,0,0,1760158263.631049,
CorporateVPNManager,google,gemini-2.0-flash,source_code,True,True,0.75,4,3.854702949523926,True,"The code uses a custom Feistel cipher with a small block size and limited rounds, making it vulnerable. It also uses java.security.SecureRandom, which might not be suitable for high-security applications without proper seeding and management. The code also refers to a legacy cipher.",data/test_files/source_code/CorporateVPNManager.java,0,0,0,1760158268.486724,
DigitalCertificateValidator,google,gemini-2.0-flash,source_code,True,True,0.9,3,3.5743134021759033,True,"The code uses RSA with small primes and a fixed 1024-bit key size, making it vulnerable. It also uses SHA-1, which is a weak hash function.",data/test_files/source_code/DigitalCertificateValidator.java,0,0,0,1760158273.061795,
DistributedComputationEngine,google,gemini-2.0-flash,source_code,True,True,0.75,1,3.5258328914642334,True,"The code contains a digest algorithm implementation that resembles SHA-256, which, while not directly broken by Grover's algorithm, is considered a weaker hash function compared to SHA-3 and may be vulnerable to collision attacks with sufficient computational resources.",data/test_files/source_code/DistributedComputationEngine.py,0,0,0,1760158277.5891738,
DistributedComputeManager,google,gemini-2.0-flash,source_code,True,True,1.0,0,3.0525965690612793,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/DistributedComputeManager.js,0,0,0,1760158281.64401,
EnterpriseDataSecurityFramework,google,gemini-2.0-flash,source_code,True,True,0.9,2,3.9724156856536865,True,"RSA and ECC implementations are detected. The RSA key size is 2048 bits, which is vulnerable to quantum attacks. The code also includes elliptic curve point multiplication, indicating potential ECC usage.",data/test_files/source_code/EnterpriseDataSecurityFramework.c,0,0,0,1760158286.6188667,
EnterpriseSecurityGateway,google,gemini-2.0-flash,source_code,True,True,0.75,3,3.861039876937866,True,"RSA and ECC implementations are detected. A SecureRandom instance is used, but its secure usage cannot be guaranteed without further analysis. No specific symmetric ciphers or hash functions known to be vulnerable were detected.",data/test_files/source_code/EnterpriseSecurityGateway.java,0,0,0,1760158291.4814398,
HardwareSecurity,google,gemini-2.0-flash,source_code,False,True,0.7,2,3.134490728378296,True,"The code uses java.security.SecureRandom for random number generation and implements XOR encryption, which are considered insecure. The code also uses a custom hash function named DigestFunction160Hash, but its implementation is truncated, so it's impossible to determine its security.",data/test_files/source_code/HardwareSecurity.java,0,0,0,1760158295.6166031,
IoTDeviceSecurityController,google,gemini-2.0-flash,source_code,True,True,0.7,1,3.6308183670043945,True,"The code uses the `crypto/rand` package, which, while generally considered secure, might be vulnerable if not properly seeded or if its output is predictable in the specific context of the application. The custom `CompactCipherEngine` and `StreamProcessor` implementations are potential areas of concern, as their security properties are unknown and may be weak against known attacks. However, without further analysis of their design and implementation, it's impossible to definitively classify them as vulnerable.",data/test_files/source_code/IoTDeviceSecurityController.go,0,0,0,1760158300.248625,
LegacyPKISystem,google,gemini-2.0-flash,source_code,True,True,0.9,5,3.8199501037597656,True,"DSA and SHA-1 are detected. The DSA implementation uses a 1024-bit key size and simplified parameter generation, which are considered legacy and potentially vulnerable. SHA-1 is used as the hashing algorithm. java.security.SecureRandom is used, but the context suggests simplified parameter generation, which might lead to predictability if not properly seeded or used.",data/test_files/source_code/LegacyPKISystem.java,0,0,0,1760158305.069743,
MathematicalTransformEngine,google,gemini-2.0-flash,source_code,True,True,0.9,7,4.555438041687012,True,"The code uses RSA with a small public exponent, ECC with hardcoded P-256 parameters, AES with ECB and PKCS5Padding, SHA-256, and SecureRandom. RSA and ECC are vulnerable to quantum attacks. AES-ECB is generally discouraged. PKCS5Padding is generally considered safe.",data/test_files/source_code/MathematicalTransformEngine.java,0,0,0,1760158310.6263652,
MediaStreamProtection,google,gemini-2.0-flash,source_code,True,True,0.9,2,3.355599880218506,True,"The code contains an RC4 stream cipher implementation (StreamCipher class), which is vulnerable to Grover's algorithm and other known attacks. The MobileStreamCipher class implements A5/1, another vulnerable stream cipher.",data/test_files/source_code/MediaStreamProtection.java,0,0,0,1760158314.9836328,
QuantumResistantMessaging,google,gemini-2.0-flash,source_code,False,True,1.0,0,2.877589702606201,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/QuantumResistantMessaging.java,0,0,0,1760158318.8620872,
QuantumSafeTransitionManager,google,gemini-2.0-flash,source_code,True,True,0.75,7,4.910934209823608,True,"The code uses OpenSSL and implements a hybrid approach for migrating from quantum-vulnerable algorithms like RSA, ECC, and symmetric ciphers to quantum-resistant alternatives. It detects the usage of legacy algorithms based on modulus size, curve parameters, and block size. Algorithm names are obfuscated.",data/test_files/source_code/QuantumSafeTransitionManager.cpp,0,0,0,1760158324.774409,
SecureChatApplication,google,gemini-2.0-flash,source_code,False,True,0.75,1,3.2056703567504883,True,"The code uses java.security.SecureRandom for key and nonce generation. The code implements a custom stream cipher and message authentication, but no standard vulnerable algorithms like RSA, AES, MD5, SHA-1, or vulnerable padding schemes are explicitly used.",data/test_files/source_code/SecureChatApplication.java,0,0,0,1760158328.9812808,
SecureCloudStorage,google,gemini-2.0-flash,source_code,True,True,0.7,1,3.5331737995147705,True,"The code uses java.security.SecureRandom, which, depending on the implementation and seeding, might be vulnerable. The code also contains a custom block cipher implementation, which is generally discouraged and could contain vulnerabilities. No other vulnerable algorithms were detected.",data/test_files/source_code/SecureCloudStorage.java,0,0,0,1760158333.515255,
SecureTransactionProcessor,google,gemini-2.0-flash,source_code,True,True,0.75,2,3.2840590476989746,True,"SHA-256 and crypto/rand are detected. SHA-256 is not necessarily weak, but its usage should be reviewed in the context of post-quantum migration. The use of crypto/rand indicates a potential vulnerability if not used correctly for cryptographic key generation or other security-sensitive operations.",data/test_files/source_code/SecureTransactionProcessor.go,0,0,0,1760158337.8023233,
StealthCryptographicLibrary,google,gemini-2.0-flash,source_code,True,True,0.9,6,3.759742021560669,True,"The code uses RSA with OAEP padding, SECP256R1 elliptic curve cryptography, and SHA-256. It also uses the `secrets` module. The code is designed to obfuscate cryptographic operations.",data/test_files/source_code/StealthCryptographicLibrary.py,0,0,0,1760158342.5644224,
TelecommunicationsSecurityHub,google,gemini-2.0-flash,source_code,True,True,1.0,0,2.7534260749816895,True,No vulnerable algorithms detected.,data/test_files/source_code/TelecommunicationsSecurityHub.java,0,0,0,1760158346.3195384,
a5_trivium_stream_ciphers,google,gemini-2.0-flash,source_code,False,True,1.0,0,2.7313780784606934,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/a5_trivium_stream_ciphers.py,0,0,0,1760158350.0523155,
aes_advanced_encryption,google,gemini-2.0-flash,source_code,True,True,1.0,0,2.929398536682129,True,No vulnerable algorithms detected.,data/test_files/source_code/aes_advanced_encryption.java,0,0,0,1760158353.9826458,
aria_korean_block_cipher,google,gemini-2.0-flash,source_code,True,True,1.0,0,2.5813982486724854,True,No vulnerable algorithms detected.,data/test_files/source_code/aria_korean_block_cipher.py,0,0,0,1760158357.5648007,
aria_sha256_ecdsa_government,google,gemini-2.0-flash,source_code,True,True,1.0,0,3.0237553119659424,True,No vulnerable algorithms detected.,data/test_files/source_code/aria_sha256_ecdsa_government.py,0,0,0,1760158361.5896964,
blowfish_symmetric_encryption,google,gemini-2.0-flash,source_code,False,True,0.9,1,2.996410369873047,True,Detected FISH cipher implementation. Further analysis is needed to determine its security properties and potential vulnerabilities.,data/test_files/source_code/blowfish_symmetric_encryption.c,0,0,0,1760158365.58696,
camellia_block_cipher,google,gemini-2.0-flash,source_code,False,True,1.0,0,3.072251081466675,True,No vulnerable algorithms detected.,data/test_files/source_code/camellia_block_cipher.c,0,0,0,1760158369.6608887,
cast_feistel_cipher,google,gemini-2.0-flash,source_code,False,True,1.0,0,2.7544679641723633,True,No vulnerable algorithms detected.,data/test_files/source_code/cast_feistel_cipher.c,0,0,0,1760158373.4168844,
chacha20_poly1305_aead,google,gemini-2.0-flash,source_code,True,True,1.0,0,2.8741047382354736,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/chacha20_poly1305_aead.java,0,0,0,1760158377.2918465,
cloud_security_orchestrator,google,gemini-2.0-flash,source_code,True,True,0.9,3,3.8218765258789062,True,"Detected RSA key generation with a 2048-bit key size, SHA-256 usage, and secrets.token_bytes for random number generation. RSA-2048 is vulnerable to Shor's algorithm. SHA-256 is not considered weak but is included for completeness.",data/test_files/source_code/cloud_security_orchestrator.py,0,0,0,1760158382.114565,
database_encryption_engine,google,gemini-2.0-flash,source_code,True,True,1.0,0,2.808882236480713,True,No vulnerable algorithms detected.,data/test_files/source_code/database_encryption_engine.c,0,0,0,1760158385.9244192,
diffie_hellman_key_exchange,google,gemini-2.0-flash,source_code,True,True,0.7,3,3.85955548286438,True,"The code implements a Diffie-Hellman-like key exchange with hardcoded primes and a custom, likely insecure, key derivation function. These are vulnerable to classical attacks and not post-quantum secure.",data/test_files/source_code/diffie_hellman_key_exchange.java,0,0,0,1760158390.7867577,
digital_identity_platform,google,gemini-2.0-flash,source_code,True,True,0.9,1,3.4495503902435303,True,"SHA-256 hash function detected. While SHA-256 itself isn't considered 'weak' in the same category as MD5 or SHA-1, its security margin is reduced compared to SHA-3 alternatives in a post-quantum context. The code uses crypto.createHash('hash_256').",data/test_files/source_code/digital_identity_platform.js,0,0,0,1760158395.2375183,
elgamal_diffie_hellman_pki,google,gemini-2.0-flash,source_code,True,True,0.9,2,3.352595806121826,True,"Detected Diffie-Hellman key exchange with hardcoded prime and generator values, which is a vulnerability.",data/test_files/source_code/elgamal_diffie_hellman_pki.py,0,0,0,1760158399.5924397,
elliptic_curve_cryptography,google,gemini-2.0-flash,source_code,True,True,0.9,3,3.3863961696624756,True,The code implements Elliptic Curve Cryptography (ECC) using the ECPoint class and related functions. It also uses SHA-256 for hashing and java.security.SecureRandom for random number generation. The ECC implementation itself is vulnerable to quantum attacks.,data/test_files/source_code/elliptic_curve_cryptography.java,0,0,0,1760158403.981098,
financial_risk_analyzer,google,gemini-2.0-flash,source_code,True,True,0.9,4,3.14668869972229,True,"The code uses RSA for key generation, signing, and verification. It also uses SHA-256 for hashing and PKCS#1 v1.5 padding. secrets.randbits is used for random number generation.",data/test_files/source_code/financial_risk_analyzer.py,0,0,0,1760158408.1303847,
financial_transaction_processor,google,gemini-2.0-flash,source_code,True,True,0.75,1,3.128495216369629,True,"The code implements a custom block cipher, potentially a Korean domestic algorithm, as indicated by the 'korean_constants' and the mention of 'Korean encryption standard'. Further analysis is needed to identify the specific algorithm and assess its security.",data/test_files/source_code/financial_transaction_processor.c,0,0,0,1760158412.2606235,
financial_transaction_security,google,gemini-2.0-flash,source_code,True,True,1.0,0,2.718578577041626,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/financial_transaction_security.c,0,0,0,1760158415.981228,
government_document_signer,google,gemini-2.0-flash,source_code,True,True,0.75,3,3.7858057022094727,True,"The code implements ECC-based digital signatures with simplified point doubling and scalar multiplication. It also uses an insecure random number generator (srand with a fixed seed and rand()) for key generation, making it vulnerable. No other vulnerable algorithms were detected.",data/test_files/source_code/government_document_signer.c,0,0,0,1760158420.7683933,
idea_international_encryption,google,gemini-2.0-flash,source_code,False,True,1.0,0,3.224165439605713,True,No vulnerable algorithms detected.,data/test_files/source_code/idea_international_encryption.java,0,0,0,1760158424.9933627,
iot_device_security,google,gemini-2.0-flash,source_code,True,True,1.0,0,3.065162181854248,True,No vulnerable algorithms detected.,data/test_files/source_code/iot_device_security.c,0,0,0,1760158429.060367,
lattice_isogeny_postquantum,google,gemini-2.0-flash,source_code,True,True,0.75,1,3.36279034614563,True,"The code uses Python's `random` module for generating random numbers, which is not cryptographically secure and can be vulnerable. This is used in key generation and other cryptographic operations.",data/test_files/source_code/lattice_isogeny_postquantum.py,0,0,0,1760158433.425216,
legacy_authentication_system,google,gemini-2.0-flash,source_code,True,True,0.9,4,3.317020893096924,True,"The code uses RSA with a vulnerable key generation and a SHA-1 like hash algorithm, both of which are vulnerable to quantum attacks and other known exploits.",data/test_files/source_code/legacy_authentication_system.c,0,0,0,1760158437.7432213,
md5_sha1_weak_hash,google,gemini-2.0-flash,source_code,True,True,0.9,3,3.649905204772949,True,"The code uses MD5 for password hashing and SHA-1 for session token generation, both of which are considered weak hash functions and vulnerable to collision attacks. These algorithms are not quantum-resistant.",data/test_files/source_code/md5_sha1_weak_hash.py,0,0,0,1760158442.3939984,
medical_device_encryption,google,gemini-2.0-flash,source_code,True,True,1.0,0,2.7181143760681152,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/medical_device_encryption.rs,0,0,0,1760158446.114868,
military_communication_system,google,gemini-2.0-flash,source_code,True,True,0.75,2,4.102738380432129,True,"The code implements a custom hash function that resembles SHA-256 but is significantly weakened due to the reduced number of constants and modified block processing. This custom hash is used in an HMAC-like authentication scheme, making the authentication vulnerable.",data/test_files/source_code/military_communication_system.c,0,0,0,1760158451.2187018,
mobile_secure_messenger,google,gemini-2.0-flash,source_code,True,True,0.75,4,4.086169481277466,True,"The code uses a custom stream cipher and a simplified ECC implementation, both of which are likely vulnerable. It also uses an insecure random number generator for key generation. The ECC implementation is based on secp256r1-like parameters, but the point multiplication is simplified and insecure. The stream cipher is custom and its security is unknown. The use of srand(time(NULL)) makes key generation predictable.",data/test_files/source_code/mobile_secure_messenger.c,0,0,0,1760158456.3067708,
network_infrastructure_monitor,google,gemini-2.0-flash,source_code,True,True,0.9,4,4.017252683639526,True,"Identified RSA and ECC implementations with insecure random number generation and simplified modular arithmetic, making them highly vulnerable. The RSA key size is 2048 bits, which is vulnerable to classical attacks. The ECC implementation uses a simplified key exchange and signature scheme, making it vulnerable.",data/test_files/source_code/network_infrastructure_monitor.cpp,0,0,0,1760158461.3261101,
ntru_lattice_encryption,google,gemini-2.0-flash,source_code,True,True,1.0,0,2.6495230197906494,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/ntru_lattice_encryption.java,0,0,0,1760158464.9764569,
openssl_des_enc,google,gemini-2.0-flash,source_code,True,True,0.75,1,3.068676233291626,True,"The code uses the OpenSSL legacy cipher library, indicating potential use of deprecated or vulnerable algorithms. Further analysis is needed to identify specific algorithms used.",data/test_files/source_code/openssl_des_enc.c,0,0,0,1760158469.04613,
quantum_resistant_messenger,google,gemini-2.0-flash,source_code,True,True,0.9,2,3.2246909141540527,True,SHA-256 is used for key derivation. secrets.randbelow is used as a random number generator.,data/test_files/source_code/quantum_resistant_messenger.py,0,0,0,1760158473.2715695,
rc4_stream_generator,google,gemini-2.0-flash,source_code,True,True,0.95,3,3.5978927612304688,True,"The code contains implementations of RC4 and VMPC stream ciphers, both of which are vulnerable to various attacks and are considered weak in modern cryptography. RC4 is particularly vulnerable in the post-quantum era.",data/test_files/source_code/rc4_stream_generator.c,0,0,0,1760158477.8717833,
rsa_gen,google,gemini-2.0-flash,source_code,True,True,0.9,2,3.296647071838379,True,"RSA implementation detected using OpenSSL library. The code uses RSA key components (n, e, d, p, q, dmp1, dmq1, iqmp).",data/test_files/source_code/rsa_gen.c,0,0,0,1760158482.1704946,
rsa_modular_exponentiation,google,gemini-2.0-flash,source_code,True,True,0.9,5,4.47234320640564,True,"The code uses RSA for encryption and signatures, a SHA-1 variant for hashing, and a custom padding scheme. Textbook RSA encryption and the custom padding scheme are vulnerable. The use of SHA-1 is also a concern. The RSA key size is 512 bits, which is too small and vulnerable to attacks.",data/test_files/source_code/rsa_modular_exponentiation.py,0,0,0,1760158487.6449215,
rsa_public_key_system,google,gemini-2.0-flash,source_code,True,True,0.8,4,3.80663800239563,True,RSA implementation detected using BigInteger. OAEP padding is used. SecureRandom is used for random number generation. Potential implementation-specific vulnerabilities in RSA key generation and primality testing.,data/test_files/source_code/rsa_public_key_system.java,0,0,0,1760158492.452464,
salsa20_stream_cipher,google,gemini-2.0-flash,source_code,True,True,1.0,0,2.798311233520508,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/salsa20_stream_cipher.c,0,0,0,1760158496.2523346,
secure_messaging_protocol,google,gemini-2.0-flash,source_code,True,True,0.9,4,3.985255479812622,True,"The code implements RSA encryption and ECC. It uses PKCS#1 v1.5 padding, which is vulnerable. It also uses SecureRandom.random_number for key generation, which might be insecure depending on the system's entropy source.",data/test_files/source_code/secure_messaging_protocol.rb,0,0,0,1760158501.2406287,
secure_video_streaming,google,gemini-2.0-flash,source_code,False,True,1.0,0,2.8615849018096924,True,No vulnerable algorithms detected.,data/test_files/source_code/secure_video_streaming.c,0,0,0,1760158505.1046443,
seed_aes_hybrid_banking,google,gemini-2.0-flash,source_code,True,True,1.0,0,3.0470776557922363,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/seed_aes_hybrid_banking.py,0,0,0,1760158509.1547267,
seed_stream_cipher,google,gemini-2.0-flash,source_code,True,True,1.0,0,3.170591354370117,True,No vulnerable cryptographic algorithms detected.,data/test_files/source_code/seed_stream_cipher.py,0,0,0,1760158513.3269532,
serpent_substitution_network,google,gemini-2.0-flash,source_code,False,True,1.0,0,3.06325101852417,True,No vulnerable algorithms detected.,data/test_files/source_code/serpent_substitution_network.c,0,0,0,1760158517.3913164,
sha1_rsa_legacy_documents,google,gemini-2.0-flash,source_code,True,True,0.8,3,3.7760565280914307,True,"The code contains a vulnerable RSA implementation using small primes and a naive modular exponentiation, and a custom hash function resembling HAS-160. The RSA implementation is vulnerable to factorization and timing attacks.",data/test_files/source_code/sha1_rsa_legacy_documents.py,0,0,0,1760158522.168006,
skipjack_government_cipher,google,gemini-2.0-flash,source_code,False,True,0.75,1,3.107891798019409,True,"The code contains an implementation of TEA (Tiny Encryption Algorithm), a DES variant, which is vulnerable to Grover's algorithm.",data/test_files/source_code/skipjack_government_cipher.c,0,0,0,1760158526.2766306,
smart_card_security,google,gemini-2.0-flash,source_code,True,True,0.9,1,2.731367826461792,True,"The code uses a TEA-like cipher, which is a symmetric cipher vulnerable to Grover's algorithm.",data/test_files/source_code/smart_card_security.c,0,0,0,1760158530.0087864,
tiger_hash_function,google,gemini-2.0-flash,source_code,False,True,1.0,0,2.663721799850464,True,No vulnerable algorithms detected.,data/test_files/source_code/tiger_hash_function.c,0,0,0,1760158533.6745372,
twofish_advanced_encryption,google,gemini-2.0-flash,source_code,False,True,1.0,0,3.5191895961761475,True,No vulnerable algorithms detected.,data/test_files/source_code/twofish_advanced_encryption.c,0,0,0,1760158538.1954618,
whirlpool_hash_digest,google,gemini-2.0-flash,source_code,False,True,1.0,0,2.9922587871551514,True,No vulnerable algorithms detected.,data/test_files/source_code/whirlpool_hash_digest.c,0,0,0,1760158542.189228,
wireless_network_encryption,google,gemini-2.0-flash,source_code,True,True,0.9,2,3.173145055770874,True,"The code implements RC4 stream cipher, which is vulnerable to Grover's algorithm and known implementation-specific vulnerabilities. No other vulnerable algorithms were detected.",data/test_files/source_code/wireless_network_encryption.c,0,0,0,1760158546.364786,
adaptive_multi_tenant_crypto_orchestrator,google,gemini-2.0-flash,assembly_binary,True,True,0.8,7,4.173376560211182,True,"The code contains implementations of RSA modular exponentiation, Elliptic Curve Cryptography (P-256), and AES-128. There are indications of hardware acceleration and assembly-level obfuscation, along with potential side-channel vulnerabilities in the modular exponentiation implementation.",data/test_files/assembly_binary/adaptive_multi_tenant_crypto_orchestrator.s,0,0,0,1760158551.5402455,
advanced_block_standard_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.6,2,3.7925052642822266,True,"The code contains an S-box lookup operation similar to AES, and a potential side-channel vulnerability due to table lookup. Further analysis is needed to confirm the presence of a full AES implementation.",data/test_files/assembly_binary/advanced_block_standard_operations.s,0,0,0,1760158556.3339741,
aes_key_expansion_module,google,gemini-2.0-flash,assembly_binary,True,True,0.75,1,3.178447961807251,True,"Detected an AES-like block cipher implementation based on the presence of block transformation, S-box application, and inverse mix columns. The code mentions FIPS 197 compliance, which is a strong indicator of AES. The code is vulnerable to Grover's algorithm, halving the effective security.",data/test_files/assembly_binary/aes_key_expansion_module.s,0,0,0,1760158560.5145555,
aria_encryption_engine,google,gemini-2.0-flash,assembly_binary,True,True,0.7,2,3.9734532833099365,True,"Detected a Korean block cipher implementation based on the presence of specific transformation functions and S-box usage, which also indicates potential side-channel vulnerabilities.",data/test_files/assembly_binary/aria_encryption_engine.s,0,0,0,1760158565.489558,
automotive_ecu_cryptographic_unit,google,gemini-2.0-flash,assembly_binary,True,True,0.75,1,3.3434760570526123,True,"Detected a call to a function named 'domesticn_automotive_cipher', which suggests the presence of a Korean cryptographic algorithm or a domestic automotive cipher implementation. Further analysis is needed to determine the specific algorithm and its vulnerability.",data/test_files/assembly_binary/automotive_ecu_cryptographic_unit.s,0,0,0,1760158569.8349001,
banking_transaction_processor,google,gemini-2.0-flash,assembly_binary,True,True,0.1,0,3.315838098526001,True,"No vulnerable cryptographic algorithms were detected based on explicit evidence in the provided assembly code. The code contains a function called `feistel_function` and functions that appear to use it in a block cipher-like structure (`block_key_schedule`, `block_encrypt_block`), but without more context or explicit algorithm names, it's impossible to determine if a known vulnerable algorithm is being used.",data/test_files/assembly_binary/banking_transaction_processor.s,0,0,0,1760158574.1529493,
biometric_authentication_engine,google,gemini-2.0-flash,assembly_binary,True,True,0.6,2,3.193624973297119,True,Potential Korean cryptographic algorithm detected based on the function name 'domesticn_biometric_cipher'.,data/test_files/assembly_binary/biometric_authentication_engine.s,0,0,0,1760158578.3478796,
blake2b_hash_engine,google,gemini-2.0-flash,assembly_binary,True,True,0.8,2,3.598916530609131,True,"The code implements BLAKE2b hash function. The presence of initialization vectors, compression rounds, and optimized block processing ('FastBlockCipherq') strongly suggests BLAKE2b implementation.",data/test_files/assembly_binary/blake2b_hash_engine.s,0,0,0,1760158582.9477136,
block_cipher_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.75,2,4.207657098770142,True,The code appears to implement AES-like encryption with potential side-channel vulnerabilities due to the use of a lookup table (S-box) without countermeasures.,data/test_files/assembly_binary/block_cipher_operations.s,0,0,0,1760158588.156706,
blockchain_consensus_validator,google,gemini-2.0-flash,assembly_binary,False,True,0.1,0,2.8685925006866455,True,No vulnerable cryptographic algorithms were detected based on explicit evidence in the provided assembly code.,data/test_files/assembly_binary/blockchain_consensus_validator.s,0,0,0,1760158592.0268018,
chacha20_stream_processor,google,gemini-2.0-flash,assembly_binary,False,True,0.6,1,3.578687906265259,True,"The code appears to implement a stream cipher with a state matrix and round functions. The quarter_round functions use addl, xorl, and roll operations which can be vulnerable to timing attacks if not implemented carefully. No specific vulnerable algorithms like RSA, AES, or SHA are explicitly detected, but the use of roll instructions with fixed shifts could be a potential side-channel vulnerability.",data/test_files/assembly_binary/chacha20_stream_processor.s,0,0,0,1760158596.6071649,
cloud_storage_encryption_processor,google,gemini-2.0-flash,assembly_binary,True,True,0.7,1,3.40244197845459,True,"The analysis detected a potential Korean algorithm implementation in the `domesticn_cloud_cipher` function, indicated by rotate left and XOR operations, which are common in Korean algorithms like LEA.",data/test_files/assembly_binary/cloud_storage_encryption_processor.s,0,0,0,1760158601.0113637,
crypto_trading_platform_engine,google,gemini-2.0-flash,assembly_binary,False,True,0.1,0,3.2762961387634277,True,"No vulnerable cryptographic algorithms were explicitly detected based on the provided assembly code. The presence of multiplication operations in `wallet_key_derivation` and `transaction_signature` functions could potentially be related to cryptographic operations, but without further context or explicit cryptographic API calls, it's impossible to confirm. The function name `domesticn_trading_cipher` suggests a custom cipher, but the implementation details are insufficient to identify a specific vulnerable algorithm.",data/test_files/assembly_binary/crypto_trading_platform_engine.s,0,0,0,1760158605.2895956,
cryptographic_wallet_manager,google,gemini-2.0-flash,assembly_binary,False,True,0.75,2,3.5189762115478516,True,The analysis detected Elliptic Curve Point Multiplication (secp256k1_point_mul) and a hashing algorithm (digest_alg256_hash). Further analysis is needed to determine the specific algorithms and their vulnerability to quantum attacks.,data/test_files/assembly_binary/cryptographic_wallet_manager.s,0,0,0,1760158609.8097456,
diffie_hellman_key_exchange,google,gemini-2.0-flash,assembly_binary,True,True,0.9,5,4.490305662155151,True,Detected a Diffie-Hellman/Discrete Logarithm key exchange implementation with modular arithmetic operations and fast modular exponentiation. Potential side-channel vulnerabilities exist in the modular exponentiation implementation. Key storage patterns are also identified.,data/test_files/assembly_binary/diffie_hellman_key_exchange.s,0,0,0,1760158615.301978,
digital_signature_processor,google,gemini-2.0-flash,assembly_binary,True,True,0.7,2,3.4231419563293457,True,RSA modular exponentiation detected in sig_alg_key_generation function. Modular arithmetic operations are present.,data/test_files/assembly_binary/digital_signature_processor.s,0,0,0,1760158619.7262151,
distributed_blockchain_consensus_engine,google,gemini-2.0-flash,assembly_binary,True,True,0.9,3,3.9818520545959473,True,"Detected BLS12-381 elliptic curve operations and modular arithmetic implementations, both of which are post-classical-vulnerable algorithms. The code initializes a BLS signature system and a VDF modular system.",data/test_files/assembly_binary/distributed_blockchain_consensus_engine.s,0,0,0,1760158624.7094219,
dsa_signature_verification,google,gemini-2.0-flash,assembly_binary,True,True,0.8,5,3.9499623775482178,True,DSA signature algorithm detected with SHA-256 hashing and modular arithmetic operations. Fast modular exponentiation is used. Simplified modular inverse implementation suggests potential side-channel vulnerabilities.,data/test_files/assembly_binary/dsa_signature_verification.s,0,0,0,1760158629.6607983,
elliptic_curve_point_operations,google,gemini-2.0-flash,assembly_binary,False,True,0.3,1,3.5451366901397705,True,Potential Elliptic Curve Cryptography detected based on data constants and function calls. Further analysis of sub_401100 is required for confirmation.,data/test_files/assembly_binary/elliptic_curve_point_operations.s,0,0,0,1760158634.207366,
elliptic_curve_scalar_multiplication,google,gemini-2.0-flash,assembly_binary,False,True,0.9,5,3.748723030090332,True,"Detected Elliptic Curve Scalar Multiplication, Modular Arithmetic operations, and memory allocation for cryptographic key storage. The code implements elliptic curve point doubling and addition using modular arithmetic. A binary method is used for scalar multiplication.",data/test_files/assembly_binary/elliptic_curve_scalar_multiplication.s,0,0,0,1760158638.9570882,
elliptic_mathematical_operations,google,gemini-2.0-flash,assembly_binary,False,True,0.7,2,4.22333288192749,True,"The analysis detected RSA modular exponentiation and big integer arithmetic patterns. The function sub_401000 appears to implement modular exponentiation, a core component of RSA. The presence of mul and div instructions, along with the loop structure, supports this identification. The data sections contain large integer constants, potentially used in cryptographic operations.",data/test_files/assembly_binary/elliptic_mathematical_operations.s,0,0,0,1760158644.1815953,
ellipticsignature_securehashalgo1_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.9,1,3.348104238510132,True,SHA-1 hash function detected based on initial value constants and round constants.,data/test_files/assembly_binary/ellipticsignature_securehashalgo1_operations.s,0,0,0,1760158648.5321417,
embedded_authentication_processor,google,gemini-2.0-flash,assembly_binary,True,True,0.7,3,3.43377947807312,True,"Feistel Network, Digest Computation, and Domestic Lightweight Transform are detected. These algorithms may be vulnerable to quantum attacks or have known weaknesses.",data/test_files/assembly_binary/embedded_authentication_processor.s,0,0,0,1760158652.9681253,
embedded_iot_security_processor,google,gemini-2.0-flash,assembly_binary,True,True,0.8,4,3.7031092643737793,True,Elliptic Curve Cryptography (specifically P-192) is detected. Optimization patterns for resource-constrained environments are present. Memory allocation for key storage is observed. Potential side-channel vulnerabilities exist due to entropy collection methods.,data/test_files/assembly_binary/embedded_iot_security_processor.s,0,0,0,1760158657.6720283,
enterprise_data_protection_engine,google,gemini-2.0-flash,assembly_binary,True,True,0.7,4,3.865403890609741,True,"The analysis detected large integer arithmetic, a domestic Feistel round algorithm, and a hash function implementation. The presence of `large_modular_computation` suggests potential RSA or similar crypto, and `domesticn_feistel_round` indicates a Korean algorithm. The `digest_computation_engine` suggests a hash function is being used.",data/test_files/assembly_binary/enterprise_data_protection_engine.s,0,0,0,1760158662.5392118,
feistel_network_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.7,3,4.823328971862793,True,The analysis detected potential implementations of SEED and AES based on the presence of S-box lookup tables and byte substitution operations. The use of S-boxes without countermeasures suggests potential vulnerability to side-channel attacks.,data/test_files/assembly_binary/feistel_network_operations.s,0,0,0,1760158668.3633134,
financial_cryptographic_accelerator,google,gemini-2.0-flash,assembly_binary,True,True,0.7,3,3.6222543716430664,True,"RSA modular exponentiation and a Korean banking cipher are detected. The modular exponentiation unit is called, and a domestic banking cipher is used.",data/test_files/assembly_binary/financial_cryptographic_accelerator.s,0,0,0,1760158672.986284,
government_classified_system_processor,google,gemini-2.0-flash,assembly_binary,True,True,0.7,2,3.512859344482422,True,Detected a call to 'domesticn_government_cipher' which suggests the presence of a Korean cryptographic algorithm. Also detected 'k_cipher_4' which may be related to a Korean algorithm.,data/test_files/assembly_binary/government_classified_system_processor.s,0,0,0,1760158677.4998312,
hash_digest_operations,google,gemini-2.0-flash,assembly_binary,False,True,0.75,1,3.7998251914978027,True,MD5 hash algorithm detected based on initialization constants and round function structure.,data/test_files/assembly_binary/hash_digest_operations.s,0,0,0,1760158682.3002944,
hight_lightweight_cipher,google,gemini-2.0-flash,assembly_binary,True,True,0.9,3,3.5338234901428223,True,"Detected a LIGHTWEIGHT_BLOCK cipher implementation, which is a symmetric cipher potentially vulnerable to Grover's algorithm due to its 64-bit effective security. The code includes key expansion, encryption rounds, and memory allocation for keys.",data/test_files/assembly_binary/hight_lightweight_cipher.s,0,0,0,1760158686.8360202,
hybrid_banking_security_system,google,gemini-2.0-flash,assembly_binary,True,True,0.7,3,3.222076892852783,True,RSA modular exponentiation detected in client authentication. Memory allocation for key storage is present. Assembly-level obfuscation is used.,data/test_files/assembly_binary/hybrid_banking_security_system.s,0,0,0,1760158691.06049,
industrial_control_security,google,gemini-2.0-flash,assembly_binary,True,True,0.7,1,3.9464921951293945,True,The analysis detected potential usage of LEA based on the presence of 'fast_cipher_key_schedule' and 'fast_cipher_encrypt_block' functions utilizing bitwise rotations and XOR operations.,data/test_files/assembly_binary/industrial_control_security.s,0,0,0,1760158696.0082152,
industrial_security_coprocessor,google,gemini-2.0-flash,assembly_binary,True,True,1.0,0,3.1132798194885254,True,No vulnerable cryptographic algorithms detected.,data/test_files/assembly_binary/industrial_security_coprocessor.s,0,0,0,1760158700.1228435,
kcdsa_signature_generator,google,gemini-2.0-flash,assembly_binary,True,True,0.9,5,5.151619911193848,True,The code implements a DSA-like signature algorithm potentially vulnerable to quantum attacks due to the discrete logarithm problem. It uses big integer arithmetic and likely calls cryptographic libraries. The presence of `kcsig_alg` prefixes suggests a Korean cryptographic algorithm. The code also stores cryptographic keys in memory and zeros them before exiting.,data/test_files/assembly_binary/kcdsa_signature_generator.s,0,0,0,1760158706.277749,
keyexchange_protocol_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.7,2,3.6557393074035645,True,"RSA modular exponentiation and big integer arithmetic are detected based on the presence of mul and div instructions within a loop, along with the use of rdx for handling large integer results. The data at data_404000 is used as modulus.",data/test_files/assembly_binary/keyexchange_protocol_operations.s,0,0,0,1760158710.934977,
korean_blockcipher_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.6,1,2.979567766189575,True,Potentially detected AES-like S-boxes. Further analysis is needed to confirm AES usage.,data/test_files/assembly_binary/korean_blockcipher_operations.s,0,0,0,1760158714.9168599,
lea_block_cipher_engine,google,gemini-2.0-flash,assembly_binary,True,True,0.9,4,3.720197916030884,True,"FAST_BLOCK block cipher detected, a domestic standard vulnerable to Grover's algorithm. Key schedule allocates memory on the stack. Round transformations use rotate instructions, indicating optimization.",data/test_files/assembly_binary/lea_block_cipher_engine.s,0,0,0,1760158719.6385648,
legacy_hash_computation,google,gemini-2.0-flash,assembly_binary,True,True,0.6,1,4.273503541946411,True,Potentially vulnerable hash algorithm detected based on initialization values and operations similar to MD5/SHA-1.,data/test_files/assembly_binary/legacy_hash_computation.s,0,0,0,1760158724.9144528,
legacy_pki_certificate_processor,google,gemini-2.0-flash,assembly_binary,False,True,0.1,0,3.191437005996704,True,"No vulnerable cryptographic algorithms were explicitly detected based on the provided assembly code. The code contains references to signature algorithms and hash computations, but no specific vulnerable algorithms are identified through direct function calls or library imports.",data/test_files/assembly_binary/legacy_pki_certificate_processor.s,0,0,0,1760158729.1077511,
md5_sha1_hash_processor,google,gemini-2.0-flash,assembly_binary,True,True,0.75,1,3.8784334659576416,True,"The code appears to implement a legacy cryptographic hash function, potentially a vulnerable SHA variant like SHA-1, based on the initialization constants, round functions, and processing of data blocks.",data/test_files/assembly_binary/md5_sha1_hash_processor.s,0,0,0,1760158733.986925,
medical_device_security_controller,google,gemini-2.0-flash,assembly_binary,True,True,0.6,1,3.2688348293304443,True,The analysis detected a potential Korean cryptographic algorithm based on the function name 'domesticn_medical_cipher'. Further investigation is needed to confirm the specific algorithm and its vulnerability to quantum attacks.,data/test_files/assembly_binary/medical_device_security_controller.s,0,0,0,1760158738.257088,
message_digest_128bit_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.8,1,3.1177406311035156,True,MD5 hash function detected based on initial value constants and round constant addition.,data/test_files/assembly_binary/message_digest_128bit_operations.s,0,0,0,1760158742.3776362,
mobile_cipher_engine,google,gemini-2.0-flash,assembly_binary,True,True,0.9,1,3.2171595096588135,True,A5/1 stream cipher and TEA block cipher are detected. A5/1 is known to be vulnerable to quantum attacks.,data/test_files/assembly_binary/mobile_cipher_engine.s,0,0,0,1760158746.5969155,
mobile_payment_security_engine,google,gemini-2.0-flash,assembly_binary,True,True,0.7,1,3.651232957839966,True,Likely detected a Korean domestic cipher implementation in the function domesticn_mobile_cipher.,data/test_files/assembly_binary/mobile_payment_security_engine.s,0,0,0,1760158751.2498274,
network_security_gateway,google,gemini-2.0-flash,assembly_binary,True,True,0.75,1,3.1890270709991455,True,Detected a Legacy Block Cipher implementation based on function calls to schedule and encrypt block functions. Further analysis is needed to determine the specific algorithm and its vulnerability to quantum attacks.,data/test_files/assembly_binary/network_security_gateway.s,0,0,0,1760158755.4404757,
neural_network_inference_accelerator,google,gemini-2.0-flash,assembly_binary,True,True,0.6,2,3.206082820892334,True,Potentially detected a Korean domestic algorithm implementation based on the function name 'domesticn_ai_cipher'. Further analysis is needed to confirm the specific algorithm and its vulnerability status.,data/test_files/assembly_binary/neural_network_inference_accelerator.s,0,0,0,1760158759.647725,
ntru_polynomial_processor,google,gemini-2.0-flash,assembly_binary,True,True,0.6,3,3.75443959236145,True,"Detected big integer arithmetic operations, memory allocation for keys, and potential side-channel vulnerabilities due to random number generation. The code implements polynomial ring operations, which are part of lattice-based cryptography.",data/test_files/assembly_binary/ntru_polynomial_processor.s,0,0,0,1760158764.4037333,
obfuscated_crypto_library_dispatcher,google,gemini-2.0-flash,assembly_binary,True,True,0.8,4,4.714836359024048,True,"Detected RSA modular exponentiation, Elliptic Curve Cryptography, Big integer arithmetic, and assembly-level obfuscation techniques. The code uses indirect function calls and XOR obfuscation to hide the underlying cryptographic operations.",data/test_files/assembly_binary/obfuscated_crypto_library_dispatcher.s,0,0,0,1760158770.1212122,
openssl_des_enc,google,gemini-2.0-flash,assembly_binary,True,True,0.75,1,3.011847734451294,True,Detected a legacy block cipher implementation based on the function name 'simple_LegacyBlockCipherencrypt'. Further analysis is needed to determine the specific algorithm and its vulnerability.,data/test_files/assembly_binary/openssl_des_enc.asm,0,0,0,1760158774.1347733,
openssl_des_enc,,,,False,False,0,0,0,False,,,0,0,0,0,Input validation failed
poly1305_authenticator,google,gemini-2.0-flash,assembly_binary,False,True,0.7,1,3.3065083026885986,True,"The code implements a message authentication code (MAC) generation scheme, specifically Poly1305. It involves big integer and modular arithmetic operations, particularly in the `multiply_accumulator_by_r` and `reduce_modulo_p` functions. No other vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/poly1305_authenticator.s,0,0,0,1760158779.4471147,
polymorphic_malware_crypto_engine,google,gemini-2.0-flash,assembly_binary,True,True,0.8,5,3.619379997253418,True,"Detected RSA modular exponentiation, Elliptic Curve Cryptography, Korean Block Cipher, Modular Arithmetic, and Assembly-level obfuscation.",data/test_files/assembly_binary/polymorphic_malware_crypto_engine.s,0,0,0,1760158784.0680583,
polynomial_field_arithmetic_engine,google,gemini-2.0-flash,assembly_binary,False,True,0.75,2,3.4250080585479736,True,"Elliptic curve point operations, scalar multiplication, and a Korean domestic curve operation are detected. Further analysis is needed to determine the specific curves and algorithms used and their vulnerability to quantum attacks.",data/test_files/assembly_binary/polynomial_field_arithmetic_engine.s,0,0,0,1760158788.4942172,
postquantum_multimodal_operations,google,gemini-2.0-flash,assembly_binary,False,True,0.1,0,3.5378787517547607,True,"No vulnerable cryptographic algorithms detected based on the provided assembly code. The presence of function calls like `sub_401300`, `sub_401400`, etc., suggests the use of subroutines, but without further information about their implementation, it's impossible to determine if they are related to cryptography. The data sections `data_402000` and `data_402020` might contain cryptographic constants, but without context, this cannot be confirmed.",data/test_files/assembly_binary/postquantum_multimodal_operations.s,0,0,0,1760158793.0327325,
publickey_encryption_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.6,1,3.1359734535217285,True,"RSA modular exponentiation detected based on mul and div instructions in sub_401100, suggesting potential modular arithmetic operations.",data/test_files/assembly_binary/publickey_encryption_operations.s,0,0,0,1760158797.1705585,
publickey_modular_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.7,1,3.0909008979797363,True,"RSA modular exponentiation detected based on the presence of modular multiplication operations within a loop, indicative of a repeated squaring algorithm.",data/test_files/assembly_binary/publickey_modular_operations.s,0,0,0,1760158801.264163,
publickeyalgo_messagedigest5_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.8,3,4.024454116821289,True,The analysis detected RSA modular exponentiation patterns in sub_401000 and MD5 hash algorithm implementation in sub_401100. The presence of mul and div instructions in sub_401000 indicates modular arithmetic operations.,data/test_files/assembly_binary/publickeyalgo_messagedigest5_operations.s,0,0,0,1760158806.2924027,
quantum_communication_relay,google,gemini-2.0-flash,assembly_binary,True,True,1.0,0,3.135246515274048,True,No vulnerable cryptographic algorithms detected.,data/test_files/assembly_binary/quantum_communication_relay.s,0,0,0,1760158810.433089,
quantum_cryptanalysis_simulation,google,gemini-2.0-flash,assembly_binary,True,True,0.9,6,4.918353080749512,True,"The code simulates post-classical attacks on classical cryptographic algorithms. RSA, Elliptic Curve Cryptography, Discrete Logarithm problems, Symmetric Ciphers, and Hash Functions are targeted. Shor's algorithm is used for attacking asymmetric algorithms, and Grover's algorithm is used for attacking symmetric ciphers and hash functions. Modular arithmetic operations are also present.",data/test_files/assembly_binary/quantum_cryptanalysis_simulation.s,0,0,0,1760158816.3547297,
quantum_migration_bridge_processor,google,gemini-2.0-flash,assembly_binary,True,True,1.0,0,2.958153247833252,True,No vulnerable cryptographic algorithms detected based on explicit evidence in the provided assembly code.,data/test_files/assembly_binary/quantum_migration_bridge_processor.s,0,0,0,1760158820.3155258,
quantum_resistant_lattice_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.6,2,4.076629400253296,True,"The analysis detected big integer and modular arithmetic operations, which are common in cryptographic algorithms. Potential side-channel vulnerabilities were also identified due to the use of `divq` and `rdrand`.",data/test_files/assembly_binary/quantum_resistant_lattice_operations.s,0,0,0,1760158825.3946173,
quantum_resistant_migration_bridge,google,gemini-2.0-flash,assembly_binary,True,True,0.1,0,3.5084915161132812,True,"No specific vulnerable cryptographic algorithms or library calls were detected in the provided assembly code. The code contains calls to functions like `initialize_legacy_modular_context`, `initialize_legacy_curve_context`, `perform_legacy_key_exchange`, `encrypt_with_legacy_block_cipher`, and `sign_with_legacy_signature`, but without knowing the implementation details of these functions, it's impossible to determine which specific algorithms are being used and whether they are vulnerable.",data/test_files/assembly_binary/quantum_resistant_migration_bridge.s,0,0,0,1760158829.9042435,
quantum_safe_communicator,google,gemini-2.0-flash,assembly_binary,False,True,0.75,1,3.4464781284332275,True,NTRU key generation and encryption functions are called. Further analysis is needed to determine the specific NTRU parameters and implementation details.,data/test_files/assembly_binary/quantum_safe_communicator.s,0,0,0,1760158834.3518188,
rsa_key_generation_engine,google,gemini-2.0-flash,assembly_binary,True,True,0.75,4,3.9575979709625244,True,"RSA modular exponentiation and large integer arithmetic are detected. The code implements modular exponentiation, key generation, and primality testing, indicating RSA-like cryptographic operations. Key storage in memory is also detected.",data/test_files/assembly_binary/rsa_key_generation_engine.s,0,0,0,1760158839.3114889,
salsa20_stream_cipher,google,gemini-2.0-flash,assembly_binary,False,True,0.5,1,3.5587096214294434,True,Potential side-channel vulnerability detected due to the use of addl and roll instructions in the quarter_round functions. No specific vulnerable cryptographic algorithms were identified.,data/test_files/assembly_binary/salsa20_stream_cipher.s,0,0,0,1760158843.8734577,
satellite_communication_security,google,gemini-2.0-flash,assembly_binary,True,True,0.1,0,3.2073142528533936,True,No vulnerable cryptographic algorithms were detected based on explicit evidence in the provided assembly code.,data/test_files/assembly_binary/satellite_communication_security.s,0,0,0,1760158848.0843358,
secure_boot_verification_processor,google,gemini-2.0-flash,assembly_binary,False,True,0.7,2,4.3774683475494385,True,"The analysis detected a potential Korean cryptographic algorithm implementation in the `domesticn_secure_boot_cipher` function. The presence of specific constants and byte-level operations suggests a custom or proprietary algorithm, potentially of Korean origin. Further investigation is needed to identify the specific algorithm and assess its vulnerability to quantum attacks.",data/test_files/assembly_binary/secure_boot_verification_processor.s,0,0,0,1760158853.466039,
secure_communication_protocol,google,gemini-2.0-flash,assembly_binary,True,True,0.75,1,3.284708261489868,True,Diffie-Hellman key exchange detected using modular exponentiation. No other vulnerable algorithms detected.,data/test_files/assembly_binary/secure_communication_protocol.s,0,0,0,1760158857.7526243,
secure_hash_256bit_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.9,1,3.8251919746398926,True,SHA-256 hash function detected based on initialization constants.,data/test_files/assembly_binary/secure_hash_256bit_operations.s,0,0,0,1760158862.5811284,
secure_matrix_transformation_unit,google,gemini-2.0-flash,assembly_binary,True,True,0.7,1,3.6726808547973633,True,Potentially detected a Korean block cipher based on function names and the presence of a substitution box. Further analysis is needed to confirm the specific algorithm.,data/test_files/assembly_binary/secure_matrix_transformation_unit.s,0,0,0,1760158867.2578864,
siphash_prf_function,google,gemini-2.0-flash,assembly_binary,False,True,0.75,1,3.454080581665039,True,"The code implements SipHash-2-4, a pseudorandom function, and allocates memory for a secret key. No vulnerable cryptographic algorithms like RSA, ECC, DES, AES, MD5, or SHA-1 were explicitly detected. The memory allocation for the secret key is noted.",data/test_files/assembly_binary/siphash_prf_function.s,0,0,0,1760158871.716258,
smart_card_authenticator,google,gemini-2.0-flash,assembly_binary,True,True,0.7,1,3.836116313934326,True,LEA algorithm detected based on rotate left instructions and block cipher structure.,data/test_files/assembly_binary/smart_card_authenticator.s,0,0,0,1760158876.5550256,
smart_card_security_module,google,gemini-2.0-flash,assembly_binary,True,True,0.6,2,3.6040914058685303,True,Potentially detected a Korean cryptographic algorithm implementation in the `domesticn_smartcard_cipher` function. Further analysis is needed to confirm the specific algorithm and its vulnerability to quantum attacks.,data/test_files/assembly_binary/smart_card_security_module.s,0,0,0,1760158881.160279,
sphincs_signature_scheme,google,gemini-2.0-flash,assembly_binary,True,True,0.7,1,3.674578905105591,True,"The code implements a hash-based signature generation system, specifically SPHINCS+. It uses a HASH-256-like structure in the `compute_hash` function. No other vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/sphincs_signature_scheme.s,0,0,0,1760158885.8384004,
steganographic_crypto_covert_channel,google,gemini-2.0-flash,assembly_binary,True,True,0.7,3,3.9493913650512695,True,"RSA and Big Integer Arithmetic are detected based on modular arithmetic operations, primality testing, and large integer multiplication. Assembly-level obfuscation is also detected due to misleading function names.",data/test_files/assembly_binary/steganographic_crypto_covert_channel.s,0,0,0,1760158890.7916949,
stream_cipher_generator,google,gemini-2.0-flash,assembly_binary,True,True,0.9,1,3.358922243118286,True,RC4 stream cipher detected. Trivium stream cipher also detected.,data/test_files/assembly_binary/stream_cipher_generator.s,0,0,0,1760158895.1528957,
stream_generator_operations,google,gemini-2.0-flash,assembly_binary,True,True,0.75,1,3.401566743850708,True,RC4 stream cipher detected in sub_401000 and sub_401200 functions.,data/test_files/assembly_binary/stream_generator_operations.s,0,0,0,1760158899.5558083,
stream_keygeneration_operations,google,gemini-2.0-flash,assembly_binary,False,True,0.75,1,4.263921737670898,True,The code appears to implement RC4 stream cipher based on the state array initialization and keystream generation pattern.,data/test_files/assembly_binary/stream_keygeneration_operations.s,0,0,0,1760158904.8235657,
triple_des_encryption_module,google,gemini-2.0-flash,assembly_binary,True,True,0.9,2,3.791701316833496,True,"Detected 3DES implementation, which is vulnerable to Grover's algorithm. Also detected memory allocation patterns for cryptographic key storage.",data/test_files/assembly_binary/triple_des_encryption_module.s,0,0,0,1760158909.6186128,
vpn_tunnel_encryption_engine,google,gemini-2.0-flash,assembly_binary,True,True,0.7,2,3.271505355834961,True,The analysis detected potential usage of Korean cryptographic algorithms within the 'domesticn_vpn_cipher' function. Further investigation is needed to determine the specific algorithm and its quantum vulnerability.,data/test_files/assembly_binary/vpn_tunnel_encryption_engine.s,0,0,0,1760158913.8921318,
x25519_key_agreement,google,gemini-2.0-flash,assembly_binary,True,True,0.9,5,4.14654278755188,True,Curve25519 elliptic curve cryptography detected with Montgomery ladder implementation. Large integer arithmetic and memory allocation for keys are present. Potential side-channel vulnerabilities due to conditional swaps.,data/test_files/assembly_binary/x25519_key_agreement.s,0,0,0,1760158919.0418687,
apache_legacy_ssl,google,gemini-2.0-flash,logs_config,True,True,0.9,7,5.033161163330078,True,"The configuration uses RSA certificates, DH parameters, and vulnerable cipher suites like Triple DES. It also enables SSLv3, which is a deprecated protocol. The configuration uses secp256r1, secp384r1, and prime256v1 elliptic curves. The api.legacy-app.com virtual host is configured with weaker ciphers and disables security features for compatibility.",data/test_files/logs_config/apache_legacy_ssl.conf,0,0,0,1760158925.0767467,
automotive_v2x_system,google,gemini-2.0-flash,logs_config,True,True,1.0,6,8.322224378585815,True,"Detected vulnerable algorithms: CurveSig-P256, CurveSig-P384, PublicKey-2048, PublicKey-3072, CurveKE-P256, BlockCipher-128-CCM, BlockCipher-128-GCM, BlockCipher-256-GCM, BlockCipher-256-CBC, BlockCipher-256-CTR, LEGACY_CIPHER-EDE3, StreamCipher, Hash128, K_CIPHER_1-128, K_CIPHER_2-128, K_CIPHER_4-128, K_CIPHER_2-256. These algorithms are vulnerable to Shor's and Grover's algorithms, or are deprecated/insecure.",data/test_files/logs_config/automotive_v2x_system.yaml,0,0,0,1760158934.4015107,
blockchain_node_security,google,gemini-2.0-flash,logs_config,True,True,0.9,5,7.023502826690674,True,"The configuration uses secp256k1, BLS12-381, secp256r1, x25519, and ed25519 elliptic curves. It also uses AES and ChaCha20 symmetric ciphers. TLS 1.3 is configured with specific cipher suites. Scrypt is used as a key derivation function. MD5, SHA1, and RIPEMD128 are disabled.",data/test_files/logs_config/blockchain_node_security.conf,0,0,0,1760158942.4314122,
cloud_hsm_operations,google,gemini-2.0-flash,logs_config,True,True,0.9,7,5.032513856887817,True,"The analysis detected the use of RSA, ECC (specifically P-256 and P-384), AES, TLS, and PKCS#1 v1.5. RSA with key size 2048 and 3072, ECC P-256 and P-384, and AES are potentially vulnerable to quantum attacks depending on the specific implementation and key sizes used. PKCS#1 v1.5 padding is considered a legacy protocol.",data/test_files/logs_config/cloud_hsm_operations.log,0,0,0,1760158948.4669304,
cloud_storage_encryption,google,gemini-2.0-flash,logs_config,True,True,0.95,9,6.3881516456604,True,"Detected RSA, ECC, Triple DES, StreamCipher, and Korean ciphers (K_CIPHER_1, K_CIPHER_2, K_CIPHER_4). RSA and ECC are flagged as quantum-vulnerable. Triple DES and StreamCipher are legacy algorithms.",data/test_files/logs_config/cloud_storage_encryption.conf,0,0,0,1760158955.8563566,
cryptographic_operations_detailed,google,gemini-2.0-flash,logs_config,True,True,1.0,10,6.802218198776245,True,"The analysis detected the use of RSA with 2048-bit modulus, Elliptic Curve Cryptography, Diffie-Hellman key exchange, a Korean domestic algorithm, and legacy digest functions. The system relies on integer factorization and discrete logarithm assumptions, making it vulnerable to quantum attacks. A migration timeline for quantum-resistant algorithms has been established.",data/test_files/logs_config/cryptographic_operations_detailed.log,0,0,0,1760158963.662467,
database_encryption_setup,google,gemini-2.0-flash,logs_config,True,True,1.0,6,7.9182891845703125,True,"Detected the use of SEED (K_CIPHER_1), ARIA (K_CIPHER_2), TripleCipher (deprecated), BLOCK_CIPHER, and ECB mode. TripleCipher is flagged as deprecated. ECB mode is flagged as vulnerable.",data/test_files/logs_config/database_encryption_setup.log,0,0,0,1760158972.583977,
email_server_crypto,google,gemini-2.0-flash,logs_config,True,True,0.9,6,7.104405641555786,True,"Detected RSA, ECC, DH, AES, TLS, and legacy ciphers. RSA 2048-bit keys are used for certificates. Elliptic curves secp384r1 and secp256r1 are configured. Diffie-Hellman parameters are specified. AES is used for cipher suites and encryption at rest. TLS versions 1.0 and 1.1 are explicitly disabled. Legacy ciphers are excluded but legacy support is enabled for S/MIME.",data/test_files/logs_config/email_server_crypto.conf,0,0,0,1760158980.6910064,
enterprise_banking_pki_configuration,google,gemini-2.0-flash,logs_config,True,True,0.95,11,9.563146829605103,True,"Detected configurations using RSA (2048, 1024), ECC (various curves), Diffie-Hellman (2048, 1024), ARIA, AES, SHA1, and legacy hash algorithms. The system uses TLS 1.2 and 1.3. There are warnings for RSA 1024 usage and SHA1 signatures.",data/test_files/logs_config/enterprise_banking_pki_configuration.conf,0,0,0,1760158991.2563226,
financial_payment_gateway,google,gemini-2.0-flash,logs_config,True,True,0.9,7,4.327406406402588,True,"The configuration uses vulnerable cryptographic algorithms and protocols including RSA with SHA1, TLSv1.0 and TLSv1.1, AES-128-CBC, Triple DES, and Hash128. These algorithms are either deprecated or vulnerable to known attacks, including potential quantum attacks in the future.",data/test_files/logs_config/financial_payment_gateway.conf,0,0,0,1760158996.5875862,
healthcare_ehr_system,google,gemini-2.0-flash,logs_config,True,True,0.9,9,4.797209739685059,True,"The configuration uses RSA with 2048-bit keys and SHA256 for signatures, the elliptic curve secp256r1 (P-256), DSA for key exchange with older clients, BlockCipher-128, and TLS 1.2. TripleCipher is marked as deprecated. The system uses RSA for certificates and key exchange. A warning message indicates the negotiation of a legacy KeyExchange-DSA cipher.",data/test_files/logs_config/healthcare_ehr_system.yaml,0,0,0,1760159002.3861332,
iot_device_firmware_config,google,gemini-2.0-flash,logs_config,True,True,0.9,4,4.497780084609985,True,"The configuration uses secp256r1, a prime field elliptic curve, which is vulnerable to quantum attacks. It also uses symmetric block ciphers, which may be vulnerable depending on the key size and specific algorithm. Legacy protocols like SSLv3, TLS 1.0, TLS 1.1, CBC and export grade ciphers are disabled, which is good. The cryptographic library is mbedTLS. The configuration mentions compliance with several security standards.",data/test_files/logs_config/iot_device_firmware_config.yaml,0,0,0,1760159007.8874454,
korean_crypto_library_config,google,gemini-2.0-flash,logs_config,True,True,0.9,5,4.288454055786133,True,"Detected ECC curves secp256r1, secp384r1, secp521r1, Korean SEED cipher, and KISA Crypto API usage. Also detected disabled MD5 support.",data/test_files/logs_config/korean_crypto_library_config.ini,0,0,0,1760159013.1792474,
military_secure_comms,google,gemini-2.0-flash,logs_config,True,True,0.95,6,4.958786249160767,True,"Detected use of RSA, ECC, LSH, Triple DES, Blowfish, and Hash128 algorithms. RSA is used for key exchange and authentication. ECC is used for digital signatures. LSH is used for integrity and hashing. Triple DES and Blowfish are used for legacy compatibility. Hash128 is used for authentication in older systems.",data/test_files/logs_config/military_secure_comms.conf,0,0,0,1760159019.14039,
mobile_app_security_audit,google,gemini-2.0-flash,logs_config,True,True,0.9,6,4.107284784317017,True,"Detected RSA key size below recommended strength, use of TLS_RSA_WITH_AES_128_CBC_SHA cipher suite, use of RS256 JWT algorithm, and use of TLS 1.2. Also detected EC_CRYPTO P-256.",data/test_files/logs_config/mobile_app_security_audit.log,0,0,0,1760159024.2508006,
nginx_mixed_security_gateway,google,gemini-2.0-flash,logs_config,True,True,0.9,8,8.928775787353516,True,"The configuration uses RSA certificates with key sizes 2048 and 1024, Elliptic Curve cryptography with secp384r1, secp256r1, prime256v1, and X25519 curves, ARIA cipher suites, AES cipher suites, deprecated TLS versions (TLSv1 and TLSv1.1), and Triple DES cipher suites. The 1024-bit RSA key is considered weak. TLSv1 and TLSv1.1 are deprecated and should be disabled. The configuration also uses ARIA, a Korean cryptographic algorithm.",data/test_files/logs_config/nginx_mixed_security_gateway.conf,0,0,0,1760159034.1847422,
quantum_safe_migration_plan,google,gemini-2.0-flash,logs_config,True,True,1.0,7,4.071627616882324,True,"Detected RSA, ECDSA P-256, DSA, and ECDHE as vulnerable algorithms based on the provided configuration data. These algorithms are flagged for migration to post-quantum alternatives.",data/test_files/logs_config/quantum_safe_migration_plan.yaml,0,0,0,1760159039.260575,
security_scanner_findings,google,gemini-2.0-flash,logs_config,True,True,0.95,7,4.478630304336548,True,"Detected vulnerable cryptographic algorithms including RSA with 1024-bit keys, Elliptic Curve P-192, Diffie-Hellman with 2048-bit MODP group, StreamCipher, TripleCipher, HAS-160, and K_CIPHER_1.",data/test_files/logs_config/security_scanner_findings.log,0,0,0,1760159044.7411425,
ssh_server_hardened,google,gemini-2.0-flash,logs_config,False,True,0.9,4,4.841618776321411,True,"The configuration uses RSA, ECDSA, DSA, and AES. RSA host key is configured. ECDSA is used for key exchange and host key algorithms with NIST P curves. DSA is disabled. AES is used in GCM and CTR modes. The configuration disables several weak algorithms and protocols.",data/test_files/logs_config/ssh_server_hardened.conf,0,0,0,1760159050.5841775,
ssl_legacy_banking_configuration,google,gemini-2.0-flash,logs_config,False,True,0.9,6,5.629124879837036,True,"The configuration uses RSA with 1024-bit keys, Diffie-Hellman with 1024-bit parameters, and Triple DES, all of which are considered vulnerable. SSLv2 and SSLv3 are disabled, but insecure renegotiation is enabled. The cipher suite configuration includes potentially weak algorithms.",data/test_files/logs_config/ssl_legacy_banking_configuration.conf,0,0,0,1760159057.2186375,
telecom_5g_network,google,gemini-2.0-flash,logs_config,True,True,0.95,10,5.144576072692871,True,"Identified RSA, ECDSA, HAS-160, EC-K_SIG, K_SIG, and TLSv1.3 configurations. RSA and ECDSA are used in certificates, authentication, and key exchange. HAS-160 is used for integrity. EC-K_SIG and K_SIG are Korean domestic algorithms. Warnings indicate vulnerabilities in RSA key exchange and the need to phase out Hash-160.",data/test_files/logs_config/telecom_5g_network.conf,0,0,0,1760159063.3685787,
tls_cipher_negotiation_warnings,google,gemini-2.0-flash,logs_config,False,True,1.0,11,7.77597188949585,True,"The analysis detected several vulnerable cryptographic algorithms and configurations, including RSA-1024, Triple DES, Stream Ciphers, Hash128, Hash-160, KEY_EX-1024, and potentially vulnerable Korean domestic ciphers. These findings indicate a need for immediate upgrades and migration to quantum-resistant alternatives.",data/test_files/logs_config/tls_cipher_negotiation_warnings.log,0,0,0,1760159072.1499155,
vpn_server_runtime,google,gemini-2.0-flash,logs_config,True,True,0.9,4,4.394878625869751,True,"Detected RSA, Diffie-Hellman, and AES-256-CBC usage. The TLS cipher suite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 is also detected. These algorithms are considered vulnerable in the post-quantum era and should be considered for migration.",data/test_files/logs_config/vpn_server_runtime.log,0,0,0,1760159077.5492303,
AdvancedComputationalFramework,openai,gpt-4,source_code,True,True,0.5,1,12.439952611923218,True,The source code appears to contain an implementation of RSA within the process_modular_arithmetic function in the LargeNumberEngine class. No other quantum-vulnerable cryptographic algorithms were detected.,data/test_files/source_code/AdvancedComputationalFramework.rb,0,0,0,1760159091.0516028,
AdvancedCryptographicOrchestrator,openai,gpt-4,source_code,True,True,0.7,3,12.576507091522217,True,"Detected usage of ECC and SHA-256, and PKCS#1 v1.5 padding scheme. No evidence of other quantum-vulnerable algorithms or insecure practices.",data/test_files/source_code/AdvancedCryptographicOrchestrator.java,0,0,0,1760159104.6519759,
AdvancedMathematicalFramework,openai,gpt-4,source_code,True,True,0.6,3,9.58576488494873,True,The code uses Korean domestic algorithms and SHA-256 with reduced security. It also uses potentially insecure random number generators.,data/test_files/source_code/AdvancedMathematicalFramework.rs,0,0,0,1760159115.2577772,
AutomotiveSecurityUnit,openai,gpt-4,source_code,True,True,0.5,1,17.085599899291992,True,"The code appears to implement custom symmetric ciphers, which could be vulnerable to Grover's algorithm in a post-quantum context. However, no specific quantum-vulnerable algorithms or weak hash functions were detected.",data/test_files/source_code/AutomotiveSecurityUnit.cpp,0,0,0,1760159133.359618,
BankingSecurityModule,openai,gpt-4,source_code,True,True,0.7,1,12.405944108963013,True,"The code appears to implement a block cipher similar to the Korean SEED algorithm, based on the S-box constants. No other vulnerable cryptographic algorithms were detected.",data/test_files/source_code/BankingSecurityModule.java,0,0,0,1760159146.7860374,
BlockchainCryptographyEngine,openai,gpt-4,source_code,True,True,0.7,3,13.6714186668396,True,"The code uses Elliptic Curve Cryptography (ECC) for key generation and signing, and SHA-256 for hashing. It also uses a potentially insecure random number generator (SecureRandom). No other vulnerable cryptographic algorithms were detected.",data/test_files/source_code/BlockchainCryptographyEngine.java,0,0,0,1760159161.4791155,
CorporateSecurityOrchestrator,openai,gpt-4,source_code,True,True,0.6,3,18.25510835647583,True,The code uses ECC for asymmetric cryptography and SHA-256 for hashing. It also uses PKCS#1 v1.5 padding scheme. No other vulnerable cryptographic algorithms were detected.,data/test_files/source_code/CorporateSecurityOrchestrator.py,0,0,0,1760159180.750728,
CorporateVPNManager,openai,gpt-4,source_code,True,True,0.7,1,12.540051221847534,True,"The code appears to implement a triple-round Feistel encryption, which is similar to 3DES, a symmetric cipher vulnerable to Grover's algorithm. No other quantum-vulnerable cryptographic implementations were detected.",data/test_files/source_code/CorporateVPNManager.java,0,0,0,1760159194.3080997,
DigitalCertificateValidator,openai,gpt-4,source_code,True,True,0.7,2,21.60713243484497,True,The code contains a quantum-vulnerable RSA implementation and uses a weak hash function (SHA-1).,data/test_files/source_code/DigitalCertificateValidator.java,0,0,0,1760159216.9311225,
DistributedComputationEngine,openai,gpt-4,source_code,True,True,0.5,1,19.2801570892334,True,"The source code appears to implement a custom hash function similar to SHA-256, which may have reduced security due to its custom implementation. No other quantum-vulnerable cryptographic algorithms were detected.",data/test_files/source_code/DistributedComputationEngine.py,0,0,0,1760159237.2282834,
DistributedComputeManager,openai,gpt-4,source_code,True,True,1.0,0,19.782981157302856,True,No vulnerable cryptographic algorithms detected in the provided source code.,data/test_files/source_code/DistributedComputeManager.js,0,0,0,1760159258.0281231,
EnterpriseDataSecurityFramework,openai,gpt-4,source_code,True,True,0.5,1,21.146016597747803,True,"The code appears to implement Elliptic Curve Cryptography (ECC) operations, which are vulnerable to quantum attacks. No other quantum-vulnerable cryptographic implementations were detected.",data/test_files/source_code/EnterpriseDataSecurityFramework.c,0,0,0,1760159280.1895785,
EnterpriseSecurityGateway,openai,gpt-4,source_code,True,True,0.5,2,15.009548902511597,True,"The source code contains implementations of RSA and ECC, which are quantum-vulnerable algorithms. No other vulnerable algorithms were detected.",data/test_files/source_code/EnterpriseSecurityGateway.java,0,0,0,1760159296.2177472,
HardwareSecurity,openai,gpt-4,source_code,True,True,0.5,2,20.420748233795166,True,The code uses SHA-1 hash function which is considered weak and also uses SecureRandom class for random number generation which might be insecure depending on the underlying implementation.,data/test_files/source_code/HardwareSecurity.java,0,0,0,1760159317.6521056,
IoTDeviceSecurityController,openai,gpt-4,source_code,True,True,1.0,0,17.825145721435547,True,No vulnerable cryptographic algorithms detected in the provided source code.,data/test_files/source_code/IoTDeviceSecurityController.go,0,0,0,1760159336.4923627,
LegacyPKISystem,openai,gpt-4,source_code,True,True,0.8,2,26.71417737007141,True,"The provided code implements the DSA algorithm, which is vulnerable to quantum attacks. It also uses a SHA-1 hash function, which is considered weak due to its vulnerability to collision attacks.",data/test_files/source_code/LegacyPKISystem.java,0,0,0,1760159364.2271938,
MathematicalTransformEngine,openai,gpt-4,source_code,True,True,0.7,3,18.060032606124878,True,"Detected RSA and ECC implementations, and insecure random number generator usage. No evidence of other vulnerable algorithms or cryptographic libraries.",data/test_files/source_code/MathematicalTransformEngine.java,0,0,0,1760159383.308703,
MediaStreamProtection,openai,gpt-4,source_code,True,True,0.8,1,18.360642194747925,True,"The provided source code appears to implement the RC4 stream cipher, which is vulnerable to Grover's algorithm in a post-quantum context. No other quantum-vulnerable cryptographic algorithms were detected.",data/test_files/source_code/MediaStreamProtection.java,0,0,0,1760159402.6883602,
QuantumResistantMessaging,openai,gpt-4,source_code,True,True,0.5,1,20.732640743255615,True,"The code uses java.security.SecureRandom for random number generation, which may not be secure enough for cryptographic purposes.",data/test_files/source_code/QuantumResistantMessaging.java,0,0,0,1760159424.4402878,
QuantumSafeTransitionManager,openai,gpt-4,source_code,True,True,0.7,6,22.553646087646484,True,The code uses OpenSSL library and has a hybrid system that mixes quantum-vulnerable and quantum-resistant algorithms. It has obfuscated implementations of post-quantum lattice-based and hash functions. It also uses ECC and DSA through the DiscreteLogarithmEngine class and AES-128 through the SymmetricTransformEngine class.,data/test_files/source_code/QuantumSafeTransitionManager.cpp,0,0,0,1760159448.0095172,
SecureChatApplication,openai,gpt-4,source_code,False,True,0.5,1,15.89524793624878,True,The source code uses SecureRandom for random number generation which could be potentially insecure.,data/test_files/source_code/SecureChatApplication.java,0,0,0,1760159464.9187984,
SecureCloudStorage,openai,gpt-4,source_code,True,True,0.9,1,22.441296815872192,True,"The provided source code appears to implement a block cipher similar to AES-256, which is vulnerable to Grover's algorithm in a post-quantum context. No other quantum-vulnerable cryptographic algorithms were detected.",data/test_files/source_code/SecureCloudStorage.java,0,0,0,1760159488.3745985,
SecureTransactionProcessor,openai,gpt-4,source_code,True,True,0.5,1,19.468286275863647,True,"The provided code appears to use the SHA-256 hash function, which may have reduced security in a post-quantum context. No other explicit cryptographic function calls or library usage were detected.",data/test_files/source_code/SecureTransactionProcessor.go,0,0,0,1760159508.8589618,
StealthCryptographicLibrary,openai,gpt-4,source_code,True,True,0.7,5,29.968261241912842,True,"Detected RSA and ECC implementations, SHA-256 hash function, and OAEP padding scheme. No evidence of Korean domestic algorithms, symmetric ciphers vulnerable to Grover's algorithm, insecure RNGs and KDFs, hybrid systems, legacy libraries, or implementation-specific vulnerabilities.",data/test_files/source_code/StealthCryptographicLibrary.py,0,0,0,1760159539.8496468,
TelecommunicationsSecurityHub,openai,gpt-4,source_code,True,True,0.5,1,13.869384765625,True,"The code appears to use a weak hash function, possibly SHA-1, as indicated by the digest output size of 20 bytes (160 bits). No other explicit cryptographic vulnerabilities were detected.",data/test_files/source_code/TelecommunicationsSecurityHub.java,0,0,0,1760159554.7366188,
a5_trivium_stream_ciphers,openai,gpt-4,source_code,False,True,1.0,0,14.453131198883057,True,No vulnerable cryptographic algorithms detected in the provided source code.,data/test_files/source_code/a5_trivium_stream_ciphers.py,0,0,0,1760159570.2063181,
aes_advanced_encryption,openai,gpt-4,source_code,True,True,0.9,1,21.535621404647827,True,"The code appears to implement the AES symmetric cipher, which is vulnerable to Grover's algorithm in a post-quantum context.",data/test_files/source_code/aes_advanced_encryption.java,0,0,0,1760159592.762234,
aria_korean_block_cipher,openai,gpt-4,source_code,True,True,0.7,1,27.99886393547058,True,"The code appears to implement the ARIA block cipher, a Korean domestic algorithm. No other vulnerable cryptographic implementations were detected.",data/test_files/source_code/aria_korean_block_cipher.py,0,0,0,1760159621.779753,
aria_sha256_ecdsa_government,openai,gpt-4,source_code,True,True,0.7,2,22.74553608894348,True,Detected usage of ARIA in KoreanFinancialProcessor class and SHA-256 with reduced security in GovernmentApprovedHasher class.,data/test_files/source_code/aria_sha256_ecdsa_government.py,0,0,0,1760159645.5479777,
blowfish_symmetric_encryption,openai,gpt-4,source_code,False,True,1.0,0,21.617501974105835,True,No vulnerable cryptographic algorithms detected in the provided source code.,data/test_files/source_code/blowfish_symmetric_encryption.c,0,0,0,1760159668.1835182,
camellia_block_cipher,openai,gpt-4,source_code,True,True,0.9,1,15.692330121994019,True,"The code implements the Camellia symmetric key block cipher. While Camellia is not inherently quantum-vulnerable, symmetric ciphers are generally susceptible to Grover's algorithm, which can reduce their effective security level by half in a quantum computing context. However, Camellia with a 256-bit key (as implemented here) would still have an effective security level of 128 bits against Grover's algorithm, which is considered secure.",data/test_files/source_code/camellia_block_cipher.c,0,0,0,1760159684.8966851,
cast_feistel_cipher,openai,gpt-4,source_code,False,True,0.5,1,38.909087896347046,True,"The code appears to implement a Feistel cipher, which is a symmetric cipher vulnerable to Grover's algorithm. No other vulnerable cryptographic algorithms were detected.",data/test_files/source_code/cast_feistel_cipher.c,0,0,0,1760159724.820581,
chacha20_poly1305_aead,openai,gpt-4,source_code,True,True,0.5,1,23.869333505630493,True,"The code appears to implement a stream cipher, which is a symmetric cipher. However, it is not clear if it is specifically AES-128, 3DES, DES, or RC4. No other quantum-vulnerable cryptographic algorithms were detected.",data/test_files/source_code/chacha20_poly1305_aead.java,0,0,0,1760159749.704319,
cloud_security_orchestrator,openai,gpt-4,source_code,True,True,0.7,3,10.652143955230713,True,"The code appears to use AES-128 for symmetric encryption, which is vulnerable to Grover's algorithm. It also uses SHA-256 for hashing, which has reduced security against quantum attacks. The code uses secrets.token_bytes() for random number generation, which may not be secure enough for cryptographic purposes.",data/test_files/source_code/cloud_security_orchestrator.py,0,0,0,1760159761.370638,
database_encryption_engine,openai,gpt-4,source_code,True,True,0.7,1,25.223541021347046,True,"The code appears to implement a Feistel network with 16 rounds and a 64-bit block size, which is similar to the DES symmetric cipher. However, no other quantum-vulnerable cryptographic algorithms were detected.",data/test_files/source_code/database_encryption_engine.c,0,0,0,1760159787.6091142,
diffie_hellman_key_exchange,openai,gpt-4,source_code,True,True,0.7,2,21.348839282989502,True,"The code appears to implement the Diffie-Hellman key exchange algorithm, which is vulnerable to quantum attacks. It also uses the SecureRandom class for random number generation, which may not be secure enough for cryptographic purposes.",data/test_files/source_code/diffie_hellman_key_exchange.java,0,0,0,1760159809.9740348,
digital_identity_platform,openai,gpt-4,source_code,True,True,0.7,3,22.41838264465332,True,"The code uses Elliptic Curve Cryptography (ECC) for key generation, public key derivation, point multiplication, key exchange, and digital signature creation. It also uses SHA-256 for hashing and an insecure random number generator for key generation.",data/test_files/source_code/digital_identity_platform.js,0,0,0,1760159833.4091392,
elgamal_diffie_hellman_pki,openai,gpt-4,source_code,True,True,0.7,3,21.1028733253479,True,"Detected usage of Diffie-Hellman algorithm in KoreanModularKeyExchange class, SHA-256 with reduced security in derive_session_key method, and insecure random number generators in KoreanPublicKeySystem and KoreanModularKeyExchange classes.",data/test_files/source_code/elgamal_diffie_hellman_pki.py,0,0,0,1760159855.532306,
elliptic_curve_cryptography,openai,gpt-4,source_code,True,True,0.7,2,21.417047262191772,True,The code implements Elliptic Curve Cryptography (ECC/ECDSA) and uses SecureRandom for random number generation. No other vulnerable cryptographic algorithms were detected.,data/test_files/source_code/elliptic_curve_cryptography.java,0,0,0,1760159877.9694443,
financial_risk_analyzer,openai,gpt-4,source_code,True,True,0.7,3,18.18466305732727,True,"The code uses RSA for key generation, signing, and verification, which is vulnerable to quantum attacks. It also uses SHA-256 for hashing, which has reduced security against quantum attacks. PKCS#1 v1.5 padding is used, which is known to have vulnerabilities.",data/test_files/source_code/financial_risk_analyzer.py,0,0,0,1760159897.174566,
financial_transaction_processor,openai,gpt-4,source_code,True,True,0.7,1,18.80431079864502,True,"The code appears to implement a Korean domestic encryption algorithm, but the specific algorithm is not explicitly identified. No other vulnerable cryptographic algorithms were detected.",data/test_files/source_code/financial_transaction_processor.c,0,0,0,1760159916.9947035,
financial_transaction_security,openai,gpt-4,source_code,True,True,0.7,2,19.665494441986084,True,The code appears to use AES-128 for block cipher encryption and a reduced security implementation of SHA-256 for digest computation. No other vulnerable cryptographic algorithms were detected.,data/test_files/source_code/financial_transaction_security.c,0,0,0,1760159937.681393,
government_document_signer,openai,gpt-4,source_code,True,True,0.8,4,25.299855709075928,True,The code uses Elliptic Curve Cryptography (ECC) and Korean domestic algorithms (KCDSA and HAS-160). It also uses an insecure random number generator with a fixed seed.,data/test_files/source_code/government_document_signer.c,0,0,0,1760159963.9956205,
idea_international_encryption,openai,gpt-4,source_code,True,True,0.9,1,18.45688772201538,True,"The code appears to implement the IDEA symmetric cipher, which is vulnerable to Grover's algorithm in a post-quantum context.",data/test_files/source_code/idea_international_encryption.java,0,0,0,1760159983.466579,
iot_device_security,openai,gpt-4,source_code,True,True,0.5,1,27.036572456359863,True,"The source code appears to use a lightweight block cipher with a 128-bit key, which may be vulnerable to Grover's algorithm in a post-quantum context. However, no other quantum-vulnerable cryptographic algorithms were detected.",data/test_files/source_code/iot_device_security.c,0,0,0,1760160011.5192964,
lattice_isogeny_postquantum,openai,gpt-4,source_code,True,True,0.5,1,21.25644278526306,True,The code uses an insecure random number generator in the generate_lattice_keypair method. No other vulnerable cryptographic implementations were detected.,data/test_files/source_code/lattice_isogeny_postquantum.py,0,0,0,1760160033.7915177,
legacy_authentication_system,openai,gpt-4,source_code,True,True,0.7,2,17.86385488510132,True,"The code uses RSA for asymmetric key generation and SHA-1 for hashing, both of which are quantum-vulnerable.",data/test_files/source_code/legacy_authentication_system.c,0,0,0,1760160052.6727285,
md5_sha1_weak_hash,openai,gpt-4,source_code,True,True,0.9,1,18.23095941543579,True,The code uses weak hash functions MD5 and SHA-1 in the _compute_legacy_digest and _compute_160bit_digest functions respectively.,data/test_files/source_code/md5_sha1_weak_hash.py,0,0,0,1760160071.9276297,
medical_device_encryption,openai,gpt-4,source_code,True,True,0.6,3,23.42224383354187,True,The code appears to implement a symmetric encryption engine similar to AES and a hash processor similar to SHA-1. There is also a potentially insecure random number generator used for entropy generation.,data/test_files/source_code/medical_device_encryption.rs,0,0,0,1760160096.3693323,
military_communication_system,openai,gpt-4,source_code,True,True,0.5,1,20.244336366653442,True,"The code appears to use a cryptographic hash function similar to SHA-256, but with reduced security due to the lack of a secure padding scheme. No other vulnerable cryptographic algorithms were detected.",data/test_files/source_code/military_communication_system.c,0,0,0,1760160117.6346378,
mobile_secure_messenger,openai,gpt-4,source_code,True,True,0.7,2,23.747859954833984,True,Detected usage of Elliptic Curve Cryptography (ECC) and insecure random number generation (RNG). No other vulnerable cryptographic implementations were found.,data/test_files/source_code/mobile_secure_messenger.c,0,0,0,1760160142.3964617,
network_infrastructure_monitor,openai,gpt-4,source_code,True,True,0.7,4,22.829593420028687,True,"The source code contains implementations of RSA and ECC/ECDSA/ECDH, which are quantum-vulnerable. It also uses a potentially insecure random number generator. A weak hash function (SHA-256 with reduced security) is also detected.",data/test_files/source_code/network_infrastructure_monitor.cpp,0,0,0,1760160166.2437167,
ntru_lattice_encryption,openai,gpt-4,source_code,True,True,0.5,1,19.337247371673584,True,"The source code uses java.security.SecureRandom for random number generation, which may not be secure enough for cryptographic purposes.",data/test_files/source_code/ntru_lattice_encryption.java,0,0,0,1760160186.5948544,
openssl_des_enc,openai,gpt-4,source_code,True,True,0.7,2,20.83999991416931,True,"The code appears to be using the OpenSSL library and a DES-like block cipher, which is quantum-vulnerable. No other specific quantum-vulnerable cryptographic implementations were detected.",data/test_files/source_code/openssl_des_enc.c,0,0,0,1760160208.4557142,
quantum_resistant_messenger,openai,gpt-4,source_code,True,True,1.0,0,25.453378677368164,True,"No vulnerable cryptographic algorithms detected in the provided source code. The code appears to implement a lattice-based post-quantum cryptographic system, which is considered to be resistant to quantum computer attacks.",data/test_files/source_code/quantum_resistant_messenger.py,0,0,0,1760160234.9252508,
rc4_stream_generator,openai,gpt-4,source_code,True,True,0.7,1,18.780170679092407,True,"The source code contains an implementation of the RC4 symmetric cipher, which is vulnerable to Grover's algorithm in a post-quantum context.",data/test_files/source_code/rc4_stream_generator.c,0,0,0,1760160254.7212481,
rsa_gen,openai,gpt-4,source_code,True,True,0.7,2,28.945857763290405,True,"The source code uses the OpenSSL library and has a RSA implementation, which is quantum-vulnerable. No other vulnerable cryptographic algorithms were detected.",data/test_files/source_code/rsa_gen.c,0,0,0,1760160284.6809685,
rsa_modular_exponentiation,openai,gpt-4,source_code,True,True,0.8,3,17.30965805053711,True,"The source code contains RSA key pair generation, SHA-1 hash function, and PKCS#1 v1.5 padding scheme, which are all quantum-vulnerable cryptographic implementations.",data/test_files/source_code/rsa_modular_exponentiation.py,0,0,0,1760160303.0089483,
rsa_public_key_system,openai,gpt-4,source_code,False,False,0.0,0,54.51954698562622,False,Failed to parse JSON response,data/test_files/source_code/rsa_public_key_system.java,0,0,0,1760160358.5437787,
salsa20_stream_cipher,openai,gpt-4,source_code,True,True,0.8,1,12.067777156829834,True,"The source code implements Salsa20 and ChaCha stream ciphers. These are symmetric ciphers that are not vulnerable to Grover's algorithm, but they are not quantum-resistant.",data/test_files/source_code/salsa20_stream_cipher.c,0,0,0,1760160371.6301308,
secure_messaging_protocol,openai,gpt-4,source_code,True,True,0.7,3,12.49379014968872,True,"The source code uses RSA for encryption, decryption, signing, and verification, and ECC for key generation. It also uses PKCS#1 v1.5 padding scheme. These algorithms are quantum-vulnerable.",data/test_files/source_code/secure_messaging_protocol.rb,0,0,0,1760160385.1412408,
secure_video_streaming,openai,gpt-4,source_code,False,True,1.0,0,13.530161619186401,True,No vulnerable cryptographic algorithms detected in the provided source code.,data/test_files/source_code/secure_video_streaming.c,0,0,0,1760160399.68583,
seed_aes_hybrid_banking,openai,gpt-4,source_code,True,True,0.7,2,25.064282655715942,True,Detected ARIA in KoreanBankingCipher class and AES-128 in InternationalStandardProcessor class,data/test_files/source_code/seed_aes_hybrid_banking.py,0,0,0,1760160425.7729862,
seed_stream_cipher,openai,gpt-4,source_code,True,True,0.7,1,21.265257596969604,True,"The code appears to implement a 16-round Feistel-like structure encryption which is a characteristic of the ARIA algorithm, a Korean domestic algorithm. No other vulnerable cryptographic algorithms were detected.",data/test_files/source_code/seed_stream_cipher.py,0,0,0,1760160448.063432,
serpent_substitution_network,openai,gpt-4,source_code,True,True,1.0,1,22.046919584274292,True,"The source code contains an implementation of the Serpent symmetric key block cipher, which is not quantum-resistant and could be vulnerable to quantum attacks.",data/test_files/source_code/serpent_substitution_network.c,0,0,0,1760160471.1305947,
sha1_rsa_legacy_documents,openai,gpt-4,source_code,True,True,0.7,4,29.680081129074097,True,"The code contains a quantum-vulnerable RSA implementation, a Korean domestic algorithm HAS-160, an insecure random number generator, and a legacy hash function.",data/test_files/source_code/sha1_rsa_legacy_documents.py,0,0,0,1760160501.8293889,
skipjack_government_cipher,,,,False,False,0,0,7.854700803756714,False,,,0,0,0,0,"OpenAI API Error: Error code: 429 - {'error': {'message': 'Rate limit reached for gpt-4 in organization org-bF8dnnx4LFtD8JT5QTL8bo6M on tokens per min (TPM): Limit 10000, Used 6592, Requested 3462. Please try again in 324ms. Visit https://platform.openai.com/account/rate-limits to learn more.', 'type': 'tokens', 'param': None, 'code': 'rate_limit_exceeded'}}"
smart_card_security,openai,gpt-4,source_code,True,True,0.8,1,9.971660852432251,True,The code uses a TEA-like cipher for smart card authentication which is a symmetric cipher vulnerable to Grover's algorithm.,data/test_files/source_code/smart_card_security.c,0,0,0,1760160521.6931546,
tiger_hash_function,openai,gpt-4,source_code,False,True,1.0,0,16.346908569335938,True,"The provided code implements the Tiger cryptographic hash function, which is not known to be vulnerable to quantum attacks. No other cryptographic algorithms were detected.",data/test_files/source_code/tiger_hash_function.c,0,0,0,1760160539.0607677,
twofish_advanced_encryption,openai,gpt-4,source_code,True,True,0.9,1,27.000980615615845,True,"The source code implements the Twofish symmetric encryption algorithm, which is not quantum-vulnerable but could be susceptible to implementation-specific vulnerabilities.",data/test_files/source_code/twofish_advanced_encryption.c,0,0,0,1760160567.075881,
whirlpool_hash_digest,openai,gpt-4,source_code,False,True,1.0,0,24.100369691848755,True,The provided code implements the Whirlpool cryptographic hash function. No quantum-vulnerable cryptographic algorithms were detected.,data/test_files/source_code/whirlpool_hash_digest.c,0,0,0,1760160592.2046134,
wireless_network_encryption,openai,gpt-4,source_code,True,True,0.9,1,23.915043354034424,True,"The provided source code uses an RC4-like stream cipher for wireless packet encryption, which is vulnerable to Grover's algorithm in a post-quantum context.",data/test_files/source_code/wireless_network_encryption.c,0,0,0,1760160617.140395,
adaptive_multi_tenant_crypto_orchestrator,openai,gpt-4,assembly_binary,True,True,0.6,5,25.427090644836426,True,"Detected RSA and Elliptic Curve operations, AES symmetric cipher, and memory allocation for key storage. No evidence of Korean algorithms, discrete logarithm computations, or side-channel vulnerabilities.",data/test_files/assembly_binary/adaptive_multi_tenant_crypto_orchestrator.s,0,0,0,1760160643.582038,
advanced_block_standard_operations,openai,gpt-4,assembly_binary,True,True,0.5,1,14.172426223754883,True,"The assembly code appears to implement AES-128, as evidenced by the presence of the AES S-box values in the data_402000 section. No other cryptographic algorithms were detected.",data/test_files/assembly_binary/advanced_block_standard_operations.s,0,0,0,1760160658.7760892,
aes_key_expansion_module,openai,gpt-4,assembly_binary,True,True,0.7,2,12.995692491531372,True,"The assembly code appears to implement AES-128 block cipher, which is vulnerable to quantum attacks. The evidence is based on the block transformation, key expansion, and decryption key derivation patterns in the assembly code, as well as memory allocation for key storage.",data/test_files/assembly_binary/aes_key_expansion_module.s,0,0,0,1760160672.7892768,
aria_encryption_engine,openai,gpt-4,assembly_binary,True,True,0.5,1,38.16375803947449,True,"The provided assembly code appears to implement a 128-bit block cipher that is vulnerable to Grover's algorithm, suggesting the use of AES-128. However, no other vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/aria_encryption_engine.s,0,0,0,1760160711.9734032,
automotive_ecu_cryptographic_unit,openai,gpt-4,assembly_binary,True,True,0.0,0,16.83241558074951,True,No vulnerable cryptographic algorithms detected in the provided assembly code.,data/test_files/assembly_binary/automotive_ecu_cryptographic_unit.s,0,0,0,1760160729.825444,
banking_transaction_processor,openai,gpt-4,assembly_binary,True,True,0.7,1,27.65016007423401,True,"The assembly code appears to implement a DES-like symmetric cipher, as evidenced by the feistel_function, block_key_schedule, and block_encrypt_block functions. No other vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/banking_transaction_processor.s,0,0,0,1760160758.4953692,
biometric_authentication_engine,openai,gpt-4,assembly_binary,True,True,0.0,0,11.005372762680054,True,No vulnerable cryptographic algorithms were detected in the provided assembly/binary code.,data/test_files/assembly_binary/biometric_authentication_engine.s,0,0,0,1760160770.5159998,
blake2b_hash_engine,openai,gpt-4,assembly_binary,True,True,0.8,1,38.603708028793335,True,"The provided assembly code appears to implement the BLAKE2b cryptographic hash function, which is a quantum-resistant algorithm. No other cryptographic algorithms were detected.",data/test_files/assembly_binary/blake2b_hash_engine.s,0,0,0,1760160810.1382334,
block_cipher_operations,openai,gpt-4,assembly_binary,True,True,0.5,1,21.510568618774414,True,"The provided assembly code appears to implement the AES-128 algorithm, as evidenced by the presence of the AES S-box in the data_402000 section.",data/test_files/assembly_binary/block_cipher_operations.s,0,0,0,1760160832.6685474,
blockchain_consensus_validator,openai,gpt-4,assembly_binary,False,True,0.5,1,28.772730112075806,True,SHA-1 hash function detected in the merkle_tree_computation function.,data/test_files/assembly_binary/blockchain_consensus_validator.s,0,0,0,1760160862.4551008,
chacha20_stream_processor,openai,gpt-4,assembly_binary,True,True,0.6,2,30.79374384880066,True,"The code appears to implement a stream cipher with a 256-bit key and 64-bit nonce, which is consistent with the structure of the Salsa20/Chacha20 stream ciphers, a variant of AES-128. Memory allocation for a 256-bit key and a 64-bit nonce is also detected.",data/test_files/assembly_binary/chacha20_stream_processor.s,0,0,0,1760160894.2628903,
cloud_storage_encryption_processor,openai,gpt-4,assembly_binary,True,True,0.0,0,22.43015766143799,True,No vulnerable cryptographic algorithms were detected in the provided assembly code.,data/test_files/assembly_binary/cloud_storage_encryption_processor.s,0,0,0,1760160917.7102487,
crypto_trading_platform_engine,openai,gpt-4,assembly_binary,False,True,0.5,3,28.374022483825684,True,"The binary code shows evidence of symmetric cipher and large integer arithmetic operations, as well as memory allocation for key storage. However, no explicit cryptographic library calls or API signatures were detected.",data/test_files/assembly_binary/crypto_trading_platform_engine.s,0,0,0,1760160947.1048703,
cryptographic_wallet_manager,openai,gpt-4,assembly_binary,False,True,0.5,1,25.127001523971558,True,"The assembly code appears to implement the secp256k1 elliptic curve point multiplication, which is commonly used in cryptographic applications. However, no other vulnerable cryptographic patterns were detected.",data/test_files/assembly_binary/cryptographic_wallet_manager.s,0,0,0,1760160973.2508497,
diffie_hellman_key_exchange,openai,gpt-4,assembly_binary,True,True,0.5,2,28.71381974220276,True,"The provided assembly code appears to implement a discrete logarithm-based key exchange protocol, potentially vulnerable to quantum attacks. Large integer arithmetic operations are also detected, which are common in cryptographic algorithms. However, no specific vulnerable cryptographic algorithms, such as RSA, elliptic curve operations, or specific Korean algorithms, were detected.",data/test_files/assembly_binary/diffie_hellman_key_exchange.s,0,0,0,1760161002.9796991,
digital_signature_processor,openai,gpt-4,assembly_binary,True,True,0.5,2,19.7671537399292,True,"The assembly code appears to implement RSA modular exponentiation and large integer arithmetic operations, which are vulnerable to quantum attacks. No other vulnerable cryptographic patterns were detected.",data/test_files/assembly_binary/digital_signature_processor.s,0,0,0,1760161023.7631264,
distributed_blockchain_consensus_engine,openai,gpt-4,assembly_binary,True,True,0.5,2,30.26674461364746,True,"Detected BLS12-381 elliptic curve operations and modular arithmetic, both potentially vulnerable to quantum attacks.",data/test_files/assembly_binary/distributed_blockchain_consensus_engine.s,0,0,0,1760161055.0466616,
dsa_signature_verification,openai,gpt-4,assembly_binary,False,False,0.0,0,70.23429441452026,False,Failed to parse JSON response,data/test_files/assembly_binary/dsa_signature_verification.s,0,0,0,1760161126.297493,
elliptic_curve_point_operations,openai,gpt-4,assembly_binary,False,True,1.0,0,9.926605701446533,True,No vulnerable cryptographic algorithms were detected in the provided assembly code.,data/test_files/assembly_binary/elliptic_curve_point_operations.s,0,0,0,1760161137.2405992,
elliptic_curve_scalar_multiplication,openai,gpt-4,assembly_binary,False,True,0.7,3,11.249091148376465,True,The code implements Elliptic Curve Scalar Multiplication and uses Modular Arithmetic Operations. Memory allocation for cryptographic key storage is also detected.,data/test_files/assembly_binary/elliptic_curve_scalar_multiplication.s,0,0,0,1760161149.504658,
elliptic_mathematical_operations,openai,gpt-4,assembly_binary,False,True,0.1,1,9.198851823806763,True,"The assembly code appears to implement modular arithmetic operations, which are commonly used in cryptographic algorithms. However, no specific vulnerable cryptographic algorithm was detected.",data/test_files/assembly_binary/elliptic_mathematical_operations.s,0,0,0,1760161159.7190745,
ellipticsignature_securehashalgo1_operations,openai,gpt-4,assembly_binary,True,True,0.5,1,9.061391592025757,True,SHA-1 hash function detected in the assembly code.,data/test_files/assembly_binary/ellipticsignature_securehashalgo1_operations.s,0,0,0,1760161169.8003304,
embedded_authentication_processor,openai,gpt-4,assembly_binary,True,True,0.6,2,9.746630191802979,True,Detected usage of SEED S-boxes in lightweight_key_schedule function and a domestic Korean algorithm in domesticn_lightweight_transform function.,data/test_files/assembly_binary/embedded_authentication_processor.s,0,0,0,1760161180.5675466,
embedded_iot_security_processor,openai,gpt-4,assembly_binary,True,True,0.6,3,35.96448493003845,True,"Detected usage of Elliptic Curve Cryptography, Big Integer Operations, and Memory Allocation for Key Storage. No other vulnerable cryptographic patterns were detected.",data/test_files/assembly_binary/embedded_iot_security_processor.s,0,0,0,1760161217.5458274,
enterprise_data_protection_engine,openai,gpt-4,assembly_binary,True,True,0.6,4,21.98208522796631,True,"The assembly code shows evidence of using MD5 hash function and large integer arithmetic operations, which are quantum-vulnerable. It also shows evidence of using SEED S-boxes, a Korean cryptographic algorithm. Memory allocation for key storage is also detected.",data/test_files/assembly_binary/enterprise_data_protection_engine.s,0,0,0,1760161240.5419972,
feistel_network_operations,openai,gpt-4,assembly_binary,True,True,0.5,1,23.728084087371826,True,Detected AES-128 due to the presence of AES S-box values in data_402000. No other vulnerable cryptographic algorithms were detected.,data/test_files/assembly_binary/feistel_network_operations.s,0,0,0,1760161265.2863333,
financial_cryptographic_accelerator,openai,gpt-4,assembly_binary,True,True,0.6,4,31.90593671798706,True,"The assembly code shows evidence of RSA modular exponentiation, large integer arithmetic, and MD5 hash function implementation. Memory allocation for key storage is also detected.",data/test_files/assembly_binary/financial_cryptographic_accelerator.s,0,0,0,1760161298.2148054,
government_classified_system_processor,openai,gpt-4,assembly_binary,True,True,0.3,1,23.916691064834595,True,"The assembly code appears to implement a symmetric cipher, as evidenced by the XOR operation in the document_protection_layer function. However, no specific vulnerable algorithm such as DES, 3DES, RC4, or AES-128 was explicitly identified. No other vulnerable cryptographic patterns were detected.",data/test_files/assembly_binary/government_classified_system_processor.s,0,0,0,1760161323.1473477,
hash_digest_operations,openai,gpt-4,assembly_binary,False,True,0.7,1,11.306673288345337,True,"The assembly code appears to implement the MD5 hash function, which is vulnerable to quantum attacks.",data/test_files/assembly_binary/hash_digest_operations.s,0,0,0,1760161335.4687357,
hight_lightweight_cipher,openai,gpt-4,assembly_binary,True,True,0.7,1,35.65541625022888,True,"The provided assembly code implements a Lightweight Block Cipher, which is a symmetric cipher vulnerable to quantum attacks. No other vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/hight_lightweight_cipher.s,0,0,0,1760161372.139214,
hybrid_banking_security_system,openai,gpt-4,assembly_binary,True,True,0.6,3,26.01181674003601,True,Detected RSA modular exponentiation and large integer arithmetic patterns in the authenticate_client_identity function. Also detected memory allocation for cryptographic key storage in the generate_session_key_material function.,data/test_files/assembly_binary/hybrid_banking_security_system.s,0,0,0,1760161399.1680412,
industrial_control_security,openai,gpt-4,assembly_binary,True,True,0.5,2,13.16913390159607,True,"The assembly code appears to implement AES-128 encryption, as evidenced by the fast_cipher_key_schedule function. No other vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/industrial_control_security.s,0,0,0,1760161413.3564394,
industrial_security_coprocessor,openai,gpt-4,assembly_binary,True,True,0.5,1,36.591938495635986,True,MD5 hash function detected based on the initial hash values used in the code.,data/test_files/assembly_binary/industrial_security_coprocessor.s,0,0,0,1760161450.9692338,
kcdsa_signature_generator,openai,gpt-4,assembly_binary,True,True,0.6,3,23.535826444625854,True,"The code appears to implement a DSA signature generation algorithm, with evidence of modular arithmetic operations and specific memory allocation patterns for cryptographic key storage.",data/test_files/assembly_binary/kcdsa_signature_generator.s,0,0,0,1760161475.5217586,
keyexchange_protocol_operations,openai,gpt-4,assembly_binary,True,True,0.1,1,9.605386734008789,True,"The provided assembly code appears to implement some form of modular arithmetic, as evidenced by the use of mul and div operations. However, no explicit cryptographic algorithms or library calls were detected.",data/test_files/assembly_binary/keyexchange_protocol_operations.s,0,0,0,1760161486.1472635,
korean_blockcipher_operations,openai,gpt-4,assembly_binary,True,True,0.0,0,17.832255363464355,True,No vulnerable cryptographic algorithms were detected in the provided assembly/binary code.,data/test_files/assembly_binary/korean_blockcipher_operations.s,0,0,0,1760161504.9983535,
lea_block_cipher_engine,openai,gpt-4,assembly_binary,True,True,0.5,2,25.29819416999817,True,Detected a symmetric cipher implementation in the fast_cipher_encrypt_block and fast_cipher_round_transformation functions. Also detected memory allocation for cryptographic key storage.,data/test_files/assembly_binary/lea_block_cipher_engine.s,0,0,0,1760161531.3120468,
legacy_hash_computation,openai,gpt-4,assembly_binary,True,True,0.5,1,23.89998960494995,True,"The assembly code appears to implement the MD5 hash function, which is vulnerable to quantum attacks. No other vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/legacy_hash_computation.s,0,0,0,1760161556.2314017,
legacy_pki_certificate_processor,openai,gpt-4,assembly_binary,False,True,0.0,0,27.552804231643677,True,No vulnerable cryptographic algorithms were detected in the provided assembly/binary code.,data/test_files/assembly_binary/legacy_pki_certificate_processor.s,0,0,0,1760161584.8024461,
md5_sha1_hash_processor,openai,gpt-4,assembly_binary,True,True,0.7,1,20.520312309265137,True,"The code appears to implement a legacy MD5 hash function, which is vulnerable to collision attacks and is not considered secure for most cryptographic applications.",data/test_files/assembly_binary/md5_sha1_hash_processor.s,0,0,0,1760161606.336995,
medical_device_security_controller,openai,gpt-4,assembly_binary,True,True,0.5,1,19.646987199783325,True,"The assembly code appears to implement a symmetric cipher, as evidenced by the XOR operation in the function domesticn_medical_cipher. However, the specific type of cipher (e.g., DES, 3DES, RC4, AES-128) could not be determined from the provided code.",data/test_files/assembly_binary/medical_device_security_controller.s,0,0,0,1760161627.0021822,
message_digest_128bit_operations,openai,gpt-4,assembly_binary,True,True,0.7,1,20.726276874542236,True,"The assembly code appears to implement the MD5 hash function, which is vulnerable to quantum attacks.",data/test_files/assembly_binary/message_digest_128bit_operations.s,0,0,0,1760161648.7517755,
mobile_cipher_engine,openai,gpt-4,assembly_binary,True,True,0.5,1,11.02896785736084,True,"The assembly code appears to implement the TEA symmetric cipher algorithm, which is potentially vulnerable to quantum attacks.",data/test_files/assembly_binary/mobile_cipher_engine.s,0,0,0,1760161660.7940643,
mobile_payment_security_engine,openai,gpt-4,assembly_binary,True,True,0.5,2,37.68778610229492,True,"Detected potential symmetric cipher and hash function implementations, possibly vulnerable to quantum attacks. No explicit cryptographic library calls or API signatures were found. No clear evidence of RSA, elliptic curve, discrete logarithm, or Korean algorithm signatures. No clear evidence of big integer libraries, memory allocation patterns for key storage, side-channel vulnerabilities, or assembly-level obfuscation.",data/test_files/assembly_binary/mobile_payment_security_engine.s,0,0,0,1760161699.5001895,
network_security_gateway,openai,gpt-4,assembly_binary,True,True,0.5,1,25.73660373687744,True,"The assembly code appears to implement a legacy block cipher, likely DES, based on the function names and operations. No other vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/network_security_gateway.s,0,0,0,1760161726.2543318,
neural_network_inference_accelerator,openai,gpt-4,assembly_binary,True,True,0.0,0,24.460489749908447,True,No vulnerable cryptographic algorithms were detected in the provided assembly/binary code.,data/test_files/assembly_binary/neural_network_inference_accelerator.s,0,0,0,1760161751.7320304,
ntru_polynomial_processor,openai,gpt-4,assembly_binary,True,True,0.5,2,35.40509557723999,True,"The code appears to implement polynomial ring operations and key storage, which are components of lattice-based cryptographic systems. These systems are considered to be resistant to quantum attacks. No other vulnerable cryptographic patterns were detected.",data/test_files/assembly_binary/ntru_polynomial_processor.s,0,0,0,1760161788.1582549,
obfuscated_crypto_library_dispatcher,openai,gpt-4,assembly_binary,True,True,0.6,5,17.439425706863403,True,"Detected RSA and Elliptic Curve operations, large integer arithmetic, memory allocation for key storage, and assembly-level obfuscation of crypto operations.",data/test_files/assembly_binary/obfuscated_crypto_library_dispatcher.s,0,0,0,1760161806.6170223,
openssl_des_enc,openai,gpt-4,assembly_binary,True,True,0.0,0,19.245010375976562,True,No vulnerable cryptographic algorithms were detected in the provided assembly/binary code.,data/test_files/assembly_binary/openssl_des_enc.asm,0,0,0,1760161826.8772438,
openssl_des_enc,,,,False,False,0,0,0,False,,,0,0,0,0,Input validation failed
poly1305_authenticator,openai,gpt-4,assembly_binary,True,True,0.7,1,21.23655390739441,True,"The provided assembly code appears to implement the Poly1305 algorithm, which is used for generating message authentication codes. This is evidenced by the presence of functions such as 'initialize_poly1305_state', 'load_authentication_key', 'process_message_chunks', 'finalize_authenticator', and 'compare_authentication_tag'. However, no other cryptographic algorithms were detected.",data/test_files/assembly_binary/poly1305_authenticator.s,0,0,0,1760161850.1422465,
polymorphic_malware_crypto_engine,openai,gpt-4,assembly_binary,True,True,0.0,0,20.8065824508667,True,No vulnerable cryptographic algorithms were detected in the provided assembly/binary code.,data/test_files/assembly_binary/polymorphic_malware_crypto_engine.s,0,0,0,1760161871.9629905,
polynomial_field_arithmetic_engine,openai,gpt-4,assembly_binary,False,True,0.5,2,31.021053075790405,True,"The assembly code shows evidence of elliptic curve point operations and scalar multiplication, as well as large integer and modular arithmetic operations. No other vulnerable cryptographic patterns were detected.",data/test_files/assembly_binary/polynomial_field_arithmetic_engine.s,0,0,0,1760161904.003495,
postquantum_multimodal_operations,openai,gpt-4,assembly_binary,False,True,0.0,0,14.61723017692566,True,No vulnerable cryptographic algorithms were detected in the provided assembly/binary code.,data/test_files/assembly_binary/postquantum_multimodal_operations.s,0,0,0,1760161919.6347604,
publickey_encryption_operations,openai,gpt-4,assembly_binary,True,True,0.1,1,15.525759935379028,True,"The assembly code appears to implement modular arithmetic operations, which are commonly used in cryptographic algorithms. However, no specific vulnerable cryptographic algorithm was detected.",data/test_files/assembly_binary/publickey_encryption_operations.s,0,0,0,1760161936.1744094,
publickey_modular_operations,openai,gpt-4,assembly_binary,True,True,0.5,1,12.681476354598999,True,"The assembly code appears to implement a modular exponentiation operation, which is a key component of many cryptographic algorithms, including RSA. However, no explicit cryptographic library calls or API signatures were detected.",data/test_files/assembly_binary/publickey_modular_operations.s,0,0,0,1760161949.8689213,
publickeyalgo_messagedigest5_operations,openai,gpt-4,assembly_binary,True,True,0.5,2,17.247400045394897,True,"Detected MD5 hash function and modular arithmetic operations, which are vulnerable to quantum attacks. No other vulnerable cryptographic patterns were detected.",data/test_files/assembly_binary/publickeyalgo_messagedigest5_operations.s,0,0,0,1760161968.1325092,
quantum_communication_relay,openai,gpt-4,assembly_binary,True,True,0.5,1,16.936219453811646,True,"The assembly code appears to implement a cryptographic hash function similar to MD5, as evidenced by the constant 0x67452301, which is the initial value of the A variable in the MD5 algorithm.",data/test_files/assembly_binary/quantum_communication_relay.s,0,0,0,1760161986.0848134,
quantum_cryptanalysis_simulation,openai,gpt-4,assembly_binary,False,True,0.1,1,28.62749218940735,True,"The code appears to be a simulation of post-quantum attacks on classical cryptographic algorithms. The only explicit cryptographic operation detected is modular arithmetic, which is used in many cryptographic algorithms, including RSA and Diffie-Hellman. However, no specific cryptographic algorithm was detected.",data/test_files/assembly_binary/quantum_cryptanalysis_simulation.s,0,0,0,1760162015.7339368,
quantum_migration_bridge_processor,openai,gpt-4,assembly_binary,True,True,0.0,0,18.863085508346558,True,No vulnerable cryptographic algorithms were detected in the provided assembly/binary code.,data/test_files/assembly_binary/quantum_migration_bridge_processor.s,0,0,0,1760162035.6151006,
quantum_resistant_lattice_operations,openai,gpt-4,assembly_binary,False,False,0.0,0,64.52938294410706,False,Failed to parse JSON response,data/test_files/assembly_binary/quantum_resistant_lattice_operations.s,0,0,0,1760162101.1579044,
quantum_resistant_migration_bridge,openai,gpt-4,assembly_binary,True,True,0.0,0,8.985172748565674,True,No vulnerable cryptographic algorithms were detected in the provided assembly code.,data/test_files/assembly_binary/quantum_resistant_migration_bridge.s,0,0,0,1760162111.1567175,
quantum_safe_communicator,openai,gpt-4,assembly_binary,True,True,0.5,1,13.614257574081421,True,"The assembly code appears to implement NTRU encryption, which is a post-quantum cryptographic algorithm. No other cryptographic algorithms were detected.",data/test_files/assembly_binary/quantum_safe_communicator.s,0,0,0,1760162125.7847943,
rsa_key_generation_engine,openai,gpt-4,assembly_binary,True,True,0.6,3,19.257096767425537,True,"The assembly code shows evidence of RSA modular exponentiation and large integer arithmetic patterns, as well as memory allocation patterns for cryptographic key storage. However, no evidence was found for other vulnerable cryptographic algorithms.",data/test_files/assembly_binary/rsa_key_generation_engine.s,0,0,0,1760162146.0563364,
salsa20_stream_cipher,openai,gpt-4,assembly_binary,False,True,0.5,2,24.119563341140747,True,"The code appears to implement a symmetric cipher similar to AES-128, as evidenced by the FastBlockCipherq function calls and 256-bit key initialization. Memory allocation for key storage is also detected. However, no other vulnerable cryptographic patterns were detected.",data/test_files/assembly_binary/salsa20_stream_cipher.s,0,0,0,1760162171.1890666,
satellite_communication_security,openai,gpt-4,assembly_binary,True,True,0.5,1,26.43873953819275,True,"The assembly code appears to implement symmetric encryption, as suggested by function calls to 'uplink_encryption_layer' and 'domesticn_satellite_cipher'. However, the specific encryption algorithm used could not be determined. No other vulnerable cryptographic patterns were detected.",data/test_files/assembly_binary/satellite_communication_security.s,0,0,0,1760162198.6460223,
secure_boot_verification_processor,openai,gpt-4,assembly_binary,False,True,0.0,0,11.666306257247925,True,No vulnerable cryptographic algorithms were detected in the provided assembly code.,data/test_files/assembly_binary/secure_boot_verification_processor.s,0,0,0,1760162211.3260193,
secure_communication_protocol,openai,gpt-4,assembly_binary,True,True,0.5,2,11.054094076156616,True,"The assembly code appears to implement the Diffie-Hellman algorithm for key exchange, as evidenced by the diffie_hellman_init function. Additionally, the modular_exponentiation function suggests the use of modular arithmetic, a common operation in many cryptographic algorithms. However, no specific vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/secure_communication_protocol.s,0,0,0,1760162223.395218,
secure_hash_256bit_operations,openai,gpt-4,assembly_binary,True,True,0.5,1,24.151013612747192,True,"The provided assembly code appears to implement a part of the SHA-256 cryptographic hash function, which is not currently known to be vulnerable to quantum attacks. No other cryptographic algorithms were detected.",data/test_files/assembly_binary/secure_hash_256bit_operations.s,0,0,0,1760162248.566213,
secure_matrix_transformation_unit,openai,gpt-4,assembly_binary,True,True,0.5,1,13.183358192443848,True,"The assembly code appears to implement the SEED block cipher, a symmetric key block cipher developed by the Korean Information Security Agency (KISA). The evidence is based on the function call to 'transformation_sbox' which is a characteristic operation in the SEED cipher.",data/test_files/assembly_binary/secure_matrix_transformation_unit.s,0,0,0,1760162262.764751,
siphash_prf_function,openai,gpt-4,assembly_binary,True,True,0.6,2,10.30841326713562,True,"The provided assembly code implements the SipHash algorithm, which is a cryptographic hash function. The evidence is based on the function calls and memory allocation patterns for cryptographic key storage.",data/test_files/assembly_binary/siphash_prf_function.s,0,0,0,1760162274.0910628,
smart_card_authenticator,openai,gpt-4,assembly_binary,True,True,0.5,1,31.938453197479248,True,"The assembly code appears to implement AES-128 encryption, as evidenced by the transform_key_schedule and transform_encrypt_block functions. No other vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/smart_card_authenticator.s,0,0,0,1760162307.048584,
smart_card_security_module,openai,gpt-4,assembly_binary,True,True,0.0,0,9.259870290756226,True,No vulnerable cryptographic algorithms were detected in the provided assembly code.,data/test_files/assembly_binary/smart_card_security_module.s,0,0,0,1760162317.327236,
sphincs_signature_scheme,openai,gpt-4,assembly_binary,True,True,0.5,2,11.079784393310547,True,"The code appears to implement a hash-based signature generation system using a HASH-256-like function. Memory allocation for cryptographic key storage is also detected. However, no specific vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/sphincs_signature_scheme.s,0,0,0,1760162329.4199114,
steganographic_crypto_covert_channel,openai,gpt-4,assembly_binary,True,True,0.5,2,14.047603845596313,True,Detected modular arithmetic operations and obfuscation of cryptographic operations. No specific vulnerable algorithms were identified.,data/test_files/assembly_binary/steganographic_crypto_covert_channel.s,0,0,0,1760162344.4825308,
stream_cipher_generator,openai,gpt-4,assembly_binary,True,True,0.7,1,28.03948712348938,True,"The assembly code appears to implement the RC4 symmetric cipher, which is vulnerable to quantum attacks. No other vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/stream_cipher_generator.s,0,0,0,1760162373.5408938,
stream_generator_operations,openai,gpt-4,assembly_binary,True,True,0.7,1,11.00843071937561,True,"The provided assembly code appears to implement the RC4 stream cipher, which is vulnerable to quantum attacks. No other vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/stream_generator_operations.s,0,0,0,1760162385.5693398,
stream_keygeneration_operations,openai,gpt-4,assembly_binary,False,True,0.9,1,27.034868478775024,True,"The assembly code implements the RC4 algorithm, which is vulnerable to quantum attacks.",data/test_files/assembly_binary/stream_keygeneration_operations.s,0,0,0,1760162413.6213415,
triple_des_encryption_module,openai,gpt-4,assembly_binary,True,True,0.7,2,13.892359733581543,True,"The provided assembly code implements a 3DES encryption algorithm, which is vulnerable to quantum attacks. The keys for the encryption are stored in memory, which could potentially be exploited.",data/test_files/assembly_binary/triple_des_encryption_module.s,0,0,0,1760162428.5275283,
vpn_tunnel_encryption_engine,openai,gpt-4,assembly_binary,True,True,0.5,1,9.944265127182007,True,"The assembly code appears to implement an AES-128-like symmetric encryption algorithm, as evidenced by the xor operation and byte manipulation in the packet_encryption_layer and domesticn_vpn_cipher functions. No other vulnerable cryptographic algorithms were detected.",data/test_files/assembly_binary/vpn_tunnel_encryption_engine.s,0,0,0,1760162439.4868765,
x25519_key_agreement,openai,gpt-4,assembly_binary,True,True,0.7,3,18.282676219940186,True,Detected elliptic curve operations and large integer arithmetic related to Curve25519. Also detected memory allocation patterns for cryptographic key storage.,data/test_files/assembly_binary/x25519_key_agreement.s,0,0,0,1760162458.7874365,
apache_legacy_ssl,openai,gpt-4,logs_config,False,True,0.85,9,35.91362977027893,True,"Detected RSA, ECC, DH, Symmetric Ciphers, SSL/TLS, OpenSSL, PKI, and legacy cryptographic protocols SSLv2, SSLv3. No Korean algorithms, quantum-vulnerable operations, error patterns, or migration logs detected.",data/test_files/logs_config/apache_legacy_ssl.conf,0,0,0,1760162495.7208142,
automotive_v2x_system,openai,gpt-4,logs_config,True,True,0.9,9,21.549124479293823,True,"Detected several quantum-vulnerable cryptographic algorithms including CurveSig-P256, CurveSig-P384, BlockCipher-128-CCM, BlockCipher-256-GCM, BlockCipher-256-CBC, BlockCipher-256-CTR, and HMAC-Hash256. Also detected deprecated and insecure algorithms in legacy systems such as LEGACY_CIPHER-EDE3, StreamCipher, and Hash128. Korean domestic cryptographic standards K_CIPHER_1-128, K_CIPHER_2-128, K_CIPHER_4-128, K_CIPHER_2-256, K_CIPHER_1-256 are also in use.",data/test_files/logs_config/automotive_v2x_system.yaml,0,0,0,1760162518.283485,
blockchain_node_security,openai,gpt-4,logs_config,True,True,0.7,5,19.609898805618286,True,"Detected use of secp256k1 elliptic curve, chacha20_poly1305 symmetric cipher, and scrypt key derivation function. Quantum migration is planned.",data/test_files/logs_config/blockchain_node_security.conf,0,0,0,1760162538.9141707,
cloud_hsm_operations,openai,gpt-4,logs_config,True,True,0.8,8,22.390676021575928,True,"Detected RSA and ECC cryptographic algorithms, BlockCipher-256 symmetric cipher, and TLS protocol. Also detected usage of AWS CloudHSM for key management and authentication. Key rotation logs indicate migration from old to new keys.",data/test_files/logs_config/cloud_hsm_operations.log,0,0,0,1760162562.318382,
cloud_storage_encryption,openai,gpt-4,logs_config,True,True,0.9,11,25.453699588775635,True,"Detected RSA, ECC, Korean Ciphers, Symmetric Ciphers, TLS, various cryptographic configurations, quantum-vulnerable operations, authentication and key management configurations, legacy protocols, Korean compliance configurations, and warnings related to vulnerable crypto implementations.",data/test_files/logs_config/cloud_storage_encryption.conf,0,0,0,1760162588.7852519,
cryptographic_operations_detailed,openai,gpt-4,logs_config,True,True,0.9,12,25.85164761543274,True,"The logs show usage of RSA, ECC, Symmetric Cipher, SSL/TLS, Cryptographic Library, Certificate Authority, Quantum Vulnerable Operations, Authentication and Key Management, Legacy Protocol, Korean Domestic Standard, Vulnerable Crypto Warnings, and Quantum Migration. No evidence of discrete logarithm based algorithms or Korean specific algorithms was found.",data/test_files/logs_config/cryptographic_operations_detailed.log,0,0,0,1760162615.6516685,
database_encryption_setup,openai,gpt-4,logs_config,True,True,0.8,6,18.816816568374634,True,"Detected usage of Korean national standard algorithms SEED and ARIA, BLOCK_CIPHER for key encryption, and usage of Hardware Security Module for master key protection. Also detected deprecated TripleCipher and warning for ECB mode usage.",data/test_files/logs_config/database_encryption_setup.log,0,0,0,1760162635.4860816,
email_server_crypto,openai,gpt-4,logs_config,False,True,0.7,4,26.118189811706543,True,RSA and ECC configurations detected in certificate and key files. DH parameters detected in TLS configurations. Legacy protocols detected in SMTP and IMAP configurations.,data/test_files/logs_config/email_server_crypto.conf,0,0,0,1760162662.6194196,
enterprise_banking_pki_configuration,openai,gpt-4,logs_config,True,True,0.9,12,19.974417209625244,True,"Detected usage of RSA, ECC, DH, ARIA, AES, SSL/TLS, PKI, and legacy cryptographic protocols. Also detected configurations adhering to Korean domestic cryptographic standards. No explicit evidence of quantum-vulnerable to quantum-resistant transitions.",data/test_files/logs_config/enterprise_banking_pki_configuration.conf,0,0,0,1760162683.6137598,
financial_payment_gateway,openai,gpt-4,logs_config,True,True,0.85,7,22.012555837631226,True,"Detected usage of RSA, AES, 3DES, TLSv1.0, TLSv1.1, and SHA1 which are quantum-vulnerable. No evidence of migration to quantum-resistant algorithms.",data/test_files/logs_config/financial_payment_gateway.conf,0,0,0,1760162706.642839,
healthcare_ehr_system,openai,gpt-4,logs_config,True,True,0.85,9,17.999633312225342,True,"Detected RSA, ECC, DSA, BlockCipher-128, TLS 1.2, PBKDF2-HMAC-Hash160, and Hash-256. No evidence of Korean algorithms, cryptographic library configurations, PKI configurations, or quantum-resistant transitions.",data/test_files/logs_config/healthcare_ehr_system.yaml,0,0,0,1760162725.6554923,
iot_device_firmware_config,openai,gpt-4,logs_config,True,True,0.8,4,15.673919677734375,True,"The device uses the mbedTLS library and elliptic curve cryptography (secp256r1) for authentication. Legacy protocols such as ssl_v3, tls_v1_0, and tls_v1_1 are disabled. No RSA, Korean algorithms, or quantum-vulnerable symmetric ciphers were detected.",data/test_files/logs_config/iot_device_firmware_config.yaml,0,0,0,1760162742.3471708,
korean_crypto_library_config,openai,gpt-4,logs_config,True,True,0.8,7,19.101868629455566,True,"Detected Korean domestic cryptographic algorithms SEED, ARIA, HIGHT, LEA, KCDSA, HAS-160, LSH. Also detected HMAC_SHA256 for key derivation. Legacy support for MD5, SHA1, DES, 3DES, RC4 is either limited or disabled. The library is compliant with KCMVP Level 3.",data/test_files/logs_config/korean_crypto_library_config.ini,0,0,0,1760162762.4627023,
military_secure_comms,openai,gpt-4,logs_config,True,True,0.85,9,27.805800437927246,True,"Detected usage of ECC, LSH, Symmetric Ciphers, TLS, Authentication and Key Management, Legacy Protocols, Korean Crypto Standards, and Vulnerable Crypto Warnings. No evidence of RSA, DSA, DH, ElGamal, SEED, ARIA, HIGHT, LEA, KCDSA, HAS-160, Crypto Library Configurations, Certificate Authority and PKI Configurations, and Quantum Migration Logs.",data/test_files/logs_config/military_secure_comms.conf,0,0,0,1760162791.288144,
mobile_app_security_audit,openai,gpt-4,logs_config,True,True,0.8,10,16.794684648513794,True,"Detected usage of RSA, ECC, AES, and TLS 1.2. No evidence of Korean domestic cryptographic standards or quantum-resistant transitions. Multiple warnings and errors related to crypto implementations.",data/test_files/logs_config/mobile_app_security_audit.log,0,0,0,1760162809.0971231,
nginx_mixed_security_gateway,openai,gpt-4,logs_config,False,True,0.8,7,29.20167303085327,True,"The configuration uses RSA for certificates, ECC for cipher suites, and ARIA for Korean algorithm configurations. It also uses BlockCipher256 and BlockCipher128 for symmetric cipher configurations. The SSL/TLS protocols used are TLSv1.1, TLSv1.2, and TLSv1.3. Legacy cryptographic protocols TLSv1 and TLSv1.1 are also used.",data/test_files/logs_config/nginx_mixed_security_gateway.conf,0,0,0,1760162839.3211753,
quantum_safe_migration_plan,openai,gpt-4,logs_config,True,True,0.85,9,17.284813404083252,True,"Detected RSA, ECDSA, ECDH, DSA in public key infrastructure. SSL/TLS configurations are also detected. Detected usage of liboqs library for post-quantum algorithms. PKI configurations and API authentication settings are detected. Legacy system configurations are also detected. Migration logs are present.",data/test_files/logs_config/quantum_safe_migration_plan.yaml,0,0,0,1760162857.6218338,
security_scanner_findings,openai,gpt-4,logs_config,True,True,0.95,11,17.260519981384277,True,"Detected multiple instances of quantum-vulnerable cryptographic algorithms and configurations, including RSA, EC_CRYPTO, DH, K_CIPHER_1, HAS-160, StreamCipher, TripleCipher, and BlockCipher-128. Also detected use of legacy cryptographic protocols and errors related to vulnerable crypto implementations.",data/test_files/logs_config/security_scanner_findings.log,0,0,0,1760162875.902674,
ssh_server_hardened,openai,gpt-4,logs_config,True,True,0.9,11,21.122838735580444,True,"Detected RSA, ECDSA, Curve25519, NIST P-256/384/521, DSA, DH, AES in the configuration. No Korean algorithms detected. Weak key exchange, host key algorithms, ciphers, and MACs are disabled. Migration to post-quantum SSH is planned for 2026.",data/test_files/logs_config/ssh_server_hardened.conf,0,0,0,1760162898.0455534,
ssl_legacy_banking_configuration,openai,gpt-4,logs_config,False,True,0.7,5,614.0447745323181,True,Detected RSA and DH algorithms in certificate and key configurations. SSLv2 and SSLv3 protocols are also detected which are considered vulnerable.,data/test_files/logs_config/ssl_legacy_banking_configuration.conf,0,0,0,1760163513.1047866,
telecom_5g_network,openai,gpt-4,logs_config,True,True,0.9,8,17.532832384109497,True,"Detected use of quantum-vulnerable cryptographic algorithms ECDSA, HAS-160, and RSA in various configurations and log entries. Korean domestic cryptographic standards are also detected. Warnings related to these vulnerabilities are present.",data/test_files/logs_config/telecom_5g_network.conf,0,0,0,1760163531.6507177,
tls_cipher_negotiation_warnings,openai,gpt-4,logs_config,False,True,0.85,11,23.267300128936768,True,"Detected use of RSA, ECC, HAS-160, TripleCipher, and K_CIPHER algorithms. These algorithms are known to be vulnerable to quantum attacks. No evidence of migration to quantum-resistant algorithms was found.",data/test_files/logs_config/tls_cipher_negotiation_warnings.log,0,0,0,1760163555.9315703,
vpn_server_runtime,openai,gpt-4,logs_config,True,True,0.7,5,12.581569910049438,True,"Detected RSA, DH, AES in the logs. These are quantum-vulnerable cryptographic algorithms.",data/test_files/logs_config/vpn_server_runtime.log,0,0,0,1760163569.526357,
AdvancedComputationalFramework,xai,grok-3-mini,source_code,True,True,0.0,0,11.025826215744019,True,"No vulnerable algorithms detected due to lack of explicit cryptographic function calls, library usage, or specific evidence in the code.",data/test_files/source_code/AdvancedComputationalFramework.rb,0,0,0,1760163581.5533555,
AdvancedCryptographicOrchestrator,xai,grok-3-mini,source_code,True,True,1.0,2,13.696687936782837,True,Detected vulnerable elements include Elliptic Curve Cryptography and PKCS#1 v1.5 padding scheme based on explicit code evidence.,data/test_files/source_code/AdvancedCryptographicOrchestrator.java,0,0,0,1760163596.250843,
AdvancedMathematicalFramework,xai,grok-3-mini,source_code,True,True,0.8,1,14.885282754898071,True,Detected potential weak hash function usage involving SHA-256.,data/test_files/source_code/AdvancedMathematicalFramework.rs,0,0,0,1760163612.1370864,
AutomotiveSecurityUnit,xai,grok-3-mini,source_code,True,True,0.0,0,9.213939428329468,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/AutomotiveSecurityUnit.cpp,0,0,0,1760163622.3517785,
BankingSecurityModule,xai,grok-3-mini,source_code,True,True,0.0,0,10.286065578460693,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/BankingSecurityModule.java,0,0,0,1760163633.6402051,
BlockchainCryptographyEngine,xai,grok-3-mini,source_code,False,True,0.0,0,12.387135982513428,True,No vulnerable algorithms detected.,data/test_files/source_code/BlockchainCryptographyEngine.java,0,0,0,1760163647.0300384,
CorporateSecurityOrchestrator,xai,grok-3-mini,source_code,True,True,0.8,1,14.58226990699768,True,Detected ECC implementation based on explicit import; no other vulnerable algorithms detected.,data/test_files/source_code/CorporateSecurityOrchestrator.py,0,0,0,1760163662.6130824,
CorporateVPNManager,xai,grok-3-mini,source_code,True,True,1.0,0,9.945941925048828,True,No explicit evidence of quantum-vulnerable cryptographic implementations was found in the code.,data/test_files/source_code/CorporateVPNManager.java,0,0,0,1760163673.5596976,
DigitalCertificateValidator,xai,grok-3-mini,source_code,False,True,0.0,0,13.148603677749634,True,No vulnerable algorithms detected based on explicit evidence from code analysis.,data/test_files/source_code/DigitalCertificateValidator.java,0,0,0,1760163687.709496,
DistributedComputationEngine,xai,grok-3-mini,source_code,True,True,0.0,0,9.64651370048523,True,"No vulnerable algorithms detected due to lack of explicit evidence such as library imports, function calls, or documented algorithm names.",data/test_files/source_code/DistributedComputationEngine.py,0,0,0,1760163698.35672,
DistributedComputeManager,xai,grok-3-mini,source_code,True,True,0.0,0,10.40482211112976,True,No vulnerable cryptographic algorithms or implementations were detected in the provided code.,data/test_files/source_code/DistributedComputeManager.js,0,0,0,1760163709.7633102,
EnterpriseDataSecurityFramework,xai,grok-3-mini,source_code,True,True,0.0,0,12.547331809997559,True,No vulnerable cryptographic algorithms were explicitly detected in the code based on the required evidence criteria.,data/test_files/source_code/EnterpriseDataSecurityFramework.c,0,0,0,1760163723.3114867,
EnterpriseSecurityGateway,xai,grok-3-mini,source_code,True,True,0.0,0,13.056922197341919,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/EnterpriseSecurityGateway.java,0,0,0,1760163737.3692634,
HardwareSecurity,xai,grok-3-mini,source_code,False,True,0.0,0,14.249563932418823,True,No vulnerable cryptographic algorithms or implementations were detected based on explicit evidence in the code.,data/test_files/source_code/HardwareSecurity.java,0,0,0,1760163752.6198385,
IoTDeviceSecurityController,xai,grok-3-mini,source_code,True,True,0.0,0,10.788357734680176,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/IoTDeviceSecurityController.go,0,0,0,1760163764.409156,
LegacyPKISystem,xai,grok-3-mini,source_code,True,True,0.8,1,19.415918350219727,True,Detected DSA as a quantum-vulnerable algorithm based on explicit class and method names.,data/test_files/source_code/LegacyPKISystem.java,0,0,0,1760163784.8259947,
MathematicalTransformEngine,xai,grok-3-mini,source_code,True,True,0.0,0,12.964043140411377,True,"No vulnerable algorithms detected based on explicit evidence from code imports, function calls, or documented references.",data/test_files/source_code/MathematicalTransformEngine.java,0,0,0,1760163798.7916586,
MediaStreamProtection,xai,grok-3-mini,source_code,False,True,0.0,0,13.604712009429932,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/MediaStreamProtection.java,0,0,0,1760163813.3977025,
QuantumResistantMessaging,xai,grok-3-mini,source_code,True,True,0.0,0,10.39808464050293,True,No vulnerable cryptographic algorithms or implementations were detected in the provided code.,data/test_files/source_code/QuantumResistantMessaging.java,0,0,0,1760163824.7976778,
QuantumSafeTransitionManager,xai,grok-3-mini,source_code,True,True,0.8,1,12.924410104751587,True,Only legacy cryptographic libraries were detected based on explicit includes; no other quantum-vulnerable algorithms or implementations were identified with explicit evidence.,data/test_files/source_code/QuantumSafeTransitionManager.cpp,0,0,0,1760163838.7233117,
SecureChatApplication,xai,grok-3-mini,source_code,False,True,0.0,0,9.913081407546997,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/SecureChatApplication.java,0,0,0,1760163849.6381538,
SecureCloudStorage,xai,grok-3-mini,source_code,True,True,0.0,0,9.495191812515259,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/SecureCloudStorage.java,0,0,0,1760163860.1340663,
SecureTransactionProcessor,xai,grok-3-mini,source_code,True,True,0.0,0,10.514650106430054,True,No vulnerable cryptographic algorithms or implementations were detected based on explicit evidence in the provided source code.,data/test_files/source_code/SecureTransactionProcessor.go,0,0,0,1760163871.6507154,
StealthCryptographicLibrary,xai,grok-3-mini,source_code,True,True,1.0,2,13.249390602111816,True,Detected quantum-vulnerable RSA and ECC implementations based on explicit function calls.,data/test_files/source_code/StealthCryptographicLibrary.py,0,0,0,1760163885.9014912,
TelecommunicationsSecurityHub,xai,grok-3-mini,source_code,True,True,0.0,0,10.146504163742065,True,No vulnerable cryptographic algorithms or implementations were detected based on explicit evidence in the provided code.,data/test_files/source_code/TelecommunicationsSecurityHub.java,0,0,0,1760163897.048697,
a5_trivium_stream_ciphers,xai,grok-3-mini,source_code,False,True,0.0,0,8.988760232925415,True,No vulnerable cryptographic algorithms or implementations detected due to lack of explicit evidence such as library imports or function calls.,data/test_files/source_code/a5_trivium_stream_ciphers.py,0,0,0,1760163907.038569,
aes_advanced_encryption,xai,grok-3-mini,source_code,True,True,0.0,0,9.553873777389526,True,No vulnerable cryptographic algorithms were explicitly detected in the code.,data/test_files/source_code/aes_advanced_encryption.java,0,0,0,1760163917.5937722,
aria_korean_block_cipher,xai,grok-3-mini,source_code,True,True,0.0,0,10.42710256576538,True,No vulnerable cryptographic algorithms or implementations were detected in the provided code.,data/test_files/source_code/aria_korean_block_cipher.py,0,0,0,1760163929.0223958,
aria_sha256_ecdsa_government,xai,grok-3-mini,source_code,True,True,1.0,0,9.285441875457764,True,"No vulnerable algorithms detected due to absence of explicit evidence such as library imports, specific function calls, or documented references to cryptographic algorithms.",data/test_files/source_code/aria_sha256_ecdsa_government.py,0,0,0,1760163939.3096633,
blowfish_symmetric_encryption,xai,grok-3-mini,source_code,False,True,0.0,0,10.599223852157593,True,No vulnerable cryptographic algorithms detected due to lack of explicit evidence such as library imports or specific function calls.,data/test_files/source_code/blowfish_symmetric_encryption.c,0,0,0,1760163950.9110816,
camellia_block_cipher,xai,grok-3-mini,source_code,False,True,1.0,0,9.730756998062134,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/camellia_block_cipher.c,0,0,0,1760163961.6435068,
cast_feistel_cipher,xai,grok-3-mini,source_code,False,True,0.0,0,11.059321641921997,True,No vulnerable cryptographic algorithms detected based on explicit evidence in the code.,data/test_files/source_code/cast_feistel_cipher.c,0,0,0,1760163973.704797,
chacha20_poly1305_aead,xai,grok-3-mini,source_code,False,True,0.0,0,10.396745681762695,True,No explicit evidence of quantum-vulnerable cryptographic implementations was found in the code.,data/test_files/source_code/chacha20_poly1305_aead.java,0,0,0,1760163985.1029253,
cloud_security_orchestrator,xai,grok-3-mini,source_code,True,True,0.0,0,12.531651258468628,True,No vulnerable cryptographic algorithms or implementations were detected based on explicit evidence in the provided code.,data/test_files/source_code/cloud_security_orchestrator.py,0,0,0,1760163998.6359122,
database_encryption_engine,xai,grok-3-mini,source_code,True,True,0.0,0,11.573218584060669,True,No vulnerable cryptographic algorithms or implementations were detected in the provided code.,data/test_files/source_code/database_encryption_engine.c,0,0,0,1760164011.2105136,
diffie_hellman_key_exchange,xai,grok-3-mini,source_code,True,True,0.0,0,12.035332441329956,True,No vulnerable algorithms detected due to absence of explicit evidence such as specific library imports or function calls.,data/test_files/source_code/diffie_hellman_key_exchange.java,0,0,0,1760164024.2470443,
digital_identity_platform,xai,grok-3-mini,source_code,True,True,0.0,0,11.323559522628784,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/digital_identity_platform.js,0,0,0,1760164036.5716498,
elgamal_diffie_hellman_pki,xai,grok-3-mini,source_code,True,True,1.0,0,12.241958856582642,True,No explicit evidence of vulnerable cryptographic algorithms or implementations was detected in the code.,data/test_files/source_code/elgamal_diffie_hellman_pki.py,0,0,0,1760164049.8145912,
elliptic_curve_cryptography,xai,grok-3-mini,source_code,True,True,0.0,0,12.478026151657104,True,"No vulnerable algorithms detected based on explicit evidence from imports, function calls, or library usage.",data/test_files/source_code/elliptic_curve_cryptography.java,0,0,0,1760164063.2948315,
financial_risk_analyzer,xai,grok-3-mini,source_code,True,True,1.0,1,13.501547574996948,True,Detected vulnerable padding scheme PKCS#1 v1.5 based on explicit comment in function.,data/test_files/source_code/financial_risk_analyzer.py,0,0,0,1760164077.7972436,
financial_transaction_processor,xai,grok-3-mini,source_code,True,True,1.0,0,12.963673830032349,True,No explicit evidence of vulnerable cryptographic algorithms was found in the provided source code.,data/test_files/source_code/financial_transaction_processor.c,0,0,0,1760164091.7617588,
financial_transaction_security,xai,grok-3-mini,source_code,True,True,0.0,0,8.999246597290039,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/financial_transaction_security.c,0,0,0,1760164101.7618368,
government_document_signer,xai,grok-3-mini,source_code,True,True,0.8,1,14.645585536956787,True,Detected insecure random number generators based on explicit function calls; no other vulnerabilities identified.,data/test_files/source_code/government_document_signer.c,0,0,0,1760164117.4081514,
idea_international_encryption,xai,grok-3-mini,source_code,False,True,0.0,0,11.852551221847534,True,No vulnerable algorithms were detected in the provided source code.,data/test_files/source_code/idea_international_encryption.java,0,0,0,1760164130.2617779,
iot_device_security,xai,grok-3-mini,source_code,True,True,0.0,0,12.299715280532837,True,No vulnerable cryptographic algorithms were detected in the code.,data/test_files/source_code/iot_device_security.c,0,0,0,1760164143.5629034,
lattice_isogeny_postquantum,xai,grok-3-mini,source_code,False,True,0.0,0,8.182530164718628,True,No vulnerable algorithms detected in the code,data/test_files/source_code/lattice_isogeny_postquantum.py,0,0,0,1760164152.746091,
legacy_authentication_system,xai,grok-3-mini,source_code,False,True,0.0,0,11.147994995117188,True,No vulnerable algorithms detected based on explicit evidence such as library imports or specific function calls.,data/test_files/source_code/legacy_authentication_system.c,0,0,0,1760164164.8960426,
md5_sha1_weak_hash,xai,grok-3-mini,source_code,False,True,0.0,0,9.331356763839722,True,No vulnerable cryptographic algorithms were detected in the code.,data/test_files/source_code/md5_sha1_weak_hash.py,0,0,0,1760164175.2286015,
medical_device_encryption,xai,grok-3-mini,source_code,True,True,0.0,0,11.781856775283813,True,No explicit evidence of vulnerable cryptographic algorithms was detected in the provided code.,data/test_files/source_code/medical_device_encryption.rs,0,0,0,1760164188.0122285,
military_communication_system,xai,grok-3-mini,source_code,False,True,0.0,0,10.832456350326538,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/military_communication_system.c,0,0,0,1760164199.846917,
mobile_secure_messenger,xai,grok-3-mini,source_code,False,True,0.0,0,8.39194631576538,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/mobile_secure_messenger.c,0,0,0,1760164209.2397695,
network_infrastructure_monitor,xai,grok-3-mini,source_code,True,True,0.0,0,9.109633445739746,True,No vulnerable cryptographic algorithms were explicitly detected in the code based on required evidence such as library imports or specific function calls.,data/test_files/source_code/network_infrastructure_monitor.cpp,0,0,0,1760164219.3502676,
ntru_lattice_encryption,xai,grok-3-mini,source_code,True,True,1.0,0,10.306990146636963,True,No vulnerable cryptographic implementations were detected in the provided code.,data/test_files/source_code/ntru_lattice_encryption.java,0,0,0,1760164230.657869,
openssl_des_enc,xai,grok-3-mini,source_code,True,True,0.0,0,9.532248735427856,True,No explicit evidence of vulnerable cryptographic algorithms or implementations was found in the code.,data/test_files/source_code/openssl_des_enc.c,0,0,0,1760164241.191835,
quantum_resistant_messenger,xai,grok-3-mini,source_code,True,True,1.0,0,10.52217984199524,True,No vulnerable cryptographic algorithms or implementations were detected in the provided code based on explicit evidence.,data/test_files/source_code/quantum_resistant_messenger.py,0,0,0,1760164252.7163353,
rc4_stream_generator,xai,grok-3-mini,source_code,True,True,1.0,1,11.711379528045654,True,Detected RC4 as a vulnerable symmetric cipher based on explicit function definitions.,data/test_files/source_code/rc4_stream_generator.c,0,0,0,1760164265.429527,
rsa_gen,xai,grok-3-mini,source_code,True,True,1.0,1,13.017443895339966,True,Detected quantum-vulnerable RSA implementation based on explicit function call.,data/test_files/source_code/rsa_gen.c,0,0,0,1760164279.4485655,
rsa_modular_exponentiation,xai,grok-3-mini,source_code,False,True,0.0,0,13.589369058609009,True,No explicit evidence of vulnerable cryptographic algorithms was found in the code.,data/test_files/source_code/rsa_modular_exponentiation.py,0,0,0,1760164294.0388474,
rsa_public_key_system,xai,grok-3-mini,source_code,True,True,0.0,0,11.38027286529541,True,"No vulnerable algorithms detected based on explicit evidence from code imports, function calls, or library usage.",data/test_files/source_code/rsa_public_key_system.java,0,0,0,1760164306.422412,
salsa20_stream_cipher,xai,grok-3-mini,source_code,False,True,0.0,0,9.320404529571533,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/salsa20_stream_cipher.c,0,0,0,1760164316.744321,
secure_messaging_protocol,xai,grok-3-mini,source_code,True,True,1.0,1,18.40104079246521,True,Detected vulnerable padding scheme PKCS#1 v1.5 in the code.,data/test_files/source_code/secure_messaging_protocol.rb,0,0,0,1760164336.1466317,
secure_video_streaming,xai,grok-3-mini,source_code,False,True,0.0,0,7.8084540367126465,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/source_code/secure_video_streaming.c,0,0,0,1760164344.9570704,
seed_aes_hybrid_banking,xai,grok-3-mini,source_code,True,True,0.0,0,9.359193563461304,True,"No vulnerable cryptographic algorithms were detected based on explicit evidence such as library imports, function calls, or documented algorithm names.",data/test_files/source_code/seed_aes_hybrid_banking.py,0,0,0,1760164355.3170109,
seed_stream_cipher,xai,grok-3-mini,source_code,True,True,0.0,0,10.997322797775269,True,No vulnerable algorithms detected.,data/test_files/source_code/seed_stream_cipher.py,0,0,0,1760164367.3155077,
serpent_substitution_network,xai,grok-3-mini,source_code,False,True,0.0,0,9.240516185760498,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/serpent_substitution_network.c,0,0,0,1760164377.5570977,
sha1_rsa_legacy_documents,xai,grok-3-mini,source_code,False,True,0.0,0,10.656529188156128,True,No vulnerable cryptographic algorithms or implementations detected based on explicit evidence such as library imports or specific function calls.,data/test_files/source_code/sha1_rsa_legacy_documents.py,0,0,0,1760164389.2143095,
skipjack_government_cipher,xai,grok-3-mini,source_code,False,True,0.0,0,9.404155015945435,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/skipjack_government_cipher.c,0,0,0,1760164399.6225152,
smart_card_security,xai,grok-3-mini,source_code,False,True,1.0,0,12.666905403137207,True,No explicit evidence of vulnerable cryptographic algorithms was found in the code.,data/test_files/source_code/smart_card_security.c,0,0,0,1760164413.2903135,
tiger_hash_function,xai,grok-3-mini,source_code,False,True,0.0,0,8.849379062652588,True,No vulnerable algorithms detected in the code.,data/test_files/source_code/tiger_hash_function.c,0,0,0,1760164423.1403725,
twofish_advanced_encryption,xai,grok-3-mini,source_code,False,True,0.0,0,9.571065664291382,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/source_code/twofish_advanced_encryption.c,0,0,0,1760164433.712804,
whirlpool_hash_digest,xai,grok-3-mini,source_code,False,True,1.0,0,10.00523066520691,True,No vulnerable cryptographic algorithms or implementations were detected in the provided code based on explicit evidence.,data/test_files/source_code/whirlpool_hash_digest.c,0,0,0,1760164444.7193162,
wireless_network_encryption,xai,grok-3-mini,source_code,True,True,1.0,1,15.073625087738037,True,Detected RC4 as a vulnerable symmetric cipher based on explicit constant and function usage.,data/test_files/source_code/wireless_network_encryption.c,0,0,0,1760164460.7947023,
adaptive_multi_tenant_crypto_orchestrator,xai,grok-3-mini,assembly_binary,True,True,0.8,2,12.785885572433472,True,Detected potential RSA and elliptic curve patterns based on explicit comments and function names; all other categories not detected due to lack of evidence.,data/test_files/assembly_binary/adaptive_multi_tenant_crypto_orchestrator.s,0,0,0,1760164474.5816338,
advanced_block_standard_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.380588293075562,True,"No vulnerable cryptographic algorithms or patterns detected due to the absence of explicit evidence such as library imports, specific function calls, or documented cryptographic API usage in the provided assembly code.",data/test_files/assembly_binary/advanced_block_standard_operations.s,0,0,0,1760164483.9642355,
aes_key_expansion_module,xai,grok-3-mini,assembly_binary,True,True,1.0,1,10.928118705749512,True,Detected AES implementation vulnerable to quantum attacks based on explicit FIPS 197 reference.,data/test_files/assembly_binary/aes_key_expansion_module.s,0,0,0,1760164495.8934786,
aria_encryption_engine,xai,grok-3-mini,assembly_binary,True,True,1.0,0,11.600620031356812,True,No explicit evidence of vulnerable cryptographic algorithms was detected in the provided code.,data/test_files/assembly_binary/aria_encryption_engine.s,0,0,0,1760164508.4958026,
automotive_ecu_cryptographic_unit,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.233154773712158,True,No vulnerable cryptographic algorithms or patterns detected based on explicit evidence in the provided code.,data/test_files/assembly_binary/automotive_ecu_cryptographic_unit.s,0,0,0,1760164518.7306583,
banking_transaction_processor,xai,grok-3-mini,assembly_binary,True,True,0.0,0,11.493969917297363,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific function calls.,data/test_files/assembly_binary/banking_transaction_processor.s,0,0,0,1760164531.2258532,
biometric_authentication_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,12.489529371261597,True,No vulnerable algorithms detected,data/test_files/assembly_binary/biometric_authentication_engine.s,0,0,0,1760164544.7161887,
blake2b_hash_engine,xai,grok-3-mini,assembly_binary,False,True,0.0,0,10.899653673171997,True,No vulnerable cryptographic algorithms or patterns detected based on explicit evidence.,data/test_files/assembly_binary/blake2b_hash_engine.s,0,0,0,1760164556.6167855,
block_cipher_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.674137830734253,True,No vulnerable cryptographic algorithms were detected based on explicit evidence.,data/test_files/assembly_binary/block_cipher_operations.s,0,0,0,1760164566.2916546,
blockchain_consensus_validator,xai,grok-3-mini,assembly_binary,False,True,0.0,0,9.983889818191528,True,No vulnerable cryptographic algorithms were detected based on explicit evidence in the provided assembly code.,data/test_files/assembly_binary/blockchain_consensus_validator.s,0,0,0,1760164577.2762465,
chacha20_stream_processor,xai,grok-3-mini,assembly_binary,False,True,0.0,0,10.198033332824707,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/chacha20_stream_processor.s,0,0,0,1760164588.4752672,
cloud_storage_encryption_processor,xai,grok-3-mini,assembly_binary,True,True,0.0,0,11.911568880081177,True,No vulnerable algorithms detected based on explicit evidence in the provided code.,data/test_files/assembly_binary/cloud_storage_encryption_processor.s,0,0,0,1760164601.3885577,
crypto_trading_platform_engine,xai,grok-3-mini,assembly_binary,False,True,0.0,0,9.817157983779907,True,"No vulnerable algorithms detected due to lack of explicit evidence such as library imports, specific function calls, or documented cryptographic API usage in the provided assembly code.",data/test_files/assembly_binary/crypto_trading_platform_engine.s,0,0,0,1760164612.2071433,
cryptographic_wallet_manager,xai,grok-3-mini,assembly_binary,False,True,0.9,1,11.480738878250122,True,Detected elliptic curve point multiplication; no other vulnerable algorithms or patterns identified.,data/test_files/assembly_binary/cryptographic_wallet_manager.s,0,0,0,1760164624.6887126,
diffie_hellman_key_exchange,xai,grok-3-mini,assembly_binary,True,True,0.0,0,11.643485069274902,True,"No vulnerable cryptographic algorithms or patterns detected due to lack of explicit evidence such as library imports, specific function calls, or documented algorithm names.",data/test_files/assembly_binary/diffie_hellman_key_exchange.s,0,0,0,1760164637.3334148,
digital_signature_processor,xai,grok-3-mini,assembly_binary,True,True,0.9,1,11.88733983039856,True,Detected RSA modular exponentiation based on explicit function implementation.,data/test_files/assembly_binary/digital_signature_processor.s,0,0,0,1760164650.221425,
distributed_blockchain_consensus_engine,xai,grok-3-mini,assembly_binary,False,True,0.9,1,9.539484024047852,True,Detected elliptic curve operations based on explicit function calls and parameter setups; no other vulnerable algorithms detected.,data/test_files/assembly_binary/distributed_blockchain_consensus_engine.s,0,0,0,1760164660.76161,
dsa_signature_verification,xai,grok-3-mini,assembly_binary,True,True,0.8,1,14.034497499465942,True,Detected DSA as a vulnerable algorithm based on explicit evidence in the code.,data/test_files/assembly_binary/dsa_signature_verification.s,0,0,0,1760164675.7977781,
elliptic_curve_point_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,12.40885066986084,True,No explicit evidence of vulnerable cryptographic algorithms was found in the provided code.,data/test_files/assembly_binary/elliptic_curve_point_operations.s,0,0,0,1760164689.2073953,
elliptic_curve_scalar_multiplication,xai,grok-3-mini,assembly_binary,False,True,0.9,1,13.129185199737549,True,Detected elliptic curve point operations and scalar multiplication; no other vulnerable algorithms or patterns identified.,data/test_files/assembly_binary/elliptic_curve_scalar_multiplication.s,0,0,0,1760164703.3376029,
elliptic_mathematical_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,11.307359457015991,True,"No vulnerable algorithms detected due to lack of explicit evidence such as library imports, function calls, or algorithm names.",data/test_files/assembly_binary/elliptic_mathematical_operations.s,0,0,0,1760164715.6458287,
ellipticsignature_securehashalgo1_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,11.95272421836853,True,No vulnerable cryptographic algorithms detected.,data/test_files/assembly_binary/ellipticsignature_securehashalgo1_operations.s,0,0,0,1760164728.6008418,
embedded_authentication_processor,xai,grok-3-mini,assembly_binary,True,True,0.0,0,11.205984830856323,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/embedded_authentication_processor.s,0,0,0,1760164740.8090107,
embedded_iot_security_processor,xai,grok-3-mini,assembly_binary,True,True,0.9,3,15.820974349975586,True,"Detected patterns related to elliptic curve operations, discrete logarithm signatures, and memory allocation for keys, indicating potential quantum vulnerabilities in curve-based implementations.",data/test_files/assembly_binary/embedded_iot_security_processor.s,0,0,0,1760164757.632106,
enterprise_data_protection_engine,xai,grok-3-mini,assembly_binary,True,True,0.7,2,15.629876852035522,True,Detected potential Korean algorithm signatures based on explicit function names; no other vulnerable algorithms identified with explicit evidence.,data/test_files/assembly_binary/enterprise_data_protection_engine.s,0,0,0,1760164774.2631352,
feistel_network_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,7.451778411865234,True,"No vulnerable cryptographic algorithms or patterns detected due to the absence of explicit evidence such as library imports, specific function calls, or documented algorithm names in the provided assembly code.",data/test_files/assembly_binary/feistel_network_operations.s,0,0,0,1760164782.7167993,
financial_cryptographic_accelerator,xai,grok-3-mini,assembly_binary,True,True,0.2,1,14.067661762237549,True,Only a potential domestic algorithm implementation was detected based on explicit function name; no other vulnerable cryptographic algorithms identified.,data/test_files/assembly_binary/financial_cryptographic_accelerator.s,0,0,0,1760164797.78666,
government_classified_system_processor,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.758908748626709,True,"No vulnerable cryptographic algorithms detected due to the absence of explicit evidence such as library imports, specific function calls, or direct algorithm references in the code.",data/test_files/assembly_binary/government_classified_system_processor.s,0,0,0,1760164809.546897,
hash_digest_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,12.642347812652588,True,"No vulnerable cryptographic algorithms were explicitly detected due to the absence of explicit library imports, function calls, or documented algorithm names in the code.",data/test_files/assembly_binary/hash_digest_operations.s,0,0,0,1760164823.1914933,
hight_lightweight_cipher,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.325045347213745,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/assembly_binary/hight_lightweight_cipher.s,0,0,0,1760164833.517275,
hybrid_banking_security_system,xai,grok-3-mini,assembly_binary,False,True,0.0,0,9.179499626159668,True,"No explicit evidence of vulnerable cryptographic algorithms was found in the provided code, as there are no library imports, specific algorithm function calls, or documented references to the listed patterns.",data/test_files/assembly_binary/hybrid_banking_security_system.s,0,0,0,1760164843.6975968,
industrial_control_security,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.83137822151184,True,No vulnerable cryptographic algorithms detected due to lack of explicit evidence such as library imports or specific function calls.,data/test_files/assembly_binary/industrial_control_security.s,0,0,0,1760164854.5309353,
industrial_security_coprocessor,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.237544298171997,True,No vulnerable cryptographic algorithms detected based on explicit evidence in the provided assembly code.,data/test_files/assembly_binary/industrial_security_coprocessor.s,0,0,0,1760164864.7700882,
kcdsa_signature_generator,xai,grok-3-mini,assembly_binary,True,True,0.0,0,17.03885293006897,True,No vulnerable algorithms detected with explicit evidence,data/test_files/assembly_binary/kcdsa_signature_generator.s,0,0,0,1760164882.8103766,
keyexchange_protocol_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.82447361946106,True,No vulnerable cryptographic algorithms or patterns detected due to lack of explicit evidence such as library imports or function calls.,data/test_files/assembly_binary/keyexchange_protocol_operations.s,0,0,0,1760164893.6360402,
korean_blockcipher_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.666307210922241,True,"No vulnerable cryptographic algorithms or patterns detected due to lack of explicit evidence such as library imports, specific function calls, or documented algorithm names.",data/test_files/assembly_binary/korean_blockcipher_operations.s,0,0,0,1760164905.3036745,
lea_block_cipher_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,12.754908561706543,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/assembly_binary/lea_block_cipher_engine.s,0,0,0,1760164919.0599914,
legacy_hash_computation,xai,grok-3-mini,assembly_binary,False,True,0.0,0,13.0061616897583,True,No vulnerable cryptographic algorithms detected due to lack of explicit evidence such as library imports or specific API calls.,data/test_files/assembly_binary/legacy_hash_computation.s,0,0,0,1760164933.0673614,
legacy_pki_certificate_processor,xai,grok-3-mini,assembly_binary,True,True,0.8,2,14.027020931243896,True,Detected RSA and ECDSA through explicit OID comparisons in the code.,data/test_files/assembly_binary/legacy_pki_certificate_processor.s,0,0,0,1760164948.0961254,
md5_sha1_hash_processor,xai,grok-3-mini,assembly_binary,False,True,0.0,0,16.691179275512695,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/md5_sha1_hash_processor.s,0,0,0,1760164965.7888489,
medical_device_security_controller,xai,grok-3-mini,assembly_binary,True,True,0.0,0,12.839648485183716,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific function calls.,data/test_files/assembly_binary/medical_device_security_controller.s,0,0,0,1760164979.6297925,
message_digest_128bit_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,11.059541463851929,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or documented function calls.,data/test_files/assembly_binary/message_digest_128bit_operations.s,0,0,0,1760164991.6903193,
mobile_cipher_engine,xai,grok-3-mini,assembly_binary,False,True,0.0,0,14.170963525772095,True,No vulnerable algorithms detected based on explicit evidence in the provided code.,data/test_files/assembly_binary/mobile_cipher_engine.s,0,0,0,1760165006.8636117,
mobile_payment_security_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.19214916229248,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/mobile_payment_security_engine.s,0,0,0,1760165016.0574334,
network_security_gateway,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.528619289398193,True,No vulnerable cryptographic algorithms detected based on explicit evidence in the provided code.,data/test_files/assembly_binary/network_security_gateway.s,0,0,0,1760165025.5870032,
neural_network_inference_accelerator,xai,grok-3-mini,assembly_binary,True,True,0.0,0,12.467261791229248,True,No vulnerable cryptographic algorithms detected due to lack of explicit evidence such as library imports or specific function calls.,data/test_files/assembly_binary/neural_network_inference_accelerator.s,0,0,0,1760165039.0554276,
ntru_polynomial_processor,xai,grok-3-mini,assembly_binary,True,True,1.0,0,9.697753190994263,True,No vulnerable cryptographic algorithms detected; no explicit evidence of the specified patterns or algorithms in the code.,data/test_files/assembly_binary/ntru_polynomial_processor.s,0,0,0,1760165049.7547765,
obfuscated_crypto_library_dispatcher,xai,grok-3-mini,assembly_binary,True,True,0.8,1,11.317387342453003,True,Only elliptic curve patterns were detected based on explicit documentation comments; all other vulnerable algorithms were not detected due to lack of explicit evidence.,data/test_files/assembly_binary/obfuscated_crypto_library_dispatcher.s,0,0,0,1760165062.0735745,
openssl_des_enc,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.592548131942749,True,No explicit evidence of vulnerable cryptographic algorithms was found in the provided assembly code.,data/test_files/assembly_binary/openssl_des_enc.asm,0,0,0,1760165073.6669524,
openssl_des_enc,,,,False,False,0,0,0,False,,,0,0,0,0,Input validation failed
poly1305_authenticator,xai,grok-3-mini,assembly_binary,False,True,0.0,0,9.539138793945312,True,No vulnerable cryptographic algorithms or patterns were detected in the provided code.,data/test_files/assembly_binary/poly1305_authenticator.s,0,0,0,1760165085.2095468,
polymorphic_malware_crypto_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.411484479904175,True,No vulnerable algorithms detected based on explicit evidence in the provided code.,data/test_files/assembly_binary/polymorphic_malware_crypto_engine.s,0,0,0,1760165096.6228948,
polynomial_field_arithmetic_engine,xai,grok-3-mini,assembly_binary,False,True,0.8,3,11.978964567184448,True,Detected potential elliptic curve operations and domestic algorithm implementations based on explicit function calls; no evidence for other vulnerable algorithms.,data/test_files/assembly_binary/polynomial_field_arithmetic_engine.s,0,0,0,1760165109.6034622,
postquantum_multimodal_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,8.770798206329346,True,No vulnerable algorithms detected due to absence of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/postquantum_multimodal_operations.s,0,0,0,1760165119.3749444,
publickey_encryption_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.67020583152771,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/publickey_encryption_operations.s,0,0,0,1760165129.0458417,
publickey_modular_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.320305347442627,True,No vulnerable cryptographic algorithms or patterns were detected in the provided code.,data/test_files/assembly_binary/publickey_modular_operations.s,0,0,0,1760165138.3672633,
publickeyalgo_messagedigest5_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,7.80312705039978,True,"No vulnerable algorithms or patterns detected due to the absence of explicit evidence such as library imports, function calls, or documented cryptographic API usage in the provided code.",data/test_files/assembly_binary/publickeyalgo_messagedigest5_operations.s,0,0,0,1760165147.1727574,
quantum_communication_relay,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.336891412734985,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific function calls.,data/test_files/assembly_binary/quantum_communication_relay.s,0,0,0,1760165157.5107894,
quantum_cryptanalysis_simulation,xai,grok-3-mini,assembly_binary,True,True,1.0,1,13.538552284240723,True,Detected patterns related to elliptic curve operations based on explicit function calls; no other vulnerable algorithms detected.,data/test_files/assembly_binary/quantum_cryptanalysis_simulation.s,0,0,0,1760165172.0504613,
quantum_migration_bridge_processor,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.952556371688843,True,No vulnerable algorithms detected based on explicit evidence,data/test_files/assembly_binary/quantum_migration_bridge_processor.s,0,0,0,1760165183.0044374,
quantum_resistant_lattice_operations,xai,grok-3-mini,assembly_binary,True,True,1.0,0,10.485343217849731,True,No vulnerable cryptographic algorithms detected in the provided code.,data/test_files/assembly_binary/quantum_resistant_lattice_operations.s,0,0,0,1760165194.490687,
quantum_resistant_migration_bridge,xai,grok-3-mini,assembly_binary,True,True,0.0,0,11.443872213363647,True,No explicit evidence of vulnerable cryptographic algorithms detected in the provided code.,data/test_files/assembly_binary/quantum_resistant_migration_bridge.s,0,0,0,1760165206.9356003,
quantum_safe_communicator,xai,grok-3-mini,assembly_binary,False,True,1.0,0,12.442634105682373,True,No explicit evidence of vulnerable cryptographic algorithms was found in the provided assembly code.,data/test_files/assembly_binary/quantum_safe_communicator.s,0,0,0,1760165220.3791616,
rsa_key_generation_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,13.981252193450928,True,"No vulnerable algorithms detected based on explicit evidence such as library imports, function calls, or specific API signatures.",data/test_files/assembly_binary/rsa_key_generation_engine.s,0,0,0,1760165235.3614287,
salsa20_stream_cipher,xai,grok-3-mini,assembly_binary,False,True,0.0,0,11.931564807891846,True,No vulnerable algorithms detected,data/test_files/assembly_binary/salsa20_stream_cipher.s,0,0,0,1760165248.2945154,
satellite_communication_security,xai,grok-3-mini,assembly_binary,True,True,0.0,0,8.781665563583374,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic API calls.,data/test_files/assembly_binary/satellite_communication_security.s,0,0,0,1760165258.0781438,
secure_boot_verification_processor,xai,grok-3-mini,assembly_binary,False,True,0.0,0,9.73422622680664,True,No vulnerable cryptographic algorithms or patterns detected based on explicit evidence in the provided code.,data/test_files/assembly_binary/secure_boot_verification_processor.s,0,0,0,1760165268.814023,
secure_communication_protocol,xai,grok-3-mini,assembly_binary,True,True,0.8,1,12.025419235229492,True,Detected explicit reference to Diffie-Hellman in function name.,data/test_files/assembly_binary/secure_communication_protocol.s,0,0,0,1760165281.8403318,
secure_hash_256bit_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,13.014383554458618,True,No explicit evidence of vulnerable cryptographic algorithms detected in the provided code.,data/test_files/assembly_binary/secure_hash_256bit_operations.s,0,0,0,1760165295.8556173,
secure_matrix_transformation_unit,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.264439582824707,True,No vulnerable algorithms detected,data/test_files/assembly_binary/secure_matrix_transformation_unit.s,0,0,0,1760165306.1207762,
siphash_prf_function,xai,grok-3-mini,assembly_binary,False,True,0.0,0,9.722675323486328,True,No vulnerable algorithms detected,data/test_files/assembly_binary/siphash_prf_function.s,0,0,0,1760165316.844188,
smart_card_authenticator,xai,grok-3-mini,assembly_binary,True,True,0.0,0,10.274411678314209,True,No vulnerable cryptographic algorithms detected due to lack of explicit evidence such as library imports or specific function calls.,data/test_files/assembly_binary/smart_card_authenticator.s,0,0,0,1760165328.1192477,
smart_card_security_module,xai,grok-3-mini,assembly_binary,True,True,1.0,0,7.875588417053223,True,No vulnerable cryptographic algorithms were detected in the provided code due to the absence of explicit evidence such as library imports or specific function calls.,data/test_files/assembly_binary/smart_card_security_module.s,0,0,0,1760165336.9969335,
sphincs_signature_scheme,xai,grok-3-mini,assembly_binary,False,True,0.0,0,11.166006803512573,True,No vulnerable algorithms detected based on explicit evidence in the code.,data/test_files/assembly_binary/sphincs_signature_scheme.s,0,0,0,1760165349.1648376,
steganographic_crypto_covert_channel,xai,grok-3-mini,assembly_binary,True,True,0.0,0,11.474596738815308,True,No vulnerable algorithms detected due to lack of explicit evidence such as library imports or specific cryptographic function calls.,data/test_files/assembly_binary/steganographic_crypto_covert_channel.s,0,0,0,1760165361.6406567,
stream_cipher_generator,xai,grok-3-mini,assembly_binary,True,True,0.9,2,14.828530073165894,True,Detected RC4 as a vulnerable symmetric cipher based on explicit function implementations and calls.,data/test_files/assembly_binary/stream_cipher_generator.s,0,0,0,1760165377.4698856,
stream_generator_operations,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.521308898925781,True,"No vulnerable algorithms detected due to lack of explicit evidence such as library imports, specific function calls, or algorithm names in the code.",data/test_files/assembly_binary/stream_generator_operations.s,0,0,0,1760165387.992087,
stream_keygeneration_operations,xai,grok-3-mini,assembly_binary,False,True,0.0,0,11.364572048187256,True,No vulnerable cryptographic algorithms or patterns were explicitly detected in the provided code.,data/test_files/assembly_binary/stream_keygeneration_operations.s,0,0,0,1760165400.3586318,
triple_des_encryption_module,xai,grok-3-mini,assembly_binary,True,True,0.9,1,10.640831470489502,True,Detected 3DES as a vulnerable symmetric cipher based on explicit documentation in the code.,data/test_files/assembly_binary/triple_des_encryption_module.s,0,0,0,1760165412.001576,
vpn_tunnel_encryption_engine,xai,grok-3-mini,assembly_binary,True,True,0.0,0,9.198601007461548,True,No vulnerable cryptographic algorithms or patterns were detected in the provided code.,data/test_files/assembly_binary/vpn_tunnel_encryption_engine.s,0,0,0,1760165422.201406,
x25519_key_agreement,xai,grok-3-mini,assembly_binary,True,True,0.9,1,14.150434732437134,True,Detected elliptic curve operations based on explicit comments and function calls; no other vulnerable algorithms identified.,data/test_files/assembly_binary/x25519_key_agreement.s,0,0,0,1760165437.352624,
apache_legacy_ssl,xai,grok-3-mini,logs_config,True,True,0.8,7,24.03618812561035,True,"Detected RSA, ECC, DH, 3DES, TLSv1.0, OpenSSL, and legacy ciphers based on explicit configuration directives.",data/test_files/logs_config/apache_legacy_ssl.conf,0,0,0,1760165462.389859,
automotive_v2x_system,xai,grok-3-mini,logs_config,True,True,0.0,0,9.925134897232056,True,"No explicit evidence of cryptographic function calls, library imports, or API usage was found in the provided configuration and logs; all detections are not possible based on the given constraints.",data/test_files/logs_config/automotive_v2x_system.yaml,0,0,0,1760165473.3158438,
blockchain_node_security,xai,grok-3-mini,logs_config,True,True,0.8,7,17.626009225845337,True,"Detected configurations using ECC and symmetric ciphers that may be quantum-vulnerable, along with planned migration to quantum-resistant algorithms.",data/test_files/logs_config/blockchain_node_security.conf,0,0,0,1760165491.9430008,
cloud_hsm_operations,xai,grok-3-mini,logs_config,True,True,0.85,8,17.248298168182373,True,"Detected RSA, ECC, AES, and related configurations with explicit evidence in logs; no evidence for Korean algorithms or legacy protocols.",data/test_files/logs_config/cloud_hsm_operations.log,0,0,0,1760165510.1928973,
cloud_storage_encryption,xai,grok-3-mini,logs_config,True,True,1.0,9,20.8974392414093,True,"Detected vulnerable configurations including RSA, ECC, 3DES, and specific warnings in logs; other areas not detected due to lack of explicit evidence.",data/test_files/logs_config/cloud_storage_encryption.conf,0,0,0,1760165532.0917776,
cryptographic_operations_detailed,xai,grok-3-mini,logs_config,True,True,1.0,7,22.65757131576538,True,"Detected explicit references to Elliptic Curve, DH, quantum-vulnerable operations, legacy digest, Korean standards compliance, warnings for vulnerable operations, and migration planning based on log entries.",data/test_files/logs_config/cryptographic_operations_detailed.log,0,0,0,1760165555.7518802,
database_encryption_setup,xai,grok-3-mini,logs_config,True,True,0.9,8,15.906064748764038,True,"Detected potential vulnerabilities in SEED, ARIA, TripleCipher, and ECB mode based on explicit log entries; other areas not detected.",data/test_files/logs_config/database_encryption_setup.log,0,0,0,1760165572.6592944,
email_server_crypto,xai,grok-3-mini,logs_config,True,True,0.8,7,20.997490167617798,True,"Detected configurations for RSA, ECC, DH, 3DES, and legacy S/MIME, indicating potential quantum vulnerabilities in certificate and symmetric cipher settings.",data/test_files/logs_config/email_server_crypto.conf,0,0,0,1760165594.6598063,
enterprise_banking_pki_configuration,xai,grok-3-mini,logs_config,True,True,0.7,6,18.688413619995117,True,"Detected explicit references to RSA, ECC, DH, ARIA, and HAS-160 in configuration settings.",data/test_files/logs_config/enterprise_banking_pki_configuration.conf,0,0,0,1760165614.3493829,
financial_payment_gateway,xai,grok-3-mini,logs_config,True,True,0.85,8,17.71440076828003,True,"Detected vulnerabilities in RSA, DH, 3DES, TLS_RSA_WITH_AES_128_CBC_SHA, and legacy protocols based on explicit configuration and log entries.",data/test_files/logs_config/financial_payment_gateway.conf,0,0,0,1760165633.0644677,
healthcare_ehr_system,xai,grok-3-mini,logs_config,True,True,0.85,8,18.041213512420654,True,"Detected configurations and logs indicating RSA, ECC, DSA, and legacy cipher usages as quantum-vulnerable elements based on explicit references in the provided data.",data/test_files/logs_config/healthcare_ehr_system.yaml,0,0,0,1760165652.107713,
iot_device_firmware_config,xai,grok-3-mini,logs_config,True,True,0.9,5,17.071096658706665,True,"Detected configurations related to elliptic curve, SSL/TLS cipher suites, cryptographic library, certificate authority, and authentication/key management; no evidence for RSA, discrete logarithm algorithms, Korean algorithms, symmetric ciphers, logs, legacy settings, or migrations.",data/test_files/logs_config/iot_device_firmware_config.yaml,0,0,0,1760165670.1827738,
korean_crypto_library_config,xai,grok-3-mini,logs_config,True,True,0.85,8,17.32513952255249,True,"Detected explicit configurations for Korean algorithms, ECC, symmetric ciphers, cryptographic library settings, certificate/PKI, key management, legacy support, and Korean compliance; no evidence for RSA, SSL/TLS, or migration logs.",data/test_files/logs_config/korean_crypto_library_config.ini,0,0,0,1760165688.5089564,
military_secure_comms,xai,grok-3-mini,logs_config,True,True,0.85,10,23.643078088760376,True,"Detected vulnerable elements include ECC configurations, LSH parameters, symmetric ciphers like TripleCipher and Blowfish, and various legacy settings with explicit evidence from configurations and logs.",data/test_files/logs_config/military_secure_comms.conf,0,0,0,1760165713.153434,
mobile_app_security_audit,xai,grok-3-mini,logs_config,True,True,0.85,8,18.571524143218994,True,"Detected vulnerabilities in RSA configurations, ECC settings, symmetric ciphers like StreamCipher-SHA, and legacy TLS protocols based on explicit log evidence.",data/test_files/logs_config/mobile_app_security_audit.log,0,0,0,1760165732.7262256,
nginx_mixed_security_gateway,xai,grok-3-mini,logs_config,False,True,0.95,7,17.407519817352295,True,"Detected configurations for RSA, ECC, ARIA, and legacy TLS protocols that may require migration to quantum-resistant alternatives based on explicit evidence in the configuration file.",data/test_files/logs_config/nginx_mixed_security_gateway.conf,0,0,0,1760165751.1370816,
quantum_safe_migration_plan,xai,grok-3-mini,logs_config,True,True,0.8,4,14.38323974609375,True,"Detected vulnerable elements include ECDSA, ECDH, DSA, and ECDHE in configurations, with evidence from explicit algorithm names in the inventory and migration sections.",data/test_files/logs_config/quantum_safe_migration_plan.yaml,0,0,0,1760165766.522413,
security_scanner_findings,xai,grok-3-mini,logs_config,True,True,0.85,10,20.882203578948975,True,"Detected vulnerable configurations including ECC, DH, StreamCipher, and Korean algorithms based on explicit log entries, with recommendations for migration to quantum-resistant alternatives.",data/test_files/logs_config/security_scanner_findings.log,0,0,0,1760165788.4053886,
ssh_server_hardened,xai,grok-3-mini,logs_config,True,True,0.9,2,11.601974725723267,True,Detected RSA and ECC configurations with explicit evidence in the file; no evidence for other categories.,data/test_files/logs_config/ssh_server_hardened.conf,0,0,0,1760165801.0083904,
ssl_legacy_banking_configuration,xai,grok-3-mini,logs_config,False,True,0.85,7,16.362279415130615,True,"Detected quantum-vulnerable configurations including elliptic curve cipher suites, DH, Triple DES, and legacy SSL/TLS settings based on explicit evidence in the configuration.",data/test_files/logs_config/ssl_legacy_banking_configuration.conf,0,0,0,1760165818.372649,
telecom_5g_network,xai,grok-3-mini,logs_config,True,True,1.0,11,20.902864456176758,True,"Detected vulnerable algorithms including RSA, elliptic curve configurations, Korean algorithms like HAS-160 and ARIA, and legacy settings with explicit evidence from configuration sections and logs.",data/test_files/logs_config/telecom_5g_network.conf,0,0,0,1760165840.2762327,
tls_cipher_negotiation_warnings,xai,grok-3-mini,logs_config,False,True,0.95,12,19.499335289001465,True,"Multiple vulnerable cryptographic elements detected, including RSA with small keys, ECC configurations, symmetric ciphers like Triple DES, and Korean algorithms, based on explicit log entries indicating their use and associated warnings.",data/test_files/logs_config/tls_cipher_negotiation_warnings.log,0,0,0,1760165860.7763193,
vpn_server_runtime,xai,grok-3-mini,logs_config,True,True,1.0,6,18.108054399490356,True,"Detected vulnerable algorithms include RSA and DH in configurations and operations, as evidenced by explicit log entries for cipher suites and key exchanges.",data/test_files/logs_config/vpn_server_runtime.log,0,0,0,1760165879.8851385,
